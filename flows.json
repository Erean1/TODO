[
    {
        "id": "d8112b18e3794244",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7357fc440e36aebb",
        "type": "tab",
        "label": "APIS",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9a024a21c0703f56",
        "type": "tab",
        "label": "Partials",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a494dcc6cc32ec33",
        "type": "tab",
        "label": "AUTH",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b3c1ef86c9e1d050",
        "type": "tab",
        "label": "Görev Takip",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d3c4fb0cefa46834",
        "type": "tab",
        "label": "Dashboard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "85ff2d8e203f5bb5",
        "type": "subflow",
        "name": "Check User",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 120,
                "wires": [
                    {
                        "id": "eb929805d807bc49"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 740,
                "y": 100,
                "wires": [
                    {
                        "id": "c7500ef4fb4169e6",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1920,
                "y": 120,
                "wires": [
                    {
                        "id": "4cdfbb42a913bcc4",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#3FADB5",
        "icon": "font-awesome/fa-user-secret"
    },
    {
        "id": "db78b07eb18119f0",
        "type": "subflow",
        "name": "Has Admin",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 200,
                "wires": [
                    {
                        "id": "a37416cd213494af"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 600,
                "y": 160,
                "wires": [
                    {
                        "id": "a37416cd213494af",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#FFAAAA",
        "icon": "font-awesome/fa-diamond"
    },
    {
        "id": "eb3bb1a5b4cedf9b",
        "type": "mongodb4-client",
        "name": "TODO DB",
        "protocol": "mongodb",
        "hostname": "localhost",
        "port": "27017",
        "dbName": "todo",
        "appName": "",
        "authSource": "",
        "authMechanism": "DEFAULT",
        "tls": false,
        "tlsCAFile": "",
        "tlsCertificateKeyFile": "",
        "tlsInsecure": false,
        "connectTimeoutMS": "30000",
        "socketTimeoutMS": "0",
        "minPoolSize": "0",
        "maxPoolSize": "100",
        "maxIdleTimeMS": "0",
        "uri": "",
        "advanced": "{}",
        "uriTabActive": "tab-uri-simple"
    },
    {
        "id": "13b56b3e9d46889f",
        "type": "jwt verify",
        "z": "85ff2d8e203f5bb5",
        "name": "accessverify",
        "alg": [
            "HS256"
        ],
        "jwkurl": "",
        "secret": "d051c56a37ecd1eb89a9412ed5912dc9",
        "key": "",
        "signvar": "token",
        "storetoken": "token",
        "x": 410,
        "y": 120,
        "wires": [
            [
                "c7500ef4fb4169e6"
            ]
        ]
    },
    {
        "id": "c7500ef4fb4169e6",
        "type": "function",
        "z": "85ff2d8e203f5bb5",
        "name": "function 4",
        "func": "// token yoksa hata çevir 2. çıkıştan\nif (msg.statusCode === 401 || msg.token.ip !== msg.req.ip) {\n    msg.payload = {\n        refreshToken : msg.refresh\n    }\n    delete msg.refresh\n    delete msg.token\n    delete msg.error\n    return [null,msg]\n}\n// token varsa tokeni al user olarak döndür\nmsg.user = msg.token\nmsg.hasAdmin = msg.user.roles.includes(\"admin\")\nmsg.verified = msg.user.validated\ndelete  msg.refresh\ndelete msg.token\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 120,
        "wires": [
            [],
            [
                "566d6dcd7935c4ef"
            ]
        ]
    },
    {
        "id": "eb929805d807bc49",
        "type": "function",
        "z": "85ff2d8e203f5bb5",
        "name": "function 5",
        "func": "// tokeni isteği yapan kullanıcının cookieslerinden çektik\nmsg.token = msg.req.cookies.accessToken || \"\"\nmsg.refresh = msg.req.cookies.refreshToken || \"\"\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 120,
        "wires": [
            [
                "13b56b3e9d46889f"
            ]
        ]
    },
    {
        "id": "205280b5f8799cc4",
        "type": "catch",
        "z": "85ff2d8e203f5bb5",
        "name": "",
        "scope": [
            "13b56b3e9d46889f"
        ],
        "uncaught": false,
        "x": 410,
        "y": 160,
        "wires": [
            [
                "c7500ef4fb4169e6"
            ]
        ]
    },
    {
        "id": "cccc0d8ea15e66be",
        "type": "http request",
        "z": "85ff2d8e203f5bb5",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost:1880/api/refresh-token",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1010,
        "y": 120,
        "wires": [
            [
                "f54ff9463b83b265"
            ]
        ]
    },
    {
        "id": "566d6dcd7935c4ef",
        "type": "function",
        "z": "85ff2d8e203f5bb5",
        "name": "function 26",
        "func": "if (msg.payload.refreshToken === \"\"){\n    delete msg.payload.refreshToken\n}\nif (!msg.payload.refreshToken) {\n    return [null,msg]\n}\n\n\nmsg.method = \"POST\"\nmsg.headers = {\n    \"Content-Type\" : \"application/json\"\n};\n\n\n\n\n\nreturn [msg,null]",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 180,
        "wires": [
            [
                "cccc0d8ea15e66be"
            ],
            [
                "30ee7439f70f7074"
            ]
        ]
    },
    {
        "id": "f54ff9463b83b265",
        "type": "function",
        "z": "85ff2d8e203f5bb5",
        "name": "function 30",
        "func": "\nif (!msg.payload){\n    return [null,msg]\n}\n\nmsg.token = msg.payload.token\n\n\n\n\nreturn [msg,null]",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 120,
        "wires": [
            [
                "ba7e037b552eb0ed"
            ],
            [
                "a3c1e8a32f4d8736"
            ]
        ]
    },
    {
        "id": "30ee7439f70f7074",
        "type": "http response",
        "z": "85ff2d8e203f5bb5",
        "name": "",
        "statusCode": "302",
        "headers": {
            "location": "/login"
        },
        "x": 980,
        "y": 240,
        "wires": []
    },
    {
        "id": "a3c1e8a32f4d8736",
        "type": "http response",
        "z": "85ff2d8e203f5bb5",
        "name": "",
        "statusCode": "401",
        "headers": {
            "location": "/login"
        },
        "x": 1360,
        "y": 200,
        "wires": []
    },
    {
        "id": "ba7e037b552eb0ed",
        "type": "jwt verify",
        "z": "85ff2d8e203f5bb5",
        "name": "",
        "alg": [
            "HS256"
        ],
        "jwkurl": "",
        "secret": "d051c56a37ecd1eb89a9412ed5912dc9",
        "key": "",
        "signvar": "token",
        "storetoken": "token",
        "x": 1450,
        "y": 120,
        "wires": [
            [
                "4cdfbb42a913bcc4"
            ]
        ]
    },
    {
        "id": "4cdfbb42a913bcc4",
        "type": "function",
        "z": "85ff2d8e203f5bb5",
        "name": "function 31",
        "func": "// token yoksa hata çevir 2. çıkıştan\nif (!msg.token || msg.token.ip !== msg.req.ip || msg.error) {\n    return [null,msg]\n}\n\n\nmsg.headers = msg.headers || {};\nmsg.headers['Set-Cookie'] = [\n    `accessToken=${msg.payload.token}; HttpOnly; Secure; Path=/; Max-age=3600`,]\n// token varsa tokeni al user olarak döndür\nmsg.user = msg.token\nmsg.hasAdmin = msg.user.roles.includes(\"admin\")\nmsg.verified = msg.user.validated\nmsg.statusCode =302\nmsg.headers.location = \"/\"\n\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 120,
        "wires": [
            [],
            [
                "d18dece571cb2354"
            ]
        ]
    },
    {
        "id": "d18dece571cb2354",
        "type": "http response",
        "z": "85ff2d8e203f5bb5",
        "name": "",
        "statusCode": "401",
        "headers": {
            "location": "/login"
        },
        "x": 1860,
        "y": 180,
        "wires": []
    },
    {
        "id": "9b5faa8c12735b00",
        "type": "catch",
        "z": "85ff2d8e203f5bb5",
        "name": "",
        "scope": [
            "cccc0d8ea15e66be"
        ],
        "uncaught": false,
        "x": 1010,
        "y": 160,
        "wires": [
            [
                "f54ff9463b83b265",
                "a51d3941115ef544"
            ]
        ]
    },
    {
        "id": "a51d3941115ef544",
        "type": "http response",
        "z": "85ff2d8e203f5bb5",
        "name": "",
        "statusCode": "401",
        "headers": {
            "location": "/login"
        },
        "x": 1220,
        "y": 280,
        "wires": []
    },
    {
        "id": "a37416cd213494af",
        "type": "function",
        "z": "db78b07eb18119f0",
        "name": "function 7",
        "func": "if (msg.user && msg.user.roles && msg.user.roles.includes(\"admin\")) return msg\n\nreturn [null,msg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 200,
        "wires": [
            [],
            [
                "ed88edb1b2b59ad7"
            ]
        ]
    },
    {
        "id": "ed88edb1b2b59ad7",
        "type": "http response",
        "z": "db78b07eb18119f0",
        "name": "",
        "statusCode": "302",
        "headers": {
            "location": "/login"
        },
        "x": 600,
        "y": 240,
        "wires": []
    },
    {
        "id": "b43d1f4f68d54d28",
        "type": "http in",
        "z": "d8112b18e3794244",
        "name": "",
        "url": "/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 400,
        "wires": [
            [
                "04b3861bb193429d"
            ]
        ]
    },
    {
        "id": "1b9146e8d8077382",
        "type": "http response",
        "z": "d8112b18e3794244",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 825.8570938110352,
        "y": 401.14277839660645,
        "wires": []
    },
    {
        "id": "cdb2acd15c941da3",
        "type": "template",
        "z": "d8112b18e3794244",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Yapılacaklar Listesi</title>\n\n  <!-- CSS -->\n  <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n  <link rel=\"stylesheet\" href=\"/font/bootstrap-icons.min.css\" />\n  <link href=\"https://unpkg.com/survey-core/survey-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n  <link href=\"https://cdn.datatables.net/2.3.2/css/dataTables.dataTables.min.css\" rel=\"stylesheet\">\n  <link rel=\"stylesheet\" href=\"https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css\">\n  <link href=\"https://unpkg.com/survey-core/defaultV2.min.css\" rel=\"stylesheet\" />\n\n\n  <!-- Custom CSS -->\n  <style>\n    :root {\n      --primary-color: #4e73df;\n      --secondary-color: #f8f9fc;\n      --accent-color: #2e59d9;\n      --text-dark: #5a5c69;\n    }\n\n    body {\n      background-color: #f8f9fc;\n      color: var(--text-dark);\n      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    }\n\n    .navbar {\n      background: linear-gradient(135deg, var(--primary-color) 0%, var(--accent-color) 100%) !important;\n      box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);\n    }\n\n    .navbar-brand {\n      font-weight: 800;\n      letter-spacing: 1px;\n    }\n\n    .nav-link {\n      font-weight: 500;\n      padding: 0.5rem 1rem;\n      border-radius: 0.35rem;\n      transition: all 0.3s;\n    }\n\n    .nav-link:hover {\n      background-color: rgba(255, 255, 255, 0.1);\n    }\n\n    .card {\n      border: none;\n      border-radius: 0.35rem;\n      box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.1);\n      margin-bottom: 1.5rem;\n    }\n\n    .card-header {\n      background-color: var(--secondary-color);\n      border-bottom: 1px solid #e3e6f0;\n      font-weight: 600;\n      padding: 1rem 1.35rem;\n    }\n\n    .btn-primary {\n      background-color: var(--primary-color);\n      border-color: var(--primary-color);\n    }\n\n    .btn-primary:hover {\n      background-color: var(--accent-color);\n      border-color: var(--accent-color);\n    }\n\n    .user-info {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n    }\n\n    .user-avatar {\n      width: 32px;\n      height: 32px;\n      border-radius: 50%;\n      background-color: white;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-weight: bold;\n      color: var(--primary-color);\n    }\n\n    .admin-btn {\n      width: 50px;\n      height: 50px;\n      border-radius: 50%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.3);\n    }\n\n    /* Responsive adjustments */\n    @media (max-width: 768px) {\n      .navbar .container-fluid {\n        flex-direction: column;\n        align-items: flex-start;\n      }\n\n      .navbar .d-flex {\n        width: 100%;\n        justify-content: space-between;\n        margin-top: 0.5rem;\n      }\n\n      .nav-link {\n        padding: 0.5rem;\n        font-size: 0.9rem;\n      }\n\n      .user-info {\n        flex-direction: column;\n        align-items: flex-end;\n        gap: 0.2rem;\n      }\n\n      .user-info span {\n        font-size: 0.8rem;\n      }\n    }\n\n    @media (max-width: 576px) {\n      .navbar .d-flex:first-child {\n        flex-wrap: wrap;\n      }\n\n      .nav-link {\n        margin-bottom: 0.2rem;\n      }\n    }\n  </style>\n</head>\n\n<body>\n  <!-- Navbar -->\n  <nav class=\"navbar navbar-expand-lg bg-dark text-white p-2 sticky-top\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand me-3\" href=\"\">TODO</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarContent\"\n              aria-controls=\"navbarContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div class=\"collapse navbar-collapse\" id=\"navbarContent\">\n        <div class=\"d-flex flex-grow-1\">\n          <ul class=\"navbar-nav me-auto\">\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#addTodo\"><i class=\"bi bi-plus-circle me-1\"></i>Görev Ekle</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#myTodos\"><i class=\"bi bi-list-check me-1\"></i>Görevlerim</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#completedTodos\"><i class=\"bi bi-people me-1\"></i>Biten Görevlerim</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#userProfile\"><i class=\"bi bi-people me-1\"></i>Profilim</a>\n            </li>\n            {{#hasAdmin}}\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#addUser\"><i class=\"bi bi-person-plus me-1\"></i>Kullanıcı Ekle</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#userList\"><i class=\"bi bi-people me-1\"></i>Kullanıcılar</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#logs\"><i class=\"bi bi-people me-1\"></i>Loglar</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#dashboard\"><i class=\"bi bi-people me-1\"></i>Dashboard</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#addCategory\"><i class=\"bi bi-people me-1\"></i>Kategori Ekle</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#categoryList\"><i class=\"bi bi-people me-1\"></i>Kategoriler</a>\n            </li>\n            {{/hasAdmin}}\n          </ul>\n          {{^verified}}\n          <a class=\"nav-link\" href=\"#\" onclick=\"sendVerificationEmail()\"><i class=\"bi bi-people me-1\"></i>Onayla</a>\n          {{/verified}}\n\n          <div class=\"user-info\">\n            <span>{{user.displayName}} <small class=\"text-white-50\">| {{user.username}}</small></span>\n            <a href=\"#logout\" class=\"btn btn-sm btn-danger ms-2\"><i class=\"bi bi-power\"></i> Çıkış</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </nav>\n\n  <!-- Main Content -->\n  <div class=\"container py-4\">\n    <div class=\"row\">\n      <div class=\"col-lg-10 mx-auto\">\n        <div id=\"contentContainer\" class=\"card\">\n          <div class=\"card-body p-4\">\n\n            <div class=\"text-center py-5\">\n              <i class=\"bi bi-list-task\" style=\"font-size: 3rem; color: #ddd;\"></i>\n              <h5 class=\"mt-3 text-muted\">Bir bölüm seçin</h5>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n\n  <!-- JavaScript -->\n  <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\"\n    integrity=\"sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=\" crossorigin=\"anonymous\"></script>\n  <script type=\"text/javascript\" src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n  <script type=\"text/javascript\" src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n  <script src=\"https://cdn.datatables.net/2.3.2/js/dataTables.min.js\"></script>\n  <script src=\"https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js\"></script>\n  <script src=\"/js/bootstrap.bundle.min.js\"></script>\n  <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n  <script type=\"module\" src=\"/js/navigation.js\"></script>\n  <script type=\"module\" src=\"/js/form.js\"></script>\n\n\n  <script>\n    const userEmail  = \"{{user.email}}\";\n    const sendVerificationEmail = async () => {\n    try{\n        const res = await fetch (\"/api/verifyUser\",{\n            method : \"POST\",\n            headers : {\n            \"Content-Type\" : \"application/json\"\n            },\n            body : JSON.stringify({email : userEmail })\n        });\n        if (!res.ok){\n          throw new Error(res.status);\n          }\n            \n          const data = await res.json();\n          console.log(data)\n          alert(\"Lütfen MAİLİNİZİ KONTROL EDİNİZ\")\n    } catch (error){\n        alert(\"Bir Hata oluştu\")\n        window.location = \"/\"\n    }\n  }\n  \n  \n  </script>\n\n  <script>\n    // Initialize tooltips\n    document.addEventListener('DOMContentLoaded', function() {\n      const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\n      const tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\n        return new bootstrap.Tooltip(tooltipTriggerEl);\n      });\n\n    });\n\n  </script>\n</body>\n\n</html>",
        "output": "str",
        "x": 640,
        "y": 400,
        "wires": [
            [
                "1b9146e8d8077382",
                "9874f510a528531d"
            ]
        ]
    },
    {
        "id": "4345a911bceedd8a",
        "type": "inject",
        "z": "d8112b18e3794244",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110.99996948242188,
        "y": 175.0000467300415,
        "wires": [
            [
                "9c7170ee9629c746"
            ]
        ]
    },
    {
        "id": "076fdfc277051bda",
        "type": "link out",
        "z": "d8112b18e3794244",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "76e21d0b94ca381e"
        ],
        "x": 945.9999694824219,
        "y": 175.0000467300415,
        "wires": []
    },
    {
        "id": "04b3861bb193429d",
        "type": "subflow:85ff2d8e203f5bb5",
        "z": "d8112b18e3794244",
        "name": "",
        "x": 425.85709381103516,
        "y": 401.14277839660645,
        "wires": [
            [
                "cdb2acd15c941da3"
            ],
            [
                "cdb2acd15c941da3"
            ]
        ]
    },
    {
        "id": "ab6ccb07c3afbff5",
        "type": "mongodb4",
        "z": "d8112b18e3794244",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "count",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 510,
        "y": 80,
        "wires": [
            [
                "0bd86dfa64719da0"
            ]
        ]
    },
    {
        "id": "62fcce3c836f0722",
        "type": "mongodb4",
        "z": "d8112b18e3794244",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 920,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "104adaa25892314c",
        "type": "inject",
        "z": "d8112b18e3794244",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 80,
        "wires": [
            [
                "e37f5a058907c7cc"
            ]
        ]
    },
    {
        "id": "0bd86dfa64719da0",
        "type": "function",
        "z": "d8112b18e3794244",
        "name": "function 8",
        "func": "const date = new Date();\nconst now = date.getTime()\n\nif (msg.payload) return\nmsg.payload = {\n    \"_id\" : now,\n    \"active\": true,\n    \"roles\": [\n        \"admin\"\n    ],\n    \"validated\" : true,\n    \"stamp\": {\n        \"createdAt\": 1751898167501,\n        \"ip\": \"127.0.0.1\",\n        \"username\": \"Ereans\",\n        \"email\": \"erencit55@gmail.com\"\n    },\n    \"date\": date.toLocaleDateString(\"TR\"),\n    \"time\": date.toLocaleTimeString(\"TR\"),\n    \"username\": \"Ereans\",\n    \"password\": \"$2y$10$NvX/HC/DyIwnlR5PwgosIeR1JQbkG3zgb5aR1WIAoclrd.BQT3aum\",\n    \"email\": \"erencit55@gmail.com\",\n    \"displayName\": \"Eren Çit\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 80,
        "wires": [
            [
                "62fcce3c836f0722"
            ]
        ]
    },
    {
        "id": "e37f5a058907c7cc",
        "type": "function",
        "z": "d8112b18e3794244",
        "name": "function 9",
        "func": "msg.payload = {\n    username : \"Ereans\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 80,
        "wires": [
            [
                "ab6ccb07c3afbff5"
            ]
        ]
    },
    {
        "id": "272298e2863c7120",
        "type": "mongodb4",
        "z": "d8112b18e3794244",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "todo",
        "operation": "find",
        "output": "forEach",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 490.9999694824219,
        "y": 175.0000467300415,
        "wires": [
            [
                "fb078a267fd993bc"
            ]
        ]
    },
    {
        "id": "9c7170ee9629c746",
        "type": "function",
        "z": "d8112b18e3794244",
        "name": "function 13",
        "func": "msg.payload  = {\n    schedule : {\n        $exists : 1\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310.9999694824219,
        "y": 175.0000467300415,
        "wires": [
            [
                "272298e2863c7120"
            ]
        ]
    },
    {
        "id": "fb078a267fd993bc",
        "type": "change",
        "z": "d8112b18e3794244",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload.schedule.options",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730.9999694824219,
        "y": 175.0000467300415,
        "wires": [
            [
                "076fdfc277051bda"
            ]
        ]
    },
    {
        "id": "9874f510a528531d",
        "type": "debug",
        "z": "d8112b18e3794244",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 340,
        "wires": []
    },
    {
        "id": "0ac019b8f42518dc",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "302",
        "headers": {},
        "x": 520.9999961853027,
        "y": 104.99999809265137,
        "wires": []
    },
    {
        "id": "ef2b6e9e89620457",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 20",
        "func": "msg.headers =  msg.headers || {};\n\nmsg.headers[\"Set-Cookie\"] = [\n    'accessToken=; HttpOnly; Secure; Path=/; Max-Age=0',\n    'refreshToken=; HttpOnly; Secure; Path=/; Max-Age=0',\n]\nconst logData = {\n    action : \"logout\",\n    user : msg.user?.email || \"bilinmiyor\",\n    timestamp : new Date().toLocaleString(\"TR\"),\n    ip : msg.req?.ip || \"bilinmiyor\"\n}\n\nconst logResponse = {\n    payload : logData\n}\n\n\nreturn [msg,logResponse]",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340.99999618530273,
        "y": 104.99999809265137,
        "wires": [
            [
                "0ac019b8f42518dc"
            ],
            [
                "af35d8e71f95fd4b"
            ]
        ]
    },
    {
        "id": "ee5fc5c3dc5c5a53",
        "type": "http in",
        "z": "7357fc440e36aebb",
        "name": "",
        "url": "/api/logout",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160.99999618530273,
        "y": 104.99999809265137,
        "wires": [
            [
                "ef2b6e9e89620457"
            ]
        ]
    },
    {
        "id": "40bc04c88d13480e",
        "type": "comment",
        "z": "7357fc440e36aebb",
        "name": "LOGOUT",
        "info": "",
        "x": 140,
        "y": 60,
        "wires": []
    },
    {
        "id": "b786d864f0108b86",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "db.todo.find()",
        "func": "const now = new Date()\nlet query = msg.user.roles.includes(\"admin\") ? {done : false,due_date: {$gte : now} } : {\n    \"stamp.username\" : msg.user.username,\n    done : false,\n    due_date : {$gte : now}\n    \n}\nmsg.payload = [[\n    {\n        $match : query\n    },\n    {\n        $sort : {\n            \"stamp.createdAt\" : -1\n        }\n    },\n]]\n\nmsg.hasAdmin = msg.user.roles.includes(\"admin\")\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 300,
        "wires": [
            [
                "40507340f6e543cc"
            ]
        ]
    },
    {
        "id": "40507340f6e543cc",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "todo",
        "operation": "aggregate",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 780,
        "y": 300,
        "wires": [
            [
                "4ed245fcf3b20cc3"
            ]
        ]
    },
    {
        "id": "e79ed9a41bd31307",
        "type": "http in",
        "z": "7357fc440e36aebb",
        "name": "",
        "url": "/api/myTodos",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 300,
        "wires": [
            [
                "dd5b89efb68f0694"
            ]
        ]
    },
    {
        "id": "959d5fb4a0851a8b",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1560,
        "y": 280,
        "wires": []
    },
    {
        "id": "b338ea1c68456de5",
        "type": "comment",
        "z": "7357fc440e36aebb",
        "name": "TODO LIST",
        "info": "",
        "x": 150,
        "y": 240,
        "wires": []
    },
    {
        "id": "896689446630c146",
        "type": "http in",
        "z": "7357fc440e36aebb",
        "name": "",
        "url": "/api/operation/:type",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 560,
        "wires": [
            [
                "740bd08d424da0d9"
            ]
        ]
    },
    {
        "id": "740bd08d424da0d9",
        "type": "subflow:85ff2d8e203f5bb5",
        "z": "7357fc440e36aebb",
        "name": "",
        "x": 470,
        "y": 560,
        "wires": [
            [
                "2cf1c9ccf564e8d6"
            ],
            [
                "2cf1c9ccf564e8d6"
            ]
        ]
    },
    {
        "id": "2cf1c9ccf564e8d6",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "validation",
        "func": "const typeLookup = {\n    trash: {\n        text: \"Silmek\",\n        requireArgs : [\"_id\"]\n    },\n    complete: {\n        text : \"Tamamlamak\",\n        requireArgs : [\"_id\"]\n    },\n    open: {\n        text : \"Açmak\",\n        requireArgs : [\"_id\"]\n    },\n    add : {\n        text : \"Eklemek\",\n        requireArgs : [\"name\",\"priority\",\"due_date\",\"categoryId\"]\n    },\n    update : {\n        text : \"Güncellemek\",\n        requireArgs : [\"_id\",\"name\"]\n    },\n    schedule: {\n        text: \"Hatırlatma Kurmak\",\n        requireArgs: [\"_id\"]\n    },\n}\n// Typlerimizi Mapledik burada \n\nconst type = msg.req.params.type\n\n// typelookup objesinin keylerine gidicek keylerde bu type var mi diye bakacak\nif (!Object.keys(typeLookup).includes(type)) {\n    msg.payload = {\n        success : false,\n        error: `${type} geçersiz bir parametredir `\n    }\n    // eğer bulamazsak 2. çıkışıtan msgyi içinde error olacak şekilde fırlattık\n    return [null, msg]\n}\n\n\n// burada ise typeLookup[type].requireArgslerin hepsinin içinde döngüyle geeziyoruz every olduğu için hepsi olmak zorunda \nif (!typeLookup[type].requireArgs.every(arg => msg.payload[arg])) {\n    msg.payload = {\n        success :false,\n        error: \"Lütfen Tüm alanları eksiksiz doldurunuz\"\n    }\n    // eğer bir tanesi bile yoksa 2. çıkıştan msg ile error döner\n    return [null, msg]\n}\nmsg.formData = msg.payload\nif (msg.formData?.categoryId){\n    msg.payload = {\n        _id: msg.formData.categoryId\n    }\n}\n\n\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 560,
        "wires": [
            [
                "3eecaa28767f6aab"
            ],
            [
                "4f89f5bfbc63161c"
            ]
        ],
        "outputLabels": [
            "Valid",
            "Invalid"
        ]
    },
    {
        "id": "cf0ab06fa2e1711d",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "db.todo.opt()",
        "func": "const date = new Date()\nconst now = date.getTime()\nlet category = null;\nif (msg.payload) {\n    category = msg.payload\n}\n\nconst logData = {\n    action: msg.req?.params.type || \"boş\",\n    user: msg.user?.email || \"\",\n    timestamp: new Date().toLocaleString(\"TR\"),\n    ip: msg.req?.ip || \"bilinmiyor\"\n}\nconst msgForLog = {\n    payload: logData\n}\nlet done = null;\nif (msg.formData.due_date < date.toISOString() + 24 * 60 * 60 * 1000){\n    done = true;\n} else {\n    done = false\n}\n\nconst due_date = new Date(msg.formData.due_date)\n\nif (msg.req.params.type === \"add\") {\n    const insertQuery = {\n        id: now,\n        name: msg.formData.name,\n        done: done,\n        priority: msg.formData.priority,\n        due_date: due_date,\n        categoryId: category._id,\n        stamp: {\n            createdAt: now,\n            ip: msg.req.ip,\n            username: msg.user.username || \"\",\n            email: msg.user.email || \"\",\n        },\n        date: date.toLocaleDateString(\"TR\"),\n        time: date.toLocaleTimeString(\"TR\")\n    } \n    msg.payload = insertQuery\n    return [msg, null, msgForLog]\n}\n\n\n\n\n\nlet query = {\n    _id: msg.formData._id\n}\nmsg.payload = [query];\n\n\n\nreturn [null, msg, msgForLog]\n\n\n\n\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 520,
        "wires": [
            [
                "a31da0fe609e8a3e"
            ],
            [
                "d39bd054e0ace37e"
            ],
            [
                "461c351409a6d868"
            ]
        ],
        "outputLabels": [
            "Succ",
            "Err",
            ""
        ]
    },
    {
        "id": "a31da0fe609e8a3e",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "todo",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 1100,
        "y": 400,
        "wires": [
            [
                "d695a57c02f4c794"
            ]
        ]
    },
    {
        "id": "d39bd054e0ace37e",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "todo",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 1200,
        "y": 540,
        "wires": [
            [
                "c1039dd81e56699e"
            ]
        ]
    },
    {
        "id": "d695a57c02f4c794",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "201",
        "headers": {
            "location": "/",
            "content-type": "application/json"
        },
        "x": 1280,
        "y": 400,
        "wires": []
    },
    {
        "id": "c1039dd81e56699e",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 12",
        "func": "const date = new Date()\nconst now = date.getTime()\nmsg.todo = msg.payload\nif (!msg.todo) {\n    msg.payload = {\n        success: false,\n        error: \"Id ile eşleşen bir kayıt bulunamadı.\"\n    }\n    return [null, msg];\n}\n\nif (msg.todo.stamp.username !== msg.user.username && !msg.user.roles.includes(\"admin\")) {\n    msg.payload = {\n        success :false,\n        error: \"Yetkisiz Erişim\"\n    }\n}\n\nif (msg.req.params.type === \"update\" && msg.todo.done) {\n    msg.payload = {\n        success: false,\n        message: \"Tamamlanan işler güncellenemez.\"\n    }\n    return [null, msg];\n}\nmsg.payload = [\n    {\n        _id: msg.formData._id\n    },\n]\n\n\nif (msg.req.params.type === \"trash\") {\n    msg.operation = \"deleteOne\"\n} else if (msg.req.params.type === \"schedule\") {\n    let scheduleOptions = msg.scheduleOptions = {\n        \"crontiMethod\": \"onIntervalTime\",\n        \"crontiArgs\": [\n            msg.formData.datetime,\n            msg.formData.datetime\n        ]\n    }\n    msg.payload.push({\n        $set: {\n            schedule: {\n                formData: msg.formData,\n                options: scheduleOptions\n            },\n        }\n    })\n    msg.operation = \"updateOne\"\n} else {\n    msg.operation = \"updateOne\"\n    switch (msg.req.params.type) {\n        case \"complete\":\n            msg.payload.push({\n                $set: {\n                    completedDate : new Date().toLocaleDateString(\"TR\"),\n                    done: true\n                }\n            })\n            break;\n        case \"open\":\n            msg.payload.push({\n                $set: {\n                    done: false\n                }\n            })\n            break;\n        case \"update\":\n            msg.payload.push({\n                $set: {\n                    name: msg.formData.name\n                }\n            })\n            break;\n    }\n    msg.payload[1].$set.stamp = {\n        createdAt: now,\n        ip: msg.req.ip,\n        username: msg.user.username || \"\",\n        email: msg.user.email || \"\"\n    }\n    msg.payload[1].$set.date = date.toLocaleDateString(\"TR\"),\n        msg.payload[1].$set.time = date.toLocaleTimeString(\"TR\")\n}\n\n\nreturn msg.scheduleOptions ? [msg, null, msg] : msg;",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 460,
        "wires": [
            [
                "3f6932f99e2dab32"
            ],
            [
                "cbc9619dada1ac64"
            ],
            [
                "25988edf59d5c388"
            ]
        ]
    },
    {
        "id": "3f6932f99e2dab32",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "todo",
        "operation": "",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 1610,
        "y": 400,
        "wires": [
            [
                "116d4707fcf4d9ee"
            ]
        ]
    },
    {
        "id": "25988edf59d5c388",
        "type": "change",
        "z": "7357fc440e36aebb",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "scheduleOptions",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1580,
        "y": 560,
        "wires": [
            [
                "9021f4cae42c7ec3"
            ]
        ]
    },
    {
        "id": "e34bf97f96bd77ce",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "200",
        "headers": {
            "location": "/"
        },
        "x": 2080,
        "y": 400,
        "wires": []
    },
    {
        "id": "4d308ebffb9e6605",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "deleteSchedule",
        "func": "if (msg.todo?.schedule?.response){\n    msg.payload = {\n        id : msg.todo.schedule.response.self._id\n    }\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1083.5002670288086,
        "y": 818.8571338653564,
        "wires": [
            [
                "78af2c8cdc7c7b6e"
            ]
        ]
    },
    {
        "id": "76e21d0b94ca381e",
        "type": "link in",
        "z": "7357fc440e36aebb",
        "name": "link in 2",
        "links": [
            "076fdfc277051bda",
            "9021f4cae42c7ec3"
        ],
        "x": 968.5002670288086,
        "y": 758.8571338653564,
        "wires": [
            [
                "ee0df47755e6b9c8",
                "4d308ebffb9e6605"
            ]
        ]
    },
    {
        "id": "78af2c8cdc7c7b6e",
        "type": "crontinject",
        "z": "7357fc440e36aebb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "crontiMethod": "",
        "crontiArgs": "[]",
        "inputs": 1,
        "hasButton": false,
        "x": 1263.5002670288086,
        "y": 818.8571338653564,
        "wires": [
            []
        ]
    },
    {
        "id": "ee0df47755e6b9c8",
        "type": "crontinject",
        "z": "7357fc440e36aebb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "crontiMethod": "",
        "crontiArgs": "[]",
        "inputs": 1,
        "hasButton": false,
        "x": 1103.5002670288086,
        "y": 718.8571338653564,
        "wires": [
            [
                "c87badb39970cdda"
            ]
        ]
    },
    {
        "id": "c87badb39970cdda",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "header",
        "func": "if (msg.schedule) {\n    msg.payload  = [\n        {\n            _id : msg.formData._id\n        },\n        {\n            $set : {\n                schedule: msg.response\n            }\n        }\n    ]\n    return [null,msg]\n}\n\n\nmsg.from = \"noreply <noreply@todo.com\"\nmsg.to = msg.user.email\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1303.5002670288086,
        "y": 718.8571338653564,
        "wires": [
            [
                "fd96d20ef43a1609"
            ],
            [
                "edd8bf904ee535af"
            ]
        ]
    },
    {
        "id": "fd96d20ef43a1609",
        "type": "template",
        "z": "7357fc440e36aebb",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<p>Merhaba {{todo.stamp.username}}</p>\n<p></p>\n{{todo.name}} işiniz için hatırlatmak istiyoruz :)\n<p></p>\n<p>Bilginizw</p>",
        "output": "str",
        "x": 1517.500072479248,
        "y": 709.9999885559082,
        "wires": [
            [
                "30aeea0760851db7"
            ]
        ]
    },
    {
        "id": "edd8bf904ee535af",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "todo",
        "operation": "updateOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 1472.6113510131836,
        "y": 750.0793628692627,
        "wires": [
            []
        ]
    },
    {
        "id": "30aeea0760851db7",
        "type": "e-mail",
        "z": "7357fc440e36aebb",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 1767.500072479248,
        "y": 709.9999885559082,
        "wires": []
    },
    {
        "id": "e22df40cbd6baf83",
        "type": "comment",
        "z": "7357fc440e36aebb",
        "name": "OPERATIONS",
        "info": "",
        "x": 200,
        "y": 500,
        "wires": []
    },
    {
        "id": "7bad0aa737922700",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 904,
        "y": 873.9999809265137,
        "wires": []
    },
    {
        "id": "8f07b77ebe2f5634",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 21",
        "func": "msg.payload = JSON.parse(msg.payload)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 734,
        "y": 873.9999809265137,
        "wires": [
            [
                "7bad0aa737922700"
            ]
        ]
    },
    {
        "id": "af3fa94319d2329a",
        "type": "file in",
        "z": "7357fc440e36aebb",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 564,
        "y": 873.9999809265137,
        "wires": [
            [
                "8f07b77ebe2f5634"
            ]
        ]
    },
    {
        "id": "5d7727fabfc6ce8c",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 6",
        "func": "msg.filename = \"./storage/forms/\" + msg.req.params.type + \"-options\" + \".json\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 394,
        "y": 873.9999809265137,
        "wires": [
            [
                "af3fa94319d2329a"
            ]
        ]
    },
    {
        "id": "e805bbec574179bc",
        "type": "http in",
        "z": "7357fc440e36aebb",
        "name": "",
        "url": "/api/forms/:type",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 194,
        "y": 873.9999809265137,
        "wires": [
            [
                "5d7727fabfc6ce8c"
            ]
        ]
    },
    {
        "id": "be6423880d682a23",
        "type": "comment",
        "z": "7357fc440e36aebb",
        "name": "FORMS",
        "info": "",
        "x": 180,
        "y": 820,
        "wires": []
    },
    {
        "id": "9abced9741f769d2",
        "type": "comment",
        "z": "7357fc440e36aebb",
        "name": "TABLES",
        "info": "",
        "x": 144.28570556640625,
        "y": 1032.857105255127,
        "wires": []
    },
    {
        "id": "0dd8578ab3aa95f9",
        "type": "http in",
        "z": "7357fc440e36aebb",
        "name": "",
        "url": "/api/tables/:type",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 172.85714721679688,
        "y": 1082.857192993164,
        "wires": [
            [
                "31d20fb2719f7a14"
            ]
        ]
    },
    {
        "id": "6c92aaacb3fc80ce",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1102.8571472167969,
        "y": 1082.857192993164,
        "wires": []
    },
    {
        "id": "31d20fb2719f7a14",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 22",
        "func": "msg.filename = \"./storage/tables/\" + msg.req.params.type + \"-options\" + \".json\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 452.8571472167969,
        "y": 1082.857192993164,
        "wires": [
            [
                "ae1978b97efd6c20"
            ]
        ]
    },
    {
        "id": "ae1978b97efd6c20",
        "type": "file in",
        "z": "7357fc440e36aebb",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 662.8571472167969,
        "y": 1082.857192993164,
        "wires": [
            [
                "7ea375b3dd9088cb"
            ]
        ]
    },
    {
        "id": "7ea375b3dd9088cb",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 23",
        "func": "msg.payload = JSON.parse(msg.payload)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 872.8571472167969,
        "y": 1082.857192993164,
        "wires": [
            [
                "6c92aaacb3fc80ce"
            ]
        ]
    },
    {
        "id": "b1fd7d96596fcd6c",
        "type": "http in",
        "z": "7357fc440e36aebb",
        "name": "",
        "url": "/api/userList",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 740,
        "y": 120,
        "wires": [
            [
                "ed9d327073f4c7aa"
            ]
        ]
    },
    {
        "id": "ed9d327073f4c7aa",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "db.user.find()",
        "func": "msg.payload = [[\n    {\n        $match : {}\n    },\n    {\n        $sort : {\n            \"stamp.createdAt\" : -1\n        }\n    },\n    {\n        $addFields : {\n            hasAdmin : {\n                $in : [\"admin\",\"$roles\"]\n            }\n        }\n    }\n]]\n\n\nreturn msg;\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 120,
        "wires": [
            [
                "1667c475e2d07947"
            ]
        ]
    },
    {
        "id": "1667c475e2d07947",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "aggregate",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 1180,
        "y": 120,
        "wires": [
            [
                "9d7b859d91d432c0"
            ]
        ]
    },
    {
        "id": "9d7b859d91d432c0",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1340,
        "y": 120,
        "wires": []
    },
    {
        "id": "854ec32cd2ca4689",
        "type": "http in",
        "z": "7357fc440e36aebb",
        "name": "",
        "url": "/api/user-operation/:type",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 195.71429443359375,
        "y": 1285.7143173217773,
        "wires": [
            [
                "42a14f6599ec2ff2"
            ]
        ]
    },
    {
        "id": "42a14f6599ec2ff2",
        "type": "subflow:85ff2d8e203f5bb5",
        "z": "7357fc440e36aebb",
        "name": "",
        "x": 425.71429443359375,
        "y": 1285.7143173217773,
        "wires": [
            [
                "76bccbdb518ec93c"
            ],
            [
                "76bccbdb518ec93c"
            ]
        ]
    },
    {
        "id": "76bccbdb518ec93c",
        "type": "subflow:db78b07eb18119f0",
        "z": "7357fc440e36aebb",
        "name": "",
        "x": 595.7142944335938,
        "y": 1285.7143173217773,
        "wires": [
            [
                "3b97d2f3037a7050"
            ]
        ]
    },
    {
        "id": "3b97d2f3037a7050",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "validation",
        "func": "\n\nconst typeLookup = {\n    add: {\n        text: \"Eklemek\",\n        requireArgs: [\"username\", \"password\",\"email\"],\n        validation: {\n            email(data, formData) { return /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(data)}\n        }\n    },\n    update: {\n        text: \"Güncellemek\",\n        requireArgs: [\"_id\", \"username\", \"password\", \"email\"],\n        validation: {\n            email(data,formData) { return /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(data)  }\n        }\n    }\n}\n\n// burda yine typelookup objesinin key kontrolünü yapıyoruz\nif (!Object.keys(typeLookup).includes(msg.req.params.type)) {\n    msg.payload = {\n        success : false,\n        error: `${msg.req.params.type} geçersiz bir parametredir `,\n        formData: msg.formData\n    }\n    // eğer geldiğimiz site user-edit ise 3. çıkıştan devam ediyoruz\n    return [null,msg]\n}\n\n\n// burda gene requireargslara girdik ve baktık her bir arga validasyon varsa ve validasyonun içinde argın ismi varsa\n// o fonksiyonu çalıştır yoksa true çevir çık sağ taraftada !username kısmını username olarak döndürücek\nif (!typeLookup[msg.req.params.type].requireArgs.some(arg => msg.payload[arg])){\n\n    msg.payload = {\n        success : false,\n        error : \"Lütfen Tüm Alanları Eksiksiz Doldurunuz!\",\n        formData: msg.formData\n    }\n    return [null,msg]\n    }\n\n// roles kısmı array mi arraysa böyle döndür değilse array yap\nmsg.payload.roles = Array.isArray(msg.payload.roles) ? msg.payload.roles : [msg.payload.roles]\nmsg.formData = msg.payload\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1280,
        "wires": [
            [
                "6775b57c1a373355"
            ],
            [
                "e380c2908312604a"
            ]
        ],
        "outputLabels": [
            "Valid",
            "Invalid"
        ]
    },
    {
        "id": "6775b57c1a373355",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 17",
        "func": "if (msg.req.params.type === \"add\") {\n    msg.payload = [{\n        _id: {\n            $ne: msg.formData._id\n        },\n        email: msg.formData.email\n    }]\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 1200,
        "wires": [
            [
                "bdb18612e0aa95f5"
            ]
        ]
    },
    {
        "id": "bdb18612e0aa95f5",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "count",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 1088.7143211364746,
        "y": 1193.7143096923828,
        "wires": [
            [
                "a9fa0d7be398c534"
            ]
        ]
    },
    {
        "id": "a9fa0d7be398c534",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 18",
        "func": "if (msg.payload){\n    msg.payload = {\n        success :false,\n        error: `Bu eposta adresi kullanılmaktadır.`,\n        formData : msg.formData\n    }\n    msg.payload = msg.formData\n    return [null,msg]  \n}\n\nreturn msg",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1248.7143211364746,
        "y": 1193.7143096923828,
        "wires": [
            [
                "a2299d8e95d6b8a2"
            ],
            [
                "ab1b3b51ff35c3e7"
            ]
        ]
    },
    {
        "id": "a2299d8e95d6b8a2",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 1",
        "func": "if(msg.formData.password) return msg;\ndelete msg.formData.password\n\nreturn [null,msg];  ",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 1120,
        "wires": [
            [
                "9063219a388572d5"
            ],
            [
                "a5da7d1f17305a54"
            ]
        ]
    },
    {
        "id": "9063219a388572d5",
        "type": "bcrypt",
        "z": "7357fc440e36aebb",
        "name": "",
        "action": "encrypt",
        "field": "formData.password",
        "hash": "payload",
        "target": "formData.password",
        "assignment": "assign",
        "match": "match",
        "outputs": 1,
        "rounds": "10",
        "x": 1646.7142448425293,
        "y": 1046.7143268585205,
        "wires": [
            [
                "a5da7d1f17305a54"
            ]
        ]
    },
    {
        "id": "a5da7d1f17305a54",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "db.user.opt()",
        "func": "const date = new Date()\nconst now = date.getTime()\n\n\nconst logData = {\n    action : msg.req.params?.type || \"bilinmiyor\",\n    user : msg.user?.email || \"bilinmiyor\",\n    timestamp : new Date().toLocaleString(\"TR\"),\n    ip : msg.req.ip ||\"bilinmiyor\"   \n}\nconst msgForLog = {\n    payload : logData\n}\n\nif (msg.req.params.type === \"add\") {\n    msg.payload = {\n        _id: now,\n        active: true,\n        validated : false,\n        stamp: {\n            createdAt: now,\n            ip: msg.req.ip,\n            username: \"\",\n            email: \"\",\n        },\n        roles : [\"user\"],\n        date: date.toLocaleDateString(\"TR\"),\n        time: date.toLocaleTimeString(\"TR\"),\n        // eğer başka bir veri varsa bunlarıda ekle dedik password mesela direkt eklenicek\n        ...msg.formData // destructing\n    };\n    return [msg,msgForLog]\n}\nmsg.payload = [{    \n    _id : parseInt(msg.formData._id)\n}] \n\nreturn [null,msg,msgForLog]\n\n\n\n\n\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1786.7142448425293,
        "y": 1126.7143268585205,
        "wires": [
            [
                "4c80bfc8cc23c2d1"
            ],
            [
                "deb2b10fd04bd591"
            ],
            [
                "4fc3fb7cb280308d"
            ]
        ],
        "outputLabels": [
            "Succ",
            "Err",
            ""
        ]
    },
    {
        "id": "4c80bfc8cc23c2d1",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 2020,
        "y": 1040,
        "wires": [
            [
                "5697a4298bcd5365"
            ]
        ]
    },
    {
        "id": "deb2b10fd04bd591",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 2020,
        "y": 1100,
        "wires": [
            [
                "78da0bd605dbb6d4"
            ]
        ]
    },
    {
        "id": "5697a4298bcd5365",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "201",
        "headers": {},
        "x": 2180,
        "y": 1040,
        "wires": []
    },
    {
        "id": "78da0bd605dbb6d4",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 14",
        "func": "const date = new Date();\nconst now = date.getTime()\n\nif (!msg.payload) {\n    msg.payload = {\n        success : false,\n        error: \"Id ile eşleşen bir kayıt bulunamadı.\",\n        formData: msg.formData\n    }\n    return [null, msg];\n}\n\n\nmsg.formData.active  = msg.formData.status === \"active\"\ndelete msg.formData.status\n\nconst recordId = msg.formData._id\ndelete msg.formData._id\n\nmsg.user = msg.payload\nmsg.payload = [\n    {\n        _id : parseInt(recordId)\n    },\n    {\n        $set: {\n            ...msg.formData,\n            stamp : {\n                createdAt : now,\n                ip : msg.req.ip,\n                username : msg.user.username || \"\",\n                email: msg.user.email || \"\"\n            },\n            date : date.toLocaleDateString(\"TR\"),\n            time : date.toLocaleTimeString(\"TR\")\n        }\n    }\n]\n\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2170,
        "y": 1100,
        "wires": [
            [
                "7003096b0bf05686"
            ],
            [
                "8bf68a9905d81f7d"
            ]
        ]
    },
    {
        "id": "7003096b0bf05686",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "updateOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 2350,
        "y": 1100,
        "wires": [
            [
                "ba3cd595d952f470"
            ]
        ]
    },
    {
        "id": "8bf68a9905d81f7d",
        "type": "link out",
        "z": "7357fc440e36aebb",
        "name": "link out 5",
        "mode": "link",
        "links": [],
        "x": 2291.71431350708,
        "y": 1238.7143125534058,
        "wires": []
    },
    {
        "id": "ba3cd595d952f470",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 2540,
        "y": 1100,
        "wires": []
    },
    {
        "id": "760adc2406af9f88",
        "type": "comment",
        "z": "7357fc440e36aebb",
        "name": "USER LİSTESİ",
        "info": "",
        "x": 760,
        "y": 60,
        "wires": []
    },
    {
        "id": "020aba104c5f4008",
        "type": "comment",
        "z": "7357fc440e36aebb",
        "name": "USER OPERATIONS",
        "info": "",
        "x": 182.85714721679688,
        "y": 1235.714282989502,
        "wires": []
    },
    {
        "id": "116d4707fcf4d9ee",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 24",
        "func": "msg.payload = {\n    success : true\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1810,
        "y": 400,
        "wires": [
            [
                "e34bf97f96bd77ce"
            ]
        ]
    },
    {
        "id": "4f89f5bfbc63161c",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "400",
        "headers": {
            "content-type": "application/json"
        },
        "x": 820,
        "y": 760,
        "wires": []
    },
    {
        "id": "9021f4cae42c7ec3",
        "type": "link out",
        "z": "7357fc440e36aebb",
        "name": "link out 12",
        "mode": "link",
        "links": [
            "76e21d0b94ca381e"
        ],
        "x": 1775,
        "y": 560,
        "wires": []
    },
    {
        "id": "cbc9619dada1ac64",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1650,
        "y": 460,
        "wires": []
    },
    {
        "id": "e380c2908312604a",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "400",
        "headers": {
            "content-type": "application/json"
        },
        "x": 940,
        "y": 1280,
        "wires": []
    },
    {
        "id": "ab1b3b51ff35c3e7",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "400",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1430,
        "y": 1220,
        "wires": []
    },
    {
        "id": "4337f707373ced95",
        "type": "http in",
        "z": "7357fc440e36aebb",
        "name": "",
        "url": "/api/logs",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 1360,
        "wires": [
            [
                "f78c4da52dbb84c8"
            ]
        ]
    },
    {
        "id": "f78c4da52dbb84c8",
        "type": "subflow:85ff2d8e203f5bb5",
        "z": "7357fc440e36aebb",
        "name": "",
        "x": 370,
        "y": 1360,
        "wires": [
            [
                "d0fddc2988667b6e"
            ],
            [
                "d0fddc2988667b6e"
            ]
        ]
    },
    {
        "id": "d0fddc2988667b6e",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "db.logs.find()",
        "func": "msg.payload = {}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1360,
        "wires": [
            [
                "8f786c815763cb25"
            ]
        ]
    },
    {
        "id": "8f786c815763cb25",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "logs",
        "operation": "find",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 770,
        "y": 1360,
        "wires": [
            [
                "932ef563800a4a22"
            ]
        ]
    },
    {
        "id": "932ef563800a4a22",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 960,
        "y": 1360,
        "wires": []
    },
    {
        "id": "af35d8e71f95fd4b",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "logs",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 490,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "461c351409a6d868",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "logs",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 1220,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "4fc3fb7cb280308d",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "logs",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 1960,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "dd5b89efb68f0694",
        "type": "subflow:85ff2d8e203f5bb5",
        "z": "7357fc440e36aebb",
        "name": "",
        "x": 330,
        "y": 300,
        "wires": [
            [
                "b786d864f0108b86"
            ],
            [
                "b786d864f0108b86"
            ]
        ]
    },
    {
        "id": "41569919654fd413",
        "type": "http in",
        "z": "7357fc440e36aebb",
        "name": "",
        "url": "/api/completedTodos",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 1540,
        "wires": [
            [
                "2dbb4ee959c26b47"
            ]
        ]
    },
    {
        "id": "5d2c3d0d147598f0",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 52",
        "func": "let query = msg.user.roles.includes(\"admin\") ? {\"done\" : true} : {\n    \"stamp.username\" : msg.user.username,\n    'done' : true\n}\n\nmsg.payload = [[\n    {\n        $match : query\n    },\n    {\n        $sort : {\n            \"stamp.createdAt\" : -1\n        }\n    }\n]]\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1540,
        "wires": [
            [
                "e1ccaf59dabac0ed"
            ]
        ]
    },
    {
        "id": "e1ccaf59dabac0ed",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "todo",
        "operation": "aggregate",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 860,
        "y": 1540,
        "wires": [
            [
                "cc1f154a337a35c2"
            ]
        ]
    },
    {
        "id": "2dbb4ee959c26b47",
        "type": "subflow:85ff2d8e203f5bb5",
        "z": "7357fc440e36aebb",
        "name": "",
        "x": 410,
        "y": 1540,
        "wires": [
            [
                "5d2c3d0d147598f0"
            ],
            [
                "5d2c3d0d147598f0"
            ]
        ]
    },
    {
        "id": "e3bc21342d81a4e8",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1270,
        "y": 1540,
        "wires": []
    },
    {
        "id": "3605e5f5619f8070",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 58",
        "func": "msg.payload = {\n    data : msg.todos.map(todo => ({\n        ...todo,\n        categoryName : msg.payload.name,\n        due_date : new Date(todo.due_date).toLocaleDateString(\"TR\")\n    })),\n    count : msg.todos.length\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 300,
        "wires": [
            [
                "959d5fb4a0851a8b"
            ]
        ]
    },
    {
        "id": "7b5daa422e5f5ab5",
        "type": "http in",
        "z": "7357fc440e36aebb",
        "name": "",
        "url": "/api/categoryList",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 191,
        "y": 1768.0003395080566,
        "wires": [
            [
                "5791ac6a06324467"
            ]
        ]
    },
    {
        "id": "5791ac6a06324467",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 60",
        "func": "msg.payload = {}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 441,
        "y": 1768.0003395080566,
        "wires": [
            [
                "8d2518ea5f22e5e2"
            ]
        ]
    },
    {
        "id": "8d2518ea5f22e5e2",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "category",
        "operation": "find",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 641,
        "y": 1768.0003395080566,
        "wires": [
            [
                "cbabf5f050a1dbe8"
            ]
        ]
    },
    {
        "id": "cbabf5f050a1dbe8",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 791,
        "y": 1768.0003395080566,
        "wires": []
    },
    {
        "id": "b19262d96ce982d7",
        "type": "http in",
        "z": "7357fc440e36aebb",
        "name": "",
        "url": "/api/category-operation/:type",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 1920,
        "wires": [
            [
                "af683b3ffe9bb9d2"
            ]
        ]
    },
    {
        "id": "9f6dd865d60aa3ea",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 61",
        "func": "const type = msg.req.params.type\nconst now = new Date()\nif (![\"add\",\"update\",\"delete\"].includes(type)){\n    msg.payload = {\n        success : false,\n        error : \"Geçersiz İşlem\"\n    }\n    return [null,msg]\n}\n\nconst logData = {\n    action : \"Category/\"+msg.req.params.type,\n    user : msg.user?.email || \"Bilinmiyor\",\n    timestamp : new Date().toLocaleString(\"TR\"),\n    ip : msg.req.ip\n}\n\nconst msgForLog = {\n    payload : logData\n}\n\nif (type === \"add\" && msg.payload?.name){\n    msg.payload = {\n        name : msg.payload.name,\n        stamps : {\n            createdAt : now\n        }\n    }\n    return [msg,null,null,msgForLog]\n}\n\nif (type === \"update\" || type === \"delete\"){\n    msg.payload = {\n        _id : msg.payload._id\n    }\n}\n\nreturn [null,msg,null,msgForLog]",
        "outputs": 4,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1920,
        "wires": [
            [
                "68aebd5476b88210"
            ],
            [
                "82472e6ea9d2d772"
            ],
            [
                "9cb0fec2e36beb31"
            ],
            [
                "2dd1603ce7baf7c1"
            ]
        ]
    },
    {
        "id": "99133e0e02f07ec0",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1410,
        "y": 1920,
        "wires": []
    },
    {
        "id": "9cb0fec2e36beb31",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 790,
        "y": 2000,
        "wires": []
    },
    {
        "id": "68aebd5476b88210",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "category",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 660,
        "y": 1840,
        "wires": [
            [
                "852a76ce607083f3"
            ]
        ]
    },
    {
        "id": "852a76ce607083f3",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 850,
        "y": 1840,
        "wires": []
    },
    {
        "id": "82472e6ea9d2d772",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "category",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 760,
        "y": 1920,
        "wires": [
            [
                "54f5fbb9911998e1"
            ]
        ]
    },
    {
        "id": "3eecaa28767f6aab",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "category",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 840,
        "y": 520,
        "wires": [
            [
                "cf0ab06fa2e1711d"
            ]
        ]
    },
    {
        "id": "fc6e1c7bd658e579",
        "type": "comment",
        "z": "7357fc440e36aebb",
        "name": "Kategoriler",
        "info": "",
        "x": 160,
        "y": 1700,
        "wires": []
    },
    {
        "id": "54f5fbb9911998e1",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "category",
        "operation": "deleteOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 990,
        "y": 1920,
        "wires": [
            [
                "2112934c92fd77c8"
            ]
        ]
    },
    {
        "id": "2112934c92fd77c8",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 62",
        "func": "msg.payload = {\n    success : true\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 1920,
        "wires": [
            [
                "99133e0e02f07ec0"
            ]
        ]
    },
    {
        "id": "cc1f154a337a35c2",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 63",
        "func": "msg.payload = msg.payload.map(todo => {\n    if (!(\"completedDate\" in todo)){\n        todo.completedDate = new Date(todo.due_date).toLocaleDateString(\"TR\")\n    }\n    \n    return todo\n})\nmsg.payload = {\n    data : msg.payload,\n    count: msg.payload.length\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1540,
        "wires": [
            [
                "e3bc21342d81a4e8"
            ]
        ]
    },
    {
        "id": "7b2e8a5bb7615fad",
        "type": "comment",
        "z": "7357fc440e36aebb",
        "name": "Validasyon",
        "info": "",
        "x": 140,
        "y": 2120,
        "wires": []
    },
    {
        "id": "62d12cd95305e9cb",
        "type": "http in",
        "z": "7357fc440e36aebb",
        "name": "",
        "url": "/api/verifyUser",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 2200,
        "wires": [
            [
                "97dd4d39edfc88f2"
            ]
        ]
    },
    {
        "id": "97dd4d39edfc88f2",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 65",
        "func": "const verifyToken = Math.floor(100000 + Math.random() * 900000);\nconst expireAt = new Date(Date.now() + 3 * 60 * 1000)\nmsg.otp = verifyToken\nmsg.email = msg.payload.email\nmsg.payload= {\n    email : msg.payload.email,\n    verifyToken,\n    expireAt : expireAt,\n    ip : msg.req.ip,\n    createdAt : new Date()\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 2200,
        "wires": [
            [
                "217b5497fa7de5f2"
            ]
        ]
    },
    {
        "id": "217b5497fa7de5f2",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "verify_otp",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 680,
        "y": 2200,
        "wires": [
            [
                "099204d3bf2b9cce"
            ]
        ]
    },
    {
        "id": "099204d3bf2b9cce",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 66",
        "func": "msg.to = msg.email;\nmsg.subject = \"Verification code\";\nconst link = `http://127.0.0.1:1880/verify?email=${msg.email}&token=${msg.otp}`\nmsg.verificationLink = link\n\nmsg.payload = `Merhaba Doğrulama Kodunuz ${msg.otp} Doğrulamak için Buraya ${link} Tıklayın`\n\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 2200,
        "wires": [
            [
                "4a4e0a6838f7748e"
            ]
        ]
    },
    {
        "id": "4a4e0a6838f7748e",
        "type": "e-mail",
        "z": "7357fc440e36aebb",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 1130,
        "y": 2200,
        "wires": []
    },
    {
        "id": "8c745584ced3b344",
        "type": "http in",
        "z": "7357fc440e36aebb",
        "name": "",
        "url": "/verify",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 2340,
        "wires": [
            [
                "a1a45dfe37f7d9aa"
            ]
        ]
    },
    {
        "id": "a1a45dfe37f7d9aa",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 67",
        "func": "let {email,token}= msg.payload\n\nlet verifyToken = parseInt(token)\nmsg.payload = {\n    verifyToken\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2340,
        "wires": [
            [
                "50ed9cf19a8b2e83"
            ]
        ]
    },
    {
        "id": "b502f9455fd32d9e",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "",
        "headers": {
            "location": "/"
        },
        "x": 1810,
        "y": 2300,
        "wires": []
    },
    {
        "id": "50ed9cf19a8b2e83",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "verify_otp",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 560,
        "y": 2340,
        "wires": [
            [
                "8f1278ddea2fa10c"
            ]
        ]
    },
    {
        "id": "8f1278ddea2fa10c",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 68",
        "func": "if (!msg.payload) {\n    msg.payload = {\n        success : false,\n        error : \"Token Expired\"\n    }\n    return [null,msg]\n}\nmsg.payload = {\n    email : msg.payload.email\n}\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2340,
        "wires": [
            [
                "47c78531c3e58425"
            ],
            [
                "8d8b27dbb6cd6efb"
            ]
        ]
    },
    {
        "id": "8d8b27dbb6cd6efb",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 950,
        "y": 2400,
        "wires": []
    },
    {
        "id": "47c78531c3e58425",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 940,
        "y": 2300,
        "wires": [
            [
                "06e8574be5f00e24"
            ]
        ]
    },
    {
        "id": "06e8574be5f00e24",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 69",
        "func": "msg.payload = [\n    { email: msg.payload.email },\n{\n    $set: {\n        validated: true\n    }\n}\n]\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 2300,
        "wires": [
            [
                "9b30f896f4842fda"
            ]
        ]
    },
    {
        "id": "9b30f896f4842fda",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "updateOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 1350,
        "y": 2300,
        "wires": [
            [
                "a22114a522a2e208"
            ]
        ]
    },
    {
        "id": "a22114a522a2e208",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 70",
        "func": "msg.headers = msg.headers || {}\nmsg.statusCode = 302\nmsg.headers.location = \"/\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 2300,
        "wires": [
            [
                "b502f9455fd32d9e"
            ]
        ]
    },
    {
        "id": "4ed245fcf3b20cc3",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 64",
        "func": "msg.todos = msg.payload\nmsg.payload = msg.todos.categoryId\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 300,
        "wires": [
            [
                "6749011a70231aa9"
            ]
        ]
    },
    {
        "id": "6749011a70231aa9",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "category",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 1140,
        "y": 300,
        "wires": [
            [
                "3605e5f5619f8070"
            ]
        ]
    },
    {
        "id": "2dd1603ce7baf7c1",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "logs",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 660,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "af683b3ffe9bb9d2",
        "type": "subflow:85ff2d8e203f5bb5",
        "z": "7357fc440e36aebb",
        "name": "",
        "x": 370,
        "y": 1920,
        "wires": [
            [
                "9f6dd865d60aa3ea"
            ],
            [
                "9f6dd865d60aa3ea"
            ]
        ]
    },
    {
        "id": "b056b2886304019b",
        "type": "http in",
        "z": "7357fc440e36aebb",
        "name": "",
        "url": "/api/userProfile",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 2520,
        "wires": [
            [
                "fa9c5c96f2c0c8a1",
                "c3af4d7d8f704dad"
            ]
        ]
    },
    {
        "id": "fa9c5c96f2c0c8a1",
        "type": "subflow:85ff2d8e203f5bb5",
        "z": "7357fc440e36aebb",
        "name": "",
        "x": 410,
        "y": 2520,
        "wires": [
            [
                "111d63a2c6ca8852",
                "8c8f3d11c9fadfc0"
            ],
            [
                "111d63a2c6ca8852"
            ]
        ]
    },
    {
        "id": "111d63a2c6ca8852",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 71",
        "func": "msg.payload = {\n    username : msg.user.username\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2520,
        "wires": [
            [
                "2b935d13f9e54ce4",
                "acfd3569694eca8a"
            ]
        ]
    },
    {
        "id": "2b935d13f9e54ce4",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 820,
        "y": 2520,
        "wires": [
            [
                "ac62647dd6c82436",
                "b078825b2ae1772d"
            ]
        ]
    },
    {
        "id": "6688fe77e474fb1e",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1510,
        "y": 2520,
        "wires": []
    },
    {
        "id": "ac62647dd6c82436",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 72",
        "func": "msg.payload = {\n    user_id : msg.payload._id\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2520,
        "wires": [
            [
                "fbecabf81d704407",
                "ad562f28a117a33a"
            ]
        ]
    },
    {
        "id": "fbecabf81d704407",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user_profile",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 1180,
        "y": 2520,
        "wires": [
            [
                "7d28595e59726b7e",
                "e6de6db2c2b06cdc"
            ]
        ]
    },
    {
        "id": "7d28595e59726b7e",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 73",
        "func": "msg.payload ={\n    success : true,\n    userProf : msg.payload,\n    userInf : msg.user\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 2520,
        "wires": [
            [
                "6688fe77e474fb1e",
                "922ece84bf777424"
            ]
        ]
    },
    {
        "id": "90bf36d7d3777e37",
        "type": "http in",
        "z": "7357fc440e36aebb",
        "name": "",
        "url": "/api/updateBio",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 2780,
        "wires": [
            [
                "8d93f4da80486858"
            ]
        ]
    },
    {
        "id": "8d93f4da80486858",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 74",
        "func": "const userprof_id = msg.payload.userprof_id\nmsg.bio = msg.payload.bio;\nmsg.payload = {\n    _id : userprof_id\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 2780,
        "wires": [
            [
                "b70c084830430e76"
            ]
        ]
    },
    {
        "id": "7493c4eaba1edf57",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1410,
        "y": 2780,
        "wires": []
    },
    {
        "id": "b70c084830430e76",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user_profile",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 660,
        "y": 2780,
        "wires": [
            [
                "36af71dac92f2255"
            ]
        ]
    },
    {
        "id": "36af71dac92f2255",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 76",
        "func": "node.warn((typeof msg.payload._id));\nconst bio = msg.bio\nconst id = msg.payload.user_id\nmsg.payload = [\n    { user_id: id },\n{\n    $set: {\n        bio: bio\n    }\n}\n]\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 2780,
        "wires": [
            [
                "2de1fbcb86ba087d"
            ]
        ]
    },
    {
        "id": "2de1fbcb86ba087d",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user_profile",
        "operation": "updateOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 1190,
        "y": 2780,
        "wires": [
            [
                "7493c4eaba1edf57"
            ]
        ]
    },
    {
        "id": "3736271ab3d377e3",
        "type": "comment",
        "z": "7357fc440e36aebb",
        "name": "ÖNEMLİ!!! SOR",
        "info": "updateOne gönderirken id ile gönderidğimde hata alıyorum user_id ile yaptım bnu sor",
        "x": 770,
        "y": 2860,
        "wires": []
    },
    {
        "id": "5fba918fd704698c",
        "type": "comment",
        "z": "7357fc440e36aebb",
        "name": "ÖNEMLİ",
        "info": "VERİFYDAN SONRA NEDEN VERİFY KALIYOR ONU SOR",
        "x": 550,
        "y": 2860,
        "wires": []
    },
    {
        "id": "6ba6bb8803a036d3",
        "type": "http in",
        "z": "7357fc440e36aebb",
        "name": "",
        "url": "/api/updateLocation",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 2980,
        "wires": [
            [
                "8dbfe2899eacad4e"
            ]
        ]
    },
    {
        "id": "8dbfe2899eacad4e",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 75",
        "func": "msg.location = msg.payload.location;\nmsg.payload = {\n    _id : msg.payload.userprof_id\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 2980,
        "wires": [
            [
                "549d07a035233786"
            ]
        ]
    },
    {
        "id": "549d07a035233786",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user_profile",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 710,
        "y": 2980,
        "wires": [
            [
                "342855bd6524a484"
            ]
        ]
    },
    {
        "id": "342855bd6524a484",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 77",
        "func": "const location = msg.location\nconst user_id = msg.payload.user_id\nmsg.payload = [\n    { user_id : user_id},\n    {\n        $set : {\n        location : location\n        }\n    }\n]\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 2980,
        "wires": [
            [
                "d3029d3c1cf2e8ac"
            ]
        ]
    },
    {
        "id": "d3029d3c1cf2e8ac",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user_profile",
        "operation": "updateOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 1110,
        "y": 2980,
        "wires": [
            [
                "fe37c9901b77ca56"
            ]
        ]
    },
    {
        "id": "fe37c9901b77ca56",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1330,
        "y": 2980,
        "wires": []
    },
    {
        "id": "c3af4d7d8f704dad",
        "type": "debug",
        "z": "7357fc440e36aebb",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 2460,
        "wires": []
    },
    {
        "id": "8c8f3d11c9fadfc0",
        "type": "debug",
        "z": "7357fc440e36aebb",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 590.2857055664062,
        "y": 2465.4287109375,
        "wires": []
    },
    {
        "id": "acfd3569694eca8a",
        "type": "debug",
        "z": "7357fc440e36aebb",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 2460,
        "wires": []
    },
    {
        "id": "b078825b2ae1772d",
        "type": "debug",
        "z": "7357fc440e36aebb",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 2460,
        "wires": []
    },
    {
        "id": "ad562f28a117a33a",
        "type": "debug",
        "z": "7357fc440e36aebb",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 2460,
        "wires": []
    },
    {
        "id": "e6de6db2c2b06cdc",
        "type": "debug",
        "z": "7357fc440e36aebb",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 2460,
        "wires": []
    },
    {
        "id": "922ece84bf777424",
        "type": "debug",
        "z": "7357fc440e36aebb",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1520,
        "y": 2460,
        "wires": []
    },
    {
        "id": "29e725ac8d9a80e9",
        "type": "http in",
        "z": "7357fc440e36aebb",
        "name": "",
        "url": "/api/updateImage",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 3100,
        "wires": [
            [
                "bf4b693d82e43ce5",
                "b8be254c43688202"
            ]
        ]
    },
    {
        "id": "bf4b693d82e43ce5",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 78",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 3100,
        "wires": [
            [
                "8e4c685f5979bded"
            ]
        ]
    },
    {
        "id": "8e4c685f5979bded",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 630,
        "y": 3100,
        "wires": []
    },
    {
        "id": "b8be254c43688202",
        "type": "debug",
        "z": "7357fc440e36aebb",
        "name": "debug 22",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 3060,
        "wires": []
    },
    {
        "id": "ea92999f30f3cd81",
        "type": "http in",
        "z": "9a024a21c0703f56",
        "name": "",
        "url": "/addTodo",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "75339ebc40f0fe7c"
            ]
        ]
    },
    {
        "id": "75339ebc40f0fe7c",
        "type": "template",
        "z": "9a024a21c0703f56",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\" integrity=\"sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=\" crossorigin=\"anonymous\"></script>\n    <link href=\"https://unpkg.com/survey-core/survey-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n    <link  rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n</head>\n<body>\n        \n        <div id=\"surveyContainer\"> </div> \n    \n</body>\n</html>",
        "output": "str",
        "x": 300,
        "y": 60,
        "wires": [
            [
                "f91a32bc4f9efce6"
            ]
        ]
    },
    {
        "id": "f91a32bc4f9efce6",
        "type": "http response",
        "z": "9a024a21c0703f56",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 490,
        "y": 60,
        "wires": []
    },
    {
        "id": "6b2bc9c4666ec89a",
        "type": "http in",
        "z": "9a024a21c0703f56",
        "name": "",
        "url": "/myTodos",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 112.38095092773438,
        "y": 179.99999475479126,
        "wires": [
            [
                "0b6bf06d8a096c99"
            ]
        ]
    },
    {
        "id": "0b6bf06d8a096c99",
        "type": "template",
        "z": "9a024a21c0703f56",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\" integrity=\"sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=\" crossorigin=\"anonymous\"></script>\n    <link href=\"https://unpkg.com/survey-core/survey-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n</head>\n<body>\n    <div id=\"todoCount\"> </div> \n    <br>\n<div id=\"demo\" class=\"display\" style=\"width:100%\">\n    \n    <table id=\"todoTable\" class=\"display\" style=\"width:100%\">\n        <thead>\n            <tr>\n            </tr>\n        </thead>\n        <tbody>\n            <!-- Veriler JS ile yüklenecek -->\n        </tbody>\n    </table>\n</div>\n\n\n    \n\n</body>\n</html>",
        "output": "str",
        "x": 305.7142868041992,
        "y": 179.9999861717224,
        "wires": [
            [
                "e86f0436079a9752"
            ]
        ]
    },
    {
        "id": "e86f0436079a9752",
        "type": "http response",
        "z": "9a024a21c0703f56",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 512.3809509277344,
        "y": 179.99999475479126,
        "wires": []
    },
    {
        "id": "c09adf8ada4cace5",
        "type": "template",
        "z": "9a024a21c0703f56",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\" integrity=\"sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=\" crossorigin=\"anonymous\"></script>\n    <link href=\"https://unpkg.com/survey-core/survey-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n</head>\n<body>\n    <div id=\"surveyContainer\"> </div> \n    \n</body>\n</html>",
        "output": "str",
        "x": 933.0952072143555,
        "y": 64.38101577758789,
        "wires": [
            [
                "e633d5fa3aa35ec2"
            ]
        ]
    },
    {
        "id": "55bec775c9ac9966",
        "type": "http in",
        "z": "9a024a21c0703f56",
        "name": "",
        "url": "/addUser",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 753.0952072143555,
        "y": 64.38101577758789,
        "wires": [
            [
                "c09adf8ada4cace5"
            ]
        ]
    },
    {
        "id": "e633d5fa3aa35ec2",
        "type": "http response",
        "z": "9a024a21c0703f56",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1103.0952072143555,
        "y": 64.38101577758789,
        "wires": []
    },
    {
        "id": "b7bd56084787486f",
        "type": "http in",
        "z": "9a024a21c0703f56",
        "name": "",
        "url": "/userList",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 726.9047775268555,
        "y": 183.5714168548584,
        "wires": [
            [
                "2ca176cddde2c92b"
            ]
        ]
    },
    {
        "id": "2ca176cddde2c92b",
        "type": "template",
        "z": "9a024a21c0703f56",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\" integrity=\"sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=\" crossorigin=\"anonymous\"></script>\n    <link href=\"https://unpkg.com/survey-core/survey-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n</head>\n<body>\n    \n    <div id=\"demo\" class=\"display\" style=\"width:100%\">\n    <table id=\"userTable\" class=\"display\" style=\"width:100%\">\n        <thead>\n            <tr>\n            </tr>\n        </thead>\n        <tbody>\n            <!-- Veriler JS ile yüklenecek -->\n        </tbody>\n    </table>\n</div>\n\n    \n\n\n</body>\n</html>",
        "output": "str",
        "x": 930.2381134033203,
        "y": 183.57140827178955,
        "wires": [
            [
                "4056b8369b61cd9d"
            ]
        ]
    },
    {
        "id": "4056b8369b61cd9d",
        "type": "http response",
        "z": "9a024a21c0703f56",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1136.9047775268555,
        "y": 183.5714168548584,
        "wires": []
    },
    {
        "id": "7dc909a1b99ebea2",
        "type": "http in",
        "z": "9a024a21c0703f56",
        "name": "",
        "url": "/edit/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 111.99999618530273,
        "y": 630.0001029968262,
        "wires": [
            [
                "68fc941b50b09f07",
                "19df57a499217159"
            ]
        ]
    },
    {
        "id": "68fc941b50b09f07",
        "type": "subflow:85ff2d8e203f5bb5",
        "z": "9a024a21c0703f56",
        "name": "",
        "x": 371.99999618530273,
        "y": 630.0001029968262,
        "wires": [
            [
                "afb4034377d9af0a",
                "f1f27398705cb0b1"
            ],
            [
                "afb4034377d9af0a"
            ]
        ]
    },
    {
        "id": "afb4034377d9af0a",
        "type": "function",
        "z": "9a024a21c0703f56",
        "name": "db.todo.findOne()",
        "func": "const query = {\n    _id : msg.req.params.id\n}\n\nif (!msg.user.roles.includes(\"admin\")) {\n    query[\"stamp.username\"] = msg.user.username\n}\n\nmsg.payload = [query];\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 620,
        "wires": [
            [
                "e75b99079b04948b",
                "4bd705b08468fd4a"
            ]
        ],
        "outputLabels": [
            "Success"
        ]
    },
    {
        "id": "e75b99079b04948b",
        "type": "mongodb4",
        "z": "9a024a21c0703f56",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "todo",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 815.9999961853027,
        "y": 577.0000267028809,
        "wires": [
            [
                "56ad4649d1fcdf3c",
                "b6092ad57585f0b1"
            ]
        ]
    },
    {
        "id": "56ad4649d1fcdf3c",
        "type": "function",
        "z": "9a024a21c0703f56",
        "name": "function 10",
        "func": "if (!msg.payload) {\n    msg.payload = {\n        success: false,\n        message: \"Id ile eşleşen bir kayıt bulunamadı.\"\n    }\n    return [null, msg]\n}\n\nif (msg.req.params.type === \"update\" && msg.payload.done) {\n    msg.payload = {\n        success: false,\n        message: \"Tamamlanan işler güncellenemez.\"\n    }\n    return [null, msg];\n}\nmsg.prefillDataSTR = JSON.stringify(msg.payload)\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1045.9999961853027,
        "y": 577.0000267028809,
        "wires": [
            [
                "7c99d5ae6806d6c9",
                "f32b95bfd9516c4e"
            ],
            [
                "6a40e79f2bf105de"
            ]
        ]
    },
    {
        "id": "7c99d5ae6806d6c9",
        "type": "template",
        "z": "9a024a21c0703f56",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Giriş Yap</title>\n\n  <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n  <link href=\"https://unpkg.com/survey-core/defaultV2.min.css\" rel=\"stylesheet\" />\n  <link href=\"https://unpkg.com/survey-core/survey-core.min.css\" rel=\"stylesheet\" />\n  <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\"></script>\n  <script src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n  <script src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n  <script type=\"module\" src=\"/js/form.js\"></script>\n  <script type=\"module\" src=\"/js/navigation.js\"></script>\n</head>\n\n<body>\n\n\n  <h2>Güncelle</h2>\n  <div id=\"surveyContainer\"></div>\n</body>\n\n<script> \n  window.prefillData = JSON.parse('{{{prefillDataSTR}}}')\n</script>\n\n<script type=\"module\">\n  import FormController from \"/js/form.js\";\n  const fc = new FormController();\n  (async () => {\n    await fc.loadForm(\"editTodo-form\",window.prefillData);\n  })();\n</script>\n\n</html>",
        "output": "str",
        "x": 1237,
        "y": 540.0001049041748,
        "wires": [
            [
                "63a30b5a157b51ba",
                "2c1bdb49cac66593"
            ]
        ]
    },
    {
        "id": "6a40e79f2bf105de",
        "type": "http response",
        "z": "9a024a21c0703f56",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1225.9999961853027,
        "y": 617.0000267028809,
        "wires": []
    },
    {
        "id": "63a30b5a157b51ba",
        "type": "http response",
        "z": "9a024a21c0703f56",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1407,
        "y": 540.0001049041748,
        "wires": []
    },
    {
        "id": "aeb96d498776cf84",
        "type": "http in",
        "z": "9a024a21c0703f56",
        "name": "",
        "url": "/user-edit/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 760,
        "wires": [
            [
                "9446aab10379b614"
            ]
        ]
    },
    {
        "id": "9446aab10379b614",
        "type": "subflow:85ff2d8e203f5bb5",
        "z": "9a024a21c0703f56",
        "name": "",
        "x": 303.0000247955322,
        "y": 760.9999580383301,
        "wires": [
            [
                "f57203d89cf961cc"
            ],
            [
                "f57203d89cf961cc"
            ]
        ]
    },
    {
        "id": "f57203d89cf961cc",
        "type": "subflow:db78b07eb18119f0",
        "z": "9a024a21c0703f56",
        "name": "",
        "x": 473.0000247955322,
        "y": 760.9999580383301,
        "wires": [
            [
                "70783cd0be579d67"
            ]
        ]
    },
    {
        "id": "70783cd0be579d67",
        "type": "function",
        "z": "9a024a21c0703f56",
        "name": "db.user.findOne()",
        "func": "msg.formData = msg.payload\nlet options = {\n    projection: {\n        password: 0\n    }\n}\n\nlet query = {\n    _id : parseInt(msg.req.params.id)\n}\n\n\n\n\nmsg.payload = [query, options];\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 658.0000286102295,
        "y": 750.9999599456787,
        "wires": [
            [
                "51217707a67ee8b8"
            ]
        ],
        "outputLabels": [
            "Success"
        ]
    },
    {
        "id": "51217707a67ee8b8",
        "type": "mongodb4",
        "z": "9a024a21c0703f56",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 840,
        "y": 740,
        "wires": [
            [
                "9ae9803073956904"
            ]
        ]
    },
    {
        "id": "9ae9803073956904",
        "type": "function",
        "z": "9a024a21c0703f56",
        "name": "function 15",
        "func": "if (!msg.payload) {\n    msg.payload = {\n        success : false,\n        error : \"Id ile eşleşen bir kayıt bulunamadı.\",\n        formData: msg.formData\n    }\n    return [null, msg]\n}\n\n\nmsg.hasUser = msg.payload.roles.includes(\"user\")\nmsg.hasAdmin = msg.payload.roles.includes(\"admin\")\nmsg.prefillDataSTR = JSON.stringify(msg.payload)\nmsg.payload = { ...msg.payload, ...msg.formData,}\n\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1018.0000286102295,
        "y": 750.9999599456787,
        "wires": [
            [
                "e8e746187451589d"
            ],
            [
                "b676bc7f8d8fdb2f"
            ]
        ]
    },
    {
        "id": "e8e746187451589d",
        "type": "template",
        "z": "9a024a21c0703f56",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Giriş Yap</title>\n\n  <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n  <link href=\"https://unpkg.com/survey-core/defaultV2.min.css\" rel=\"stylesheet\" />\n  <link href=\"https://unpkg.com/survey-core/survey-core.min.css\" rel=\"stylesheet\" />\n  <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\"></script>\n  <script src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n  <script src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n  <script type=\"module\" src=\"/js/form.js\"></script>\n  <script type=\"module\" src=\"/js/navigation.js\"></script>\n</head>\n\n<body>\n\n\n  <h2>Güncelle</h2>\n  <div id=\"surveyContainer\"></div>\n</body>\n<script>\n  window.prefillData = JSON.parse('{{{prefillDataSTR}}}')\n</script>\n<script type=\"module\">\n  import FormController from \"/js/form.js\";\n  const fc = new FormController();\n  (async () => {\n    await fc.loadForm(\"editUser-form\",window.prefillData);\n  })();\n</script>\n\n</html>",
        "output": "str",
        "x": 1180,
        "y": 720,
        "wires": [
            [
                "8760132cf8aeaf29"
            ]
        ]
    },
    {
        "id": "b676bc7f8d8fdb2f",
        "type": "http response",
        "z": "9a024a21c0703f56",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1190,
        "y": 780,
        "wires": []
    },
    {
        "id": "8760132cf8aeaf29",
        "type": "http response",
        "z": "9a024a21c0703f56",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1378.0000286102295,
        "y": 710.9999599456787,
        "wires": []
    },
    {
        "id": "39243cf513b2a85a",
        "type": "http in",
        "z": "9a024a21c0703f56",
        "name": "",
        "url": "/schedule/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 940,
        "wires": [
            [
                "59b1c3369d32e415"
            ]
        ]
    },
    {
        "id": "59b1c3369d32e415",
        "type": "subflow:85ff2d8e203f5bb5",
        "z": "9a024a21c0703f56",
        "name": "",
        "x": 330,
        "y": 940,
        "wires": [
            [
                "3eb7b4ad9032e7b7"
            ],
            [
                "3eb7b4ad9032e7b7"
            ]
        ]
    },
    {
        "id": "3eb7b4ad9032e7b7",
        "type": "function",
        "z": "9a024a21c0703f56",
        "name": "db.todo.scheduleStart()",
        "func": "const query = {\n    _id : msg.req.params.id\n}\n\n\nif (!msg.user.roles.includes(\"admin\")) query[\"stamp.username\"] = msg.user.username\n\nmsg.payload = [query]\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 585.0000038146973,
        "y": 930.0000019073486,
        "wires": [
            [
                "161e11b2ca64bb47"
            ]
        ],
        "outputLabels": [
            "Success"
        ]
    },
    {
        "id": "161e11b2ca64bb47",
        "type": "mongodb4",
        "z": "9a024a21c0703f56",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "todo",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 815.0000038146973,
        "y": 890.0000019073486,
        "wires": [
            [
                "d59bcc18081f390e"
            ]
        ]
    },
    {
        "id": "d59bcc18081f390e",
        "type": "function",
        "z": "9a024a21c0703f56",
        "name": "function 11",
        "func": "if (!msg.payload) {\n    msg.payload = {\n        message: \"Id ile eşleşen bir kayıt bulunamadı.\"\n    }\n    return [null, msg]\n}\n\nif (msg.req.params.type === \"schedule\" && msg.payload.done) {\n    msg.error = {\n        message: \"Tamamlanan işler güncellenemez.\"\n    }\n    return [null, msg];\n}\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1045.0000038146973,
        "y": 890.0000019073486,
        "wires": [
            [
                "4c071291f7e1cb3a"
            ],
            []
        ]
    },
    {
        "id": "4c071291f7e1cb3a",
        "type": "template",
        "z": "9a024a21c0703f56",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Yapılacaklar Listesi</title>\n\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n    <link rel=\"stylesheet\" href=\"/font/bootstrap-icons.min.css\" />\n\n</head>\n\n<body>\n    <div class=\"container mt-5\">\n        <div class=\"row\">\n\n            <div class=\"col-md-8 offset-md-2\">\n                {{#error}}\n                <div class=\"alert alert-danger p-1 text-center\">\n                    <h4>{{message}}</h4>\n                </div>\n\n                {{/error}}\n                {{#message}}<p class=\"text-danger\">{{.}}</p>{{/message}}\n                <form action=\"/api/operation/schedule\" method=\"POST\">\n                    <input type=\"hidden\" name=\"_id\" value=\"{{payload._id}}\"/>\n                    <div class=\"mb-3\">\n                        <input required type=\"datetime-local\" name=\"datetime\" value=\"{{payload.schedule.formData.datetime}}\" class=\"form-control form-control-lg {{#error}}border-danger{{/error}}{{^error}}border-info{{/error}}\" placeholder=\"gg.aa.yyyy ss:dd\" />\n                    </div>\n                    <div class=\"mb-3 text-end\">\n                        <a class=\"btn btn-danger\" href=\"/\" type=\"submit\">Vazgeç</a>\n                        <button class=\"btn btn-outline-secondary\" type=\"reset\">Temizle</button>\n                        <button class=\"btn btn-warning px-4\" type=\"submit\">Planla</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n\n\n    <script src=\"/js/bootstrap.bundle.min.js\"></script>\n    <script>\n        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]')\n        const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))\n    </script>\n</body>\n\n</html>",
        "output": "str",
        "x": 1255.0000038146973,
        "y": 850.0000019073486,
        "wires": [
            [
                "650ff6140aa91dc2"
            ]
        ]
    },
    {
        "id": "650ff6140aa91dc2",
        "type": "http response",
        "z": "9a024a21c0703f56",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1425.0000038146973,
        "y": 850.0000019073486,
        "wires": []
    },
    {
        "id": "9ea057def023fd76",
        "type": "http in",
        "z": "9a024a21c0703f56",
        "name": "",
        "url": "/logs",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 92,
        "y": 291.00000762939453,
        "wires": [
            [
                "3a0e93769048e3b4"
            ]
        ]
    },
    {
        "id": "3a0e93769048e3b4",
        "type": "template",
        "z": "9a024a21c0703f56",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\" integrity=\"sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=\" crossorigin=\"anonymous\"></script>\n    <link href=\"https://unpkg.com/survey-core/survey-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n</head>\n<body>\n    \n    <div id=\"demo\" class=\"display\" style=\"width:100%\">\n    <table id=\"logTable\" class=\"display\" style=\"width:100%\">\n        <thead>\n            <tr>\n            </tr>\n        </thead>\n        <tbody>\n            <!-- Veriler JS ile yüklenecek -->\n        </tbody>\n    </table>\n</div>\n\n\n\n</body>\n</html>",
        "output": "str",
        "x": 305.33333587646484,
        "y": 290.9999990463257,
        "wires": [
            [
                "5ef79f63a3164caa"
            ]
        ]
    },
    {
        "id": "5ef79f63a3164caa",
        "type": "http response",
        "z": "9a024a21c0703f56",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 512,
        "y": 291.00000762939453,
        "wires": []
    },
    {
        "id": "f89407cbf14620ab",
        "type": "http in",
        "z": "9a024a21c0703f56",
        "name": "",
        "url": "/completedTodos",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 740,
        "y": 280,
        "wires": [
            [
                "77d9a434f059806e"
            ]
        ]
    },
    {
        "id": "77d9a434f059806e",
        "type": "template",
        "z": "9a024a21c0703f56",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\" integrity=\"sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=\" crossorigin=\"anonymous\"></script>\n    <link href=\"https://unpkg.com/survey-core/survey-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n</head>\n<body>\n\n    <div id=\"demo\" class=\"display\" style=\"width:100%\">\n    <p id=\"todoCount\"> </p>\n    <table id=\"completedTodos\" class=\"display\" style=\"width:100%\">\n        <thead>\n            <tr>\n            </tr>\n        </thead>\n        <tbody>\n            <!-- Veriler JS ile yüklenecek -->\n        </tbody>\n    </table>\n</div>\n\n\n</body>\n</html>",
        "output": "str",
        "x": 980,
        "y": 280,
        "wires": [
            [
                "f12405fd7f3f0965"
            ]
        ]
    },
    {
        "id": "f12405fd7f3f0965",
        "type": "http response",
        "z": "9a024a21c0703f56",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1210,
        "y": 280,
        "wires": []
    },
    {
        "id": "c28bfaceefde05c4",
        "type": "http in",
        "z": "9a024a21c0703f56",
        "name": "",
        "url": "/dashboard",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 380,
        "wires": [
            [
                "9826835d2357aa8a"
            ]
        ]
    },
    {
        "id": "9826835d2357aa8a",
        "type": "template",
        "z": "9a024a21c0703f56",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\" integrity=\"sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=\" crossorigin=\"anonymous\"></script>\n    <link href=\"https://unpkg.com/survey-core/survey-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n    <style>\n        :root {\n            --primary-color: #4361ee;\n            --secondary-color: #3f37c9;\n            --accent-color: #4895ef;\n            --success-color: #4cc9f0;\n            --light-color: #f8f9fa;\n            --dark-color: #212529;\n        }\n        \n        body {\n            background-color: #f5f7fb;\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            color: var(--dark-color);\n        }\n        \n        #dashboard {\n            max-width: 1200px;\n            margin: 2rem auto;\n            padding: 0 1rem;\n        }\n        \n        .card {\n            border: none;\n            border-radius: 12px;\n            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n            transition: transform 0.3s ease, box-shadow 0.3s ease;\n            height: 100%;\n        }\n        \n        .card:hover {\n            transform: translateY(-5px);\n            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);\n        }\n        \n        .card-header {\n            background-color: white;\n            border-bottom: 1px solid rgba(0, 0, 0, 0.05);\n            border-radius: 12px 12px 0 0 !important;\n            padding: 1.25rem 1.5rem;\n        }\n        \n        .card-title {\n            font-weight: 600;\n            color: var(--primary-color);\n            margin-bottom: 0;\n            font-size: 1.1rem;\n            display: flex;\n            align-items: center;\n        }\n        \n        .card-title i {\n            margin-right: 0.5rem;\n            font-size: 1.2rem;\n        }\n        \n        .stat-card {\n            text-align: center;\n            padding: 1.5rem;\n        }\n        \n        .stat-value {\n            font-weight: 700;\n            font-size: 2rem;\n            color: var(--primary-color);\n            margin: 0.5rem 0;\n        }\n        \n        .stat-label {\n            color: #6c757d;\n            font-size: 0.9rem;\n        }\n        \n        .progress {\n            height: 8px;\n            border-radius: 4px;\n            margin-top: 0.5rem;\n        }\n        \n        .chart-container {\n            position: relative;\n            height: 250px;\n            padding: 1rem;\n        }\n        \n        .badge {\n            font-weight: 500;\n            padding: 0.35em 0.65em;\n        }\n        \n        .user-avatar {\n            width: 40px;\n            height: 40px;\n            border-radius: 50%;\n            background-color: var(--accent-color);\n            color: white;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-weight: 600;\n            margin-right: 0.75rem;\n        }\n        \n        .recent-activity {\n            list-style: none;\n            padding-left: 0;\n        }\n        \n        .recent-activity li {\n            padding: 0.75rem 0;\n            border-bottom: 1px solid rgba(0, 0, 0, 0.05);\n        }\n        \n        .recent-activity li:last-child {\n            border-bottom: none;\n        }\n        \n        .activity-time {\n            font-size: 0.75rem;\n            color: #6c757d;\n        }\n        \n        @media (max-width: 768px) {\n            .stat-value {\n                font-size: 1.5rem;\n            }\n        }\n    </style>\n</head>\n<body>\n    \n<section id=\"dashboard\">\n    <div class=\"row mb-4\">\n        <div class=\"col-12\">\n            <h2 class=\"fw-bold\">Dashboard</h2>\n        </div>\n    </div>\n\n    <div class=\"row g-4 mb-4\">\n        <!-- User Stats Card -->\n        <div class=\"col-12 col-md-6 col-lg-4\">\n            <div class=\"card stat-card\">\n                <div class=\"stat-label\">\n                    <i class=\"bi bi-people-fill\"></i> Total Users\n                </div>\n                <div class=\"stat-value\" id=\"totalUsers\"></div>\n\n            </div>\n        </div>\n\n        <!-- Active Users Card -->\n        <div class=\"col-12 col-md-6 col-lg-4\">\n            <div class=\"card stat-card\">\n                <div class=\"stat-label\">\n                    <i class=\"bi bi-person-check-fill\"></i> Active Users\n                </div>\n                <div class=\"stat-value\" id=\"activeUsers\"></div>\n            </div>\n        </div>\n        \n        <div class=\"col-12 col-md-6 col-lg-4\">\n            <div class=\"card stat-card\">\n                <div class=\"stat-label\">\n                    <i class=\"bi bi-person-check-fill\"></i> Passive Users\n                </div>\n                <div class=\"stat-value\" id=\"passiveUsers\"></div>\n            </div>\n        </div>\n\n        <!-- Todo Stats Card -->\n        <div class=\"col-12 col-md-6 col-lg-4\">\n            <div class=\"card stat-card\">\n                <div class=\"stat-label\">\n                    <i class=\"bi bi-list-check\"></i> Total Todos\n                </div>\n                <div class=\"stat-value\" id=\"totalTodos\"></div>\n            </div>\n        </div>\n\n        <!-- Completed Todos Card -->\n        <div class=\"col-12 col-md-6 col-lg-4\">\n            <div class=\"card stat-card\">\n                <div class=\"stat-label\">\n                    <i class=\"bi bi-check-circle-fill\"></i> Completed Todos\n                </div>\n                <div class=\"stat-value\" id=\"completedTodos\"></div>\n            </div>\n        </div>\n        <div class=\"col-12 col-md-6 col-lg-4\">\n            <div class=\"card stat-card\">\n                <div class=\"stat-label\">\n                    <i class=\"bi bi-check-circle-fill\"></i> UnCompleted Todos\n                </div>\n                <div class=\"stat-value\" id=\"uncompletedTodos\"></div>\n            </div>\n        </div>\n    </div>\n\n</section>\n\n\n\n\n<script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n</body>\n</html>",
        "output": "str",
        "x": 300,
        "y": 380,
        "wires": [
            [
                "53ea5be91a6fa5d1"
            ]
        ]
    },
    {
        "id": "53ea5be91a6fa5d1",
        "type": "http response",
        "z": "9a024a21c0703f56",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 530,
        "y": 380,
        "wires": []
    },
    {
        "id": "fe6684816584423a",
        "type": "http in",
        "z": "9a024a21c0703f56",
        "name": "",
        "url": "/addCategory",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 480,
        "wires": [
            [
                "8d09feab8d952aa7"
            ]
        ]
    },
    {
        "id": "8d09feab8d952aa7",
        "type": "template",
        "z": "9a024a21c0703f56",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\" integrity=\"sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=\" crossorigin=\"anonymous\"></script>\n    <link href=\"https://unpkg.com/survey-core/survey-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n    <link  rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n</head>\n<body>\n        \n        <div id=\"surveyContainer\"> </div> \n    \n</body>\n</html>",
        "output": "str",
        "x": 360,
        "y": 480,
        "wires": [
            [
                "c6a84dc31a0d808e"
            ]
        ]
    },
    {
        "id": "c6a84dc31a0d808e",
        "type": "http response",
        "z": "9a024a21c0703f56",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 530,
        "y": 480,
        "wires": []
    },
    {
        "id": "087879a4219d5d36",
        "type": "template",
        "z": "9a024a21c0703f56",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\" integrity=\"sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=\" crossorigin=\"anonymous\"></script>\n    <link href=\"https://unpkg.com/survey-core/survey-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n</head>\n<body>\n    <p id=\"countTodos\"> </p>\n    <div id=\"demo\" class=\"display\" style=\"width:100%\">\n    \n    <table id=\"categoryTable\" class=\"display\" style=\"width:100%\">\n        <thead>\n            <tr>\n            </tr>\n        </thead>\n        <tbody>\n            <!-- Veriler JS ile yüklenecek -->\n        </tbody>\n    </table>\n</div>\n\n\n</body>\n</html>",
        "output": "str",
        "x": 968.0000305175781,
        "y": 381.0001001358032,
        "wires": [
            [
                "c4db9ab8df1a2050"
            ]
        ]
    },
    {
        "id": "d5a525a859b4c3a7",
        "type": "http in",
        "z": "9a024a21c0703f56",
        "name": "",
        "url": "/categoryList",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 774.6666946411133,
        "y": 381.00010871887207,
        "wires": [
            [
                "087879a4219d5d36"
            ]
        ]
    },
    {
        "id": "c4db9ab8df1a2050",
        "type": "http response",
        "z": "9a024a21c0703f56",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1174.6666946411133,
        "y": 381.00010871887207,
        "wires": []
    },
    {
        "id": "19df57a499217159",
        "type": "debug",
        "z": "9a024a21c0703f56",
        "name": "debug 23",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 280,
        "y": 580,
        "wires": []
    },
    {
        "id": "f1f27398705cb0b1",
        "type": "debug",
        "z": "9a024a21c0703f56",
        "name": "debug 24",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 565,
        "y": 559,
        "wires": []
    },
    {
        "id": "4bd705b08468fd4a",
        "type": "debug",
        "z": "9a024a21c0703f56",
        "name": "debug 25",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 500,
        "wires": []
    },
    {
        "id": "b6092ad57585f0b1",
        "type": "debug",
        "z": "9a024a21c0703f56",
        "name": "debug 26",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 500,
        "wires": []
    },
    {
        "id": "f32b95bfd9516c4e",
        "type": "debug",
        "z": "9a024a21c0703f56",
        "name": "debug 27",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 460,
        "wires": []
    },
    {
        "id": "2c1bdb49cac66593",
        "type": "debug",
        "z": "9a024a21c0703f56",
        "name": "debug 28",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 480,
        "wires": []
    },
    {
        "id": "8e4b4fa9ea6ac7e1",
        "type": "http in",
        "z": "9a024a21c0703f56",
        "name": "",
        "url": "/userProfile",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 1060,
        "wires": [
            [
                "d714d5e3d6f7281f",
                "49db7cd365c5a0ec"
            ]
        ]
    },
    {
        "id": "d714d5e3d6f7281f",
        "type": "template",
        "z": "9a024a21c0703f56",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\" integrity=\"sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=\" crossorigin=\"anonymous\"></script>\n    <link href=\"https://unpkg.com/survey-core/survey-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n    <link  rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n    <style>\n    .profile-container {\n      max-width: 600px;\n      margin: 50px auto;\n      padding: 30px;\n      background: #fff;\n      border-radius: 15px;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n    }\n    .profile-img {\n      width: 150px;\n      height: 150px;\n      object-fit: cover;\n      border-radius: 50%;\n      border: 4px solid #007bff;\n    }\n  </style>\n</head>\n<body class=\"bg-light\">\n\n  <div class=\"container\">\n    <div class=\"profile-container text-center\">\n      <div id=\"profile-img-wrapper\">\n        <img src=\"#\" alt=\"Profile Image\" class=\"profile-img mb-3\" id=\"profile-img\">\n      </div>\n      <h2 id=\"profile-name\"></h2>\n      <div class=\"text-muted\" id=\"profile-bio\"></div>\n\n      <div class=\"d-flex justify-content-center mt-4\">\n        <div class=\"text-center mx-4\">\n          <h6 class=\"text-uppercase text-muted\">Location</h6>\n          <div id=\"profile-location\"></div>\n        </div>\n        <div class=\"text-center mx-4\">\n          <h6 class=\"text-uppercase text-muted\">Joined</h6>\n          <p id=\"profile-created\">Date</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</body>\n</html>",
        "output": "str",
        "x": 330,
        "y": 1060,
        "wires": [
            [
                "61dfe26e168310de",
                "a392e71d2f1cc6e3"
            ]
        ]
    },
    {
        "id": "61dfe26e168310de",
        "type": "http response",
        "z": "9a024a21c0703f56",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 500,
        "y": 1060,
        "wires": []
    },
    {
        "id": "49db7cd365c5a0ec",
        "type": "debug",
        "z": "9a024a21c0703f56",
        "name": "debug 20",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 1000,
        "wires": []
    },
    {
        "id": "a392e71d2f1cc6e3",
        "type": "debug",
        "z": "9a024a21c0703f56",
        "name": "debug 21",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 1000,
        "wires": []
    },
    {
        "id": "a4154678a5e0e0cc",
        "type": "http in",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "url": "/api/login",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 279,
        "wires": [
            [
                "5380ed06d4a4abbe"
            ]
        ]
    },
    {
        "id": "4756f073169aced8",
        "type": "jwt sign",
        "z": "a494dcc6cc32ec33",
        "name": "access",
        "alg": "HS256",
        "exp": 3600,
        "jwkurl": "",
        "jwkkid": "",
        "secret": "d051c56a37ecd1eb89a9412ed5912dc9",
        "key": "",
        "signvar": "payload",
        "storetoken": "payload",
        "x": 1260,
        "y": 199,
        "wires": [
            [
                "8889a5b0ba094e5b"
            ]
        ]
    },
    {
        "id": "05709afef941f875",
        "type": "function",
        "z": "a494dcc6cc32ec33",
        "name": "function 2",
        "func": "// eşleşmiyorsa hata\nif (!msg.match) {\n    msg.payload = {\n        success: false,\n        error : \"Kullanıcı Adı Veya Parola Hatalı\"\n    }\n    return [null,msg]\n}\n// eşleşiyorsa aşağıdaki verileri payload ile gönderiyoruz tokennde saklıcaz bu verileri ilerde verify yaparken lazım olacak\nmsg.payload = {\n    username : msg.user.username,\n    email : msg.user.email,\n    displayName : msg.user.displayName,\n    roles : msg.user.roles,\n    validated : msg.user.validated,\n    ip : msg.req.ip\n}\n\n\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 199,
        "wires": [
            [
                "4756f073169aced8"
            ],
            [
                "996005500b6c3bf2"
            ]
        ]
    },
    {
        "id": "5380ed06d4a4abbe",
        "type": "function",
        "z": "a494dcc6cc32ec33",
        "name": "findUser",
        "func": "// templateden username pw gelmediyse 2. çıkış\nif (!msg.payload.username || !msg.payload.password){\n    msg.payload = {\n        success : false,\n        error : \"Tüm Alanları Doldurunuz\"\n    }\n    return [null,msg]\n}\n\n\nmsg.formData = msg.payload\nmsg.payload = {\n    username : msg.payload.username\n}\n\n\n\n\n\n\n\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 279,
        "wires": [
            [
                "1764bdb17ea320fd"
            ],
            [
                "360ecbe7c72df3e4"
            ]
        ]
    },
    {
        "id": "2bea920614622cf1",
        "type": "bcrypt",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "action": "verify",
        "field": "formData.password",
        "hash": "user.password",
        "target": "payload",
        "assignment": "replace",
        "match": "match",
        "outputs": 1,
        "rounds": 10,
        "x": 900,
        "y": 200,
        "wires": [
            [
                "05709afef941f875"
            ]
        ]
    },
    {
        "id": "32f2dacd509a22a8",
        "type": "function",
        "z": "a494dcc6cc32ec33",
        "name": "function 3",
        "func": "const refresh = msg.payload\nmsg.payload = {\n    success: true,\n    accessToken : msg.token,\n    refreshToken : refresh\n    \n};\n\nconst logData = {\n    action : \"login\",\n    user : msg.user?.email || \"bilinmiyor\",\n    timestamp : new Date().toLocaleString(\"TR\"),\n    ip : msg.req?.ip || \"ip yok\"\n}\nconst msgForLog = {\n    payload : logData\n};\n\nmsg.headers = msg.headers || {}; // headers yoksa boş obje atadik \nmsg.headers['Set-Cookie'] = [     // headers içine set-cookie koyduk\n    `accessToken=${msg.payload.accessToken}; HttpOnly; Secure; Path=/; Max-age=3600`,\n    `refreshToken=${msg.payload.refreshToken}; HttpOnly; Secure; Path=/; Max-Age=604800`\n    ]\n// HTTPonly olarak saklanır javascript kodları ile erişilemez\n// Secure : cookienin saedece https üzerinden gönderilmesini sağlar\n// path : =/ sitenin ana sayfası ve alt sayfalarında geçerli\n// max age geçerlilik süresi \n\nreturn [msg,msgForLog];\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 200,
        "wires": [
            [
                "217bc89602452b4d"
            ],
            [
                "197ec5ed892e127a"
            ]
        ]
    },
    {
        "id": "217bc89602452b4d",
        "type": "http response",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 2010,
        "y": 139,
        "wires": []
    },
    {
        "id": "1764bdb17ea320fd",
        "type": "mongodb4",
        "z": "a494dcc6cc32ec33",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 520,
        "y": 240,
        "wires": [
            [
                "dbc31bfaf90b0f0d"
            ]
        ]
    },
    {
        "id": "dbc31bfaf90b0f0d",
        "type": "function",
        "z": "a494dcc6cc32ec33",
        "name": "function 16",
        "func": "if (!msg.payload) {    \n    msg.payload = {\n        success : false,\n        error: \"Kullanıcı Adı Veya Parola Hatalı\"\n    }\n    return [null, msg]\n}\nif (msg.payload.active === false) {\n    msg.payload = {\n        success: false,\n        error: \"Hesap BANLANMIŞ\"\n    }\n    return [null,msg]\n}\n\nmsg.user = msg.payload\n\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 240,
        "wires": [
            [
                "2bea920614622cf1"
            ],
            [
                "4a096ae59e58748e"
            ]
        ]
    },
    {
        "id": "42bc1ed4cbadd942",
        "type": "http in",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "url": "/register",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 441,
        "wires": [
            [
                "40efb4d3281ae5f4"
            ]
        ]
    },
    {
        "id": "40efb4d3281ae5f4",
        "type": "template",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>SIGNUP</title>\n\n  <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n  <link href=\"https://unpkg.com/survey-core/defaultV2.min.css\" rel=\"stylesheet\" />\n  <link href=\"https://unpkg.com/survey-core/survey-core.min.css\" rel=\"stylesheet\" />\n\n  <style>\n    body {\n      background: linear-gradient(to right, #8e44ad, #2c3e50);\n      height: 100vh;\n      display: flex;\n      flex-direction: column;\n    }\n\n\n    .form-wrapper {\n      flex: 1;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: 2rem;\n    }\n\n    .form-card {\n      background: rgba(255, 255, 255, 0.8);\n      padding: 2rem;\n      border-radius: 1rem;\n      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);\n      width: 100%;\n      max-width: 500px;\n      backdrop-filter: blur(10px);\n    }\n\n    #surveyContainer {\n      margin-top: 1rem;\n    }\n\n    h2 {\n      font-weight: 600;\n      text-align: center;\n      margin-bottom: 1rem;\n      color: #343a40;\n    }\n  </style>\n\n  <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\"></script>\n  <script src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n  <script src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n  <script type=\"module\" src=\"/js/form.js\"></script>\n  <script type=\"module\" src=\"/js/navigation.js\"></script>\n</head>\n\n<body>\n\n  <div class=\"form-wrapper\">\n    <div class=\"form-card\">\n      <h2>Kayıt Ol</h2>\n      <div id=\"surveyContainer\"></div>\n    </div>\n  </div>\n\n<script type=\"module\">\n  import FormController from \"/js/form.js\";\n  const fc = new FormController();\n  (async () => {\n    await fc.loadForm(\"register-form\");\n  })();\n</script>\n\n</body>\n\n</html>\n",
        "output": "str",
        "x": 380,
        "y": 441,
        "wires": [
            [
                "401206913da407bd"
            ]
        ]
    },
    {
        "id": "401206913da407bd",
        "type": "http response",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 650,
        "y": 441,
        "wires": []
    },
    {
        "id": "3616ab108a084d83",
        "type": "http in",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "url": "/api/register",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 580,
        "wires": [
            [
                "b41224b290d09dec"
            ]
        ]
    },
    {
        "id": "b41224b290d09dec",
        "type": "function",
        "z": "a494dcc6cc32ec33",
        "name": "validation",
        "func": "msg.formData = msg.payload;\n\nif (!msg.formData.username || !msg.formData.displayName || !msg.formData.email || !msg.formData.password){\n    msg.payload = {\n        success : false,\n        error : \"Lütfen Tüm Alanları Doldurun\"\n    }\n    return [null,msg]\n}\n\nif (msg.formData.username.length < 3)\n{\n    msg.payload = {\n        success : false,\n        error : \"Kullanıcı Adı En az 3 karakterden oluşbilir\"\n    }\n}\n\nif (msg.formData.password.length < 8 && msg.formData.password.length > 16){\n    msg.payload = {\n        success : false,\n        error : \"Şifre minimum 8 maxiumim 16 karakter olabilir\" \n    }\n\n}\n\n\nlet query = {\n    $or : [\n        {\n            username : msg.formData.username,\n        },\n        {\n            email : msg.formData.email\n        }\n    ]\n}\n\nmsg.payload = [query]\n\n\n\n\n\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 580,
        "wires": [
            [
                "7589e350539a0ace"
            ],
            [
                "94cab3a617f4ca4f"
            ]
        ]
    },
    {
        "id": "7589e350539a0ace",
        "type": "mongodb4",
        "z": "a494dcc6cc32ec33",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "count",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 550.25,
        "y": 557,
        "wires": [
            [
                "76e20a3f4101d050"
            ]
        ]
    },
    {
        "id": "10ed3dc0692b9af7",
        "type": "function",
        "z": "a494dcc6cc32ec33",
        "name": "function 19",
        "func": "const date = new Date();\nconst now = date.getTime()\n\nif (msg.payload){\n    msg.payload = {\n        success:false,\n        error : \"Kullanıcı Adı veya email zaten kullanılıyor\"\n    }\n    return [null, msg];  // hata çıkışı\n}\n\nconst logData = {\n    action : \"register\",\n    user : msg.formData?.email || \"bilinmiyor\",\n    timestamp : new Date().toLocaleString(\"TR\"),\n    ip : msg.req?.ip || \"\"\n}\n\nmsg.payload = {\n    _id: now,\n    username : msg.formData.username,\n    email : msg.formData.email,\n    displayName : msg.formData.displayName,\n    password : msg.formData.password,\n    active: true,\n    validated : false,\n    stamp: {\n        createdAt: now,\n        ip: msg.req.ip,\n        username: msg.formData.username || \"\",\n        email: msg.formData.email || \"\",\n    },\n    roles: [\"user\"],\n    date: date.toLocaleDateString(\"TR\"),\n    time: date.toLocaleTimeString(\"TR\"),\n    // eğer başka bir veri varsa bunlarıda ekle dedik password mesela direkt eklenicek\n};\n\nconst userProfileSettings = {\n    user_id : msg.payload._id,\n    profile_img : \"default.png\",\n    bio : \"\",\n    location : \"\",\n    stamps : {\n        createdAt : now,\n        ip : msg.req.ip\n    }\n}\nconst msgForUserProfile = {\n    payload : userProfileSettings\n}\n\nconst msgForLog = {\n    payload : logData\n}\n\nreturn [msg,null,msgForLog,msgForUserProfile];",
        "outputs": 4,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 903.25,
        "y": 552.9999809265137,
        "wires": [
            [
                "d9cbac2404fe6a7a"
            ],
            [
                "9ccbb62efea89182"
            ],
            [
                "5072ed37a8752a0a"
            ],
            [
                "59c28a75128d1d51"
            ]
        ]
    },
    {
        "id": "5e99b1bb4e1f9782",
        "type": "http response",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1270,
        "y": 460,
        "wires": []
    },
    {
        "id": "76e20a3f4101d050",
        "type": "bcrypt",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "action": "encrypt",
        "field": "formData.password",
        "hash": "payload",
        "target": "payload.password",
        "assignment": "replace",
        "match": "match",
        "outputs": 1,
        "rounds": 10,
        "x": 710.25,
        "y": 557,
        "wires": [
            [
                "10ed3dc0692b9af7"
            ]
        ]
    },
    {
        "id": "9ccbb62efea89182",
        "type": "http response",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1130,
        "y": 540,
        "wires": []
    },
    {
        "id": "94cab3a617f4ca4f",
        "type": "http response",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 523.25,
        "y": 632.9999809265137,
        "wires": []
    },
    {
        "id": "360ecbe7c72df3e4",
        "type": "http response",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 490,
        "y": 319,
        "wires": []
    },
    {
        "id": "4a096ae59e58748e",
        "type": "http response",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 852.9332885742188,
        "y": 282.9333190917969,
        "wires": []
    },
    {
        "id": "996005500b6c3bf2",
        "type": "http response",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1230,
        "y": 259,
        "wires": []
    },
    {
        "id": "d9cbac2404fe6a7a",
        "type": "mongodb4",
        "z": "a494dcc6cc32ec33",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 1080,
        "y": 460,
        "wires": [
            [
                "5e99b1bb4e1f9782"
            ]
        ]
    },
    {
        "id": "4ba3f9c3fa97b4fc",
        "type": "jwt sign",
        "z": "a494dcc6cc32ec33",
        "name": "refresh",
        "alg": "HS256",
        "exp": "7d",
        "jwkurl": "",
        "jwkkid": "",
        "secret": "21821f287ef6747b1d9161b29e52c1ed",
        "key": "",
        "signvar": "payload",
        "storetoken": "payload",
        "x": 1600,
        "y": 199,
        "wires": [
            [
                "32f2dacd509a22a8"
            ]
        ]
    },
    {
        "id": "8889a5b0ba094e5b",
        "type": "function",
        "z": "a494dcc6cc32ec33",
        "name": "function 25",
        "func": "msg.token = msg.payload\nmsg.payload = {\n    _id : msg.user._id,\n    ip : msg.req.ip\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 199,
        "wires": [
            [
                "4ba3f9c3fa97b4fc"
            ]
        ]
    },
    {
        "id": "fc769ebf839a5a06",
        "type": "http in",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "url": "/api/refresh-token",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 159,
        "y": 779,
        "wires": [
            [
                "78b4e530ccb81d0d"
            ]
        ]
    },
    {
        "id": "db5a54ef18e5e7d3",
        "type": "http response",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1669,
        "y": 779,
        "wires": []
    },
    {
        "id": "a308166d35578658",
        "type": "jwt verify",
        "z": "a494dcc6cc32ec33",
        "name": "refreshverify",
        "alg": [
            "HS256"
        ],
        "jwkurl": "",
        "secret": "21821f287ef6747b1d9161b29e52c1ed",
        "key": "",
        "signvar": "payload",
        "storetoken": "payload",
        "x": 589,
        "y": 779,
        "wires": [
            [
                "aa3047f4a0c61364"
            ]
        ]
    },
    {
        "id": "aa3047f4a0c61364",
        "type": "function",
        "z": "a494dcc6cc32ec33",
        "name": "function 27",
        "func": "msg.payload = {\n    _id : msg.payload._id\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 780,
        "wires": [
            [
                "a22be95315ef3494"
            ]
        ]
    },
    {
        "id": "cb098f21c287e8cf",
        "type": "jwt sign",
        "z": "a494dcc6cc32ec33",
        "name": "accessToken",
        "alg": "HS256",
        "exp": 3600,
        "jwkurl": "",
        "jwkkid": "",
        "secret": "d051c56a37ecd1eb89a9412ed5912dc9",
        "key": "",
        "signvar": "payload",
        "storetoken": "payload",
        "x": 1329,
        "y": 779,
        "wires": [
            [
                "96f6f26210ec81f5"
            ]
        ]
    },
    {
        "id": "96f6f26210ec81f5",
        "type": "function",
        "z": "a494dcc6cc32ec33",
        "name": "function 28",
        "func": "msg.payload = {\n    success: true,\n    token: msg.payload,\n};\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1509,
        "y": 779,
        "wires": [
            [
                "db5a54ef18e5e7d3"
            ]
        ]
    },
    {
        "id": "78b4e530ccb81d0d",
        "type": "function",
        "z": "a494dcc6cc32ec33",
        "name": "function 29",
        "func": "msg.payload = msg.payload.refreshToken\nif(!msg.payload){\n    return [null,msg]\n}\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 369,
        "y": 779,
        "wires": [
            [
                "a308166d35578658"
            ],
            [
                "bcad4adbc7952db0"
            ]
        ]
    },
    {
        "id": "197ec5ed892e127a",
        "type": "mongodb4",
        "z": "a494dcc6cc32ec33",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "logs",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 2000,
        "y": 259,
        "wires": [
            []
        ]
    },
    {
        "id": "5072ed37a8752a0a",
        "type": "mongodb4",
        "z": "a494dcc6cc32ec33",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "logs",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 1140,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "a22be95315ef3494",
        "type": "mongodb4",
        "z": "a494dcc6cc32ec33",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 960,
        "y": 780,
        "wires": [
            [
                "d7abbc50bd1d71bb"
            ]
        ]
    },
    {
        "id": "d7abbc50bd1d71bb",
        "type": "function",
        "z": "a494dcc6cc32ec33",
        "name": "function 38",
        "func": "msg.user = msg.payload\nmsg.payload = {\n    username : msg.user.username,\n    email : msg.user.email,\n    displayName : msg.user.displayName,\n    roles : msg.user.roles,\n    validated : msg.user.validated,\n    ip : msg.req.ip\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1129,
        "y": 779,
        "wires": [
            [
                "cb098f21c287e8cf"
            ]
        ]
    },
    {
        "id": "8175bf4ebd5367b8",
        "type": "http in",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "url": "/login",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 122,
        "y": 137,
        "wires": [
            [
                "5def0389f768f659"
            ]
        ]
    },
    {
        "id": "5def0389f768f659",
        "type": "template",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Giriş Yap</title>\n\n  <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n  <link href=\"https://unpkg.com/survey-core/defaultV2.min.css\" rel=\"stylesheet\" />\n  <link href=\"https://unpkg.com/survey-core/survey-core.min.css\" rel=\"stylesheet\" />\n\n  <style>\n    body {\n      margin: 0;\n      padding: 0;\n      background: linear-gradient(to right, #8e44ad, #2c3e50);\n      min-height: 100vh;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .navbar {\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    }\n\n    .formContainer {\n      flex: 1;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: 2rem;\n    }\n\n    .card {\n      background: rgba(255, 255, 255, 0.85);\n      border-radius: 1rem;\n      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\n      backdrop-filter: blur(10px);\n      width: 100%;\n      max-width: 500px;\n      padding: 2rem;\n    }\n\n    #surveyContainer {\n      margin-top: 1rem;\n    }\n\n    h2 {\n      font-weight: 600;\n      text-align: center;\n      color: #343a40;\n    }\n  </style>\n\n  <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\"></script>\n  <script src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n  <script src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n  <script type=\"module\" src=\"/js/form.js\"></script>\n  <script type=\"module\" src=\"/js/navigation.js\"></script>\n</head>\n\n<body>\n\n  <nav class=\"navbar navbar-light bg-light d-flex justify-content-center\">\n    <a class=\"navbar-brand btn btn-warning mt-2 mb-2\" href=\"/register\">Kayıt Ol</a>\n  </nav>\n\n  <div class=\"formContainer\">\n    <div class=\"card\">\n      <h2>Giriş Yap</h2>\n      <div id=\"surveyContainer\"></div>\n      \n    <p><a href=\"/resetpw\">Şifremi Unuttum </a> </p>\n    </div>\n\n  </div>\n\n<script type=\"module\">\n  import FormController from \"/js/form.js\";\n  const fc = new FormController();\n  (async () => {\n    await fc.loadForm(\"login-form\");\n  })();\n</script>\n\n\n</body>\n\n</html>\n",
        "output": "str",
        "x": 422,
        "y": 137,
        "wires": [
            [
                "f14c8c94a08c8887"
            ]
        ]
    },
    {
        "id": "f14c8c94a08c8887",
        "type": "http response",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 662,
        "y": 137,
        "wires": []
    },
    {
        "id": "502b8b2e5e4a4a38",
        "type": "http in",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "url": "/resetpw",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 1000,
        "wires": [
            [
                "fa9023dcf36ff206"
            ]
        ]
    },
    {
        "id": "fa9023dcf36ff206",
        "type": "template",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Giriş Yap</title>\n\n  <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n  <link href=\"https://unpkg.com/survey-core/defaultV2.min.css\" rel=\"stylesheet\" />\n  <link href=\"https://unpkg.com/survey-core/survey-core.min.css\" rel=\"stylesheet\" />\n\n  <style>\n    body {\n      margin: 0;\n      padding: 0;\n      background: linear-gradient(to right, #8e44ad, #2c3e50);\n      min-height: 100vh;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .navbar {\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    }\n\n    .formContainer {\n      flex: 1;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: 2rem;\n    }\n\n    .card {\n      background: rgba(255, 255, 255, 0.85);\n      border-radius: 1rem;\n      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\n      backdrop-filter: blur(10px);\n      width: 100%;\n      max-width: 500px;\n      padding: 2rem;\n    }\n\n    #surveyContainer {\n      margin-top: 1rem;\n    }\n\n    h2 {\n      font-weight: 600;\n      text-align: center;\n      color: #343a40;\n    }\n  </style>\n\n  <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\"></script>\n  <script src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n  <script src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n  <script type=\"module\" src=\"/js/form.js\"></script>\n  <script type=\"module\" src=\"/js/navigation.js\"></script>\n</head>\n\n<body>\n\n  <nav class=\"navbar navbar-light bg-light d-flex justify-content-center\">\n    <a class=\"navbar-brand btn btn-warning mt-2 mb-2\" href=\"/register\">Kayıt Ol</a>\n  </nav>\n\n  <div class=\"formContainer\">\n    <div class=\"card\">\n      <h2>Şifre Sıfırla</h2>\n      <div id=\"surveyContainer\"></div>\n    </div>\n  </div>\n\n<script type=\"module\">\n  import FormController from \"/js/form.js\";\n  const fc = new FormController();\n  (async () => {\n    await fc.loadForm(\"resetpw-form\");\n  })();\n</script>\n\n\n</body>\n\n</html>\n",
        "output": "str",
        "x": 480,
        "y": 1000,
        "wires": [
            [
                "086703bec6ca2ec8"
            ]
        ]
    },
    {
        "id": "086703bec6ca2ec8",
        "type": "http response",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 730,
        "y": 1000,
        "wires": []
    },
    {
        "id": "9cdb5ea964d02ca3",
        "type": "http in",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "url": "/api/resetpw",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 1120,
        "wires": [
            [
                "dedc7f759e7b3fdf"
            ]
        ]
    },
    {
        "id": "dedc7f759e7b3fdf",
        "type": "function",
        "z": "a494dcc6cc32ec33",
        "name": "function 39",
        "func": "msg.payload = {\n    email : msg.payload.email\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1120,
        "wires": [
            [
                "a7c279ceb379c8aa"
            ]
        ]
    },
    {
        "id": "a7c279ceb379c8aa",
        "type": "mongodb4",
        "z": "a494dcc6cc32ec33",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 630,
        "y": 1120,
        "wires": [
            [
                "bb59cafd8a2e7db2"
            ]
        ]
    },
    {
        "id": "bb59cafd8a2e7db2",
        "type": "function",
        "z": "a494dcc6cc32ec33",
        "name": "function 40",
        "func": "if (!msg.payload) {\n    msg.payload = {\n        success : false,\n        error : \"User Not Found\"\n    }\n    return [null,msg]\n}\nmsg.userInf = msg.payload\n\nconst resetToken = Math.floor(Math.random() * (+99999 + 1 - +10000)) + +10000 \n// Math.random 0 ile 1 arasında 0.405 gibi sayi oluşturur sonra bunu  90000 ile çarpar * dan sonra gelir bu 90000 en sn buna 10000 ekler ve floor ile tam sayı yapar\nconst expireAt = new Date(Date.now() + 15 * 60 * 1000) // Date.now ile şimdiki zamanı alır 3 * 60 *1000 ile mili saniye cinsine cevirir 60 da saniye 1000 de ms 3 de dakika olur\nmsg.payload = {\n    user_id : msg.userInf._id,\n    token : resetToken,\n    createdAt : new Date(),\n    expireAt : expireAt\n}\nmsg.token = resetToken\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 1120,
        "wires": [
            [
                "996578d42527cf1d"
            ],
            [
                "71f8bc87329ca394"
            ]
        ]
    },
    {
        "id": "71f8bc87329ca394",
        "type": "http response",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 950,
        "y": 1180,
        "wires": []
    },
    {
        "id": "996578d42527cf1d",
        "type": "mongodb4",
        "z": "a494dcc6cc32ec33",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "reset_token",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 1020,
        "y": 1080,
        "wires": [
            [
                "6e6557dedd81d4fd"
            ]
        ]
    },
    {
        "id": "6e6557dedd81d4fd",
        "type": "function",
        "z": "a494dcc6cc32ec33",
        "name": "function 41",
        "func": "msg.to = msg.userInf?.email || \"\";\nmsg.subject = \"PAROLA SIFIRLAMA\";\nconst token = msg.token\nconst link = \"http://127.0.0.1:1880/verifytoken\"\nmsg.payload = `${token} kodunuzu bu linke tıklayarak yazabilirsiniz ${link}` \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1080,
        "wires": [
            [
                "1df336b3487f16c4"
            ]
        ]
    },
    {
        "id": "1df336b3487f16c4",
        "type": "e-mail",
        "z": "a494dcc6cc32ec33",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 1350,
        "y": 1080,
        "wires": []
    },
    {
        "id": "6f0fb235b0189683",
        "type": "http in",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "url": "/newpassword",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 1560,
        "wires": [
            [
                "518d2f9a8ca6ea5a"
            ]
        ]
    },
    {
        "id": "518d2f9a8ca6ea5a",
        "type": "template",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Giriş Yap</title>\n\n  <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n  <link href=\"https://unpkg.com/survey-core/defaultV2.min.css\" rel=\"stylesheet\" />\n  <link href=\"https://unpkg.com/survey-core/survey-core.min.css\" rel=\"stylesheet\" />\n\n  <style>\n    body {\n      margin: 0;\n      padding: 0;\n      background: linear-gradient(to right, #8e44ad, #2c3e50);\n      min-height: 100vh;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .navbar {\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    }\n\n    .formContainer {\n      flex: 1;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: 2rem;\n    }\n\n    .card {\n      background: rgba(255, 255, 255, 0.85);\n      border-radius: 1rem;\n      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\n      backdrop-filter: blur(10px);\n      width: 100%;\n      max-width: 500px;\n      padding: 2rem;\n    }\n\n    #surveyContainer {\n      margin-top: 1rem;\n    }\n\n    h2 {\n      font-weight: 600;\n      text-align: center;\n      color: #343a40;\n    }\n  </style>\n\n  <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\"></script>\n  <script src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n  <script src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n  <script type=\"module\" src=\"/js/form.js\"></script>\n  <script type=\"module\" src=\"/js/navigation.js\"></script>\n</head>\n\n<body>\n\n  <nav class=\"navbar navbar-light bg-light d-flex justify-content-center\">\n    <a class=\"navbar-brand btn btn-warning mt-2 mb-2\" href=\"/register\">Kayıt Ol</a>\n  </nav>\n\n  <div class=\"formContainer\">\n    <div class=\"card\">\n      <h2>Şifre Sıfırla</h2>\n      <div id=\"surveyContainer\"></div>\n    </div>\n  </div>\n\n<script type=\"module\">\n  import FormController from \"/js/form.js\";\n  const fc = new FormController();\n  (async () => {\n    await fc.loadForm(\"newpw-form\");\n  })();\n</script>\n\n\n</body>\n\n</html>\n",
        "output": "str",
        "x": 480,
        "y": 1560,
        "wires": [
            [
                "8be552b5028a6573"
            ]
        ]
    },
    {
        "id": "8be552b5028a6573",
        "type": "http response",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 630,
        "y": 1560,
        "wires": []
    },
    {
        "id": "79ab328f8f8dcfb0",
        "type": "http in",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "url": "/verifytoken",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 202.00009155273438,
        "y": 1266.0000705718994,
        "wires": [
            [
                "1be529e8152283b8"
            ]
        ]
    },
    {
        "id": "1be529e8152283b8",
        "type": "template",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Giriş Yap</title>\n\n  <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n  <link href=\"https://unpkg.com/survey-core/defaultV2.min.css\" rel=\"stylesheet\" />\n  <link href=\"https://unpkg.com/survey-core/survey-core.min.css\" rel=\"stylesheet\" />\n\n  <style>\n    body {\n      margin: 0;\n      padding: 0;\n      background: linear-gradient(to right, #8e44ad, #2c3e50);\n      min-height: 100vh;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .navbar {\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    }\n\n    .formContainer {\n      flex: 1;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: 2rem;\n    }\n\n    .card {\n      background: rgba(255, 255, 255, 0.85);\n      border-radius: 1rem;\n      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\n      backdrop-filter: blur(10px);\n      width: 100%;\n      max-width: 500px;\n      padding: 2rem;\n    }\n\n    #surveyContainer {\n      margin-top: 1rem;\n    }\n\n    h2 {\n      font-weight: 600;\n      text-align: center;\n      color: #343a40;\n    }\n  </style>\n\n  <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\"></script>\n  <script src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n  <script src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n  <script type=\"module\" src=\"/js/form.js\"></script>\n  <script type=\"module\" src=\"/js/navigation.js\"></script>\n</head>\n\n<body>\n\n  <nav class=\"navbar navbar-light bg-light d-flex justify-content-center\">\n    <a class=\"navbar-brand btn btn-warning mt-2 mb-2\" href=\"/register\">Kayıt Ol</a>\n  </nav>\n\n  <div class=\"formContainer\">\n    <div class=\"card\">\n      <h2>Şifre Sıfırla</h2>\n      <div id=\"surveyContainer\"></div>\n    </div>\n  </div>\n\n<script type=\"module\">\n  import FormController from \"/js/form.js\";\n  const fc = new FormController();\n  (async () => {\n    await fc.loadForm(\"verifytoken-form\");\n  })();\n</script>\n\n\n</body>\n\n</html>\n",
        "output": "str",
        "x": 482.0000915527344,
        "y": 1266.0000705718994,
        "wires": [
            [
                "6ee8bcb4196d839e"
            ]
        ]
    },
    {
        "id": "6ee8bcb4196d839e",
        "type": "http response",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 722.0000915527344,
        "y": 1266.0000705718994,
        "wires": []
    },
    {
        "id": "07408db4fe79f4f0",
        "type": "http in",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "url": "/api/verifytoken",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 233.0000991821289,
        "y": 1381.0000801086426,
        "wires": [
            [
                "86158023925fd360"
            ]
        ]
    },
    {
        "id": "86158023925fd360",
        "type": "function",
        "z": "a494dcc6cc32ec33",
        "name": "function 43",
        "func": "const resetToken = msg.payload.token;\nmsg.payload = {\n    token : parseInt(resetToken.trim())\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 433.0000991821289,
        "y": 1381.0000801086426,
        "wires": [
            [
                "582aca408e422a71"
            ]
        ]
    },
    {
        "id": "582aca408e422a71",
        "type": "mongodb4",
        "z": "a494dcc6cc32ec33",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "reset_token",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 610,
        "y": 1380,
        "wires": [
            [
                "c28c754d12209e8b"
            ]
        ]
    },
    {
        "id": "c28c754d12209e8b",
        "type": "function",
        "z": "a494dcc6cc32ec33",
        "name": "function 44",
        "func": "if (!msg.payload) {\n    msg.payload = {\n        success : false,\n        error : \"Invalid Code\"\n    }\n    return [null,msg]\n}   \nmsg.payload = {\n    _id : msg.payload.user_id\n}\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 1380,
        "wires": [
            [
                "d4c97345613e26bb"
            ],
            [
                "5652ce8551f5dd17"
            ]
        ]
    },
    {
        "id": "5652ce8551f5dd17",
        "type": "http response",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "statusCode": "400",
        "headers": {
            "content-type": "application/json"
        },
        "x": 970,
        "y": 1420,
        "wires": []
    },
    {
        "id": "d4c97345613e26bb",
        "type": "mongodb4",
        "z": "a494dcc6cc32ec33",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 1010,
        "y": 1340,
        "wires": [
            [
                "ec38abd0103aa86d"
            ]
        ]
    },
    {
        "id": "ec38abd0103aa86d",
        "type": "function",
        "z": "a494dcc6cc32ec33",
        "name": "function 45",
        "func": "if (!msg.payload){\n    msg.payload = {\n        success : false,\n        error : \"User Not Found\"\n    }\n    return [null,msg]\n}\nflow.set(\"userInfo\",msg.payload) // userinfoyu flow bazında set ediyoz \nreturn [msg,null];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1340,
        "wires": [
            [
                "96ff8553b78047c4"
            ],
            [
                "5a7d289fa3e80124"
            ]
        ]
    },
    {
        "id": "5a7d289fa3e80124",
        "type": "http response",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "statusCode": "404",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1390,
        "y": 1400,
        "wires": []
    },
    {
        "id": "96ff8553b78047c4",
        "type": "http response",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1370,
        "y": 1280,
        "wires": []
    },
    {
        "id": "a22f83d02dcb7d48",
        "type": "http in",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "url": "/api/newpassword",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 240,
        "y": 1740,
        "wires": [
            [
                "edbbf7599079d643"
            ]
        ]
    },
    {
        "id": "edbbf7599079d643",
        "type": "function",
        "z": "a494dcc6cc32ec33",
        "name": "function 42",
        "func": "msg.userInfo = flow.get(\"userInfo\")\nif (msg.payload.password.length < 8 && msg.payload.password.length > 16 || msg.payload.confirm_password < 8 && msg.payload.confirm_password > 16){\n    msg.payload = {\n        success : false,\n        error : \"Parola minimum 8 maximum 16 karakterden oluşmalı\"\n    }\n    return [null,msg]\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1740,
        "wires": [
            [
                "5ef257317d4c9b29"
            ]
        ]
    },
    {
        "id": "7de912001bb2a4a2",
        "type": "http response",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1650,
        "y": 1700,
        "wires": []
    },
    {
        "id": "5ef257317d4c9b29",
        "type": "function",
        "z": "a494dcc6cc32ec33",
        "name": "function 46",
        "func": "if(msg.payload.password !== msg.payload.confirmpassword){\n    msg.payload = {\n        succes: false,\n        error : \"Confirming Password Failed\"\n    }\n    return [null,msg]\n}\nmsg.newpw = msg.payload.password\nmsg.payload = {\n    _id : msg.userInfo._id\n}\n\n\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1740,
        "wires": [
            [
                "69d4a94adf317681"
            ],
            [
                "0a1f35dcbc51baf3",
                "27639ebd13512476"
            ]
        ]
    },
    {
        "id": "0a1f35dcbc51baf3",
        "type": "http response",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 910,
        "y": 1780,
        "wires": []
    },
    {
        "id": "e060365df75d0369",
        "type": "mongodb4",
        "z": "a494dcc6cc32ec33",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 1100,
        "y": 1700,
        "wires": [
            [
                "90e69514d5d3c17c"
            ]
        ]
    },
    {
        "id": "90e69514d5d3c17c",
        "type": "function",
        "z": "a494dcc6cc32ec33",
        "name": "function 48",
        "func": "msg.payload = [{\n    _id : msg.payload._id,\n}]\n\nmsg.payload.push({\n    $set : {\n        password : msg.newpw\n    }\n})\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1700,
        "wires": [
            [
                "a50d99e8ce604c03"
            ]
        ]
    },
    {
        "id": "a50d99e8ce604c03",
        "type": "mongodb4",
        "z": "a494dcc6cc32ec33",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "updateOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 1490,
        "y": 1700,
        "wires": [
            [
                "7de912001bb2a4a2"
            ]
        ]
    },
    {
        "id": "69d4a94adf317681",
        "type": "bcrypt",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "action": "encrypt",
        "field": "newpw",
        "hash": "payload",
        "target": "newpw",
        "assignment": "replace",
        "match": "match",
        "outputs": 1,
        "rounds": 10,
        "x": 910,
        "y": 1700,
        "wires": [
            [
                "e060365df75d0369"
            ]
        ]
    },
    {
        "id": "b0892d8de4fa1ba6",
        "type": "comment",
        "z": "a494dcc6cc32ec33",
        "name": "BURDAKİ KARIŞIKLILIĞI DÜZELT",
        "info": "",
        "x": 880,
        "y": 920,
        "wires": []
    },
    {
        "id": "bcad4adbc7952db0",
        "type": "http response",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "statusCode": "401",
        "headers": {
            "location": "/login"
        },
        "x": 550,
        "y": 840,
        "wires": []
    },
    {
        "id": "27639ebd13512476",
        "type": "debug",
        "z": "a494dcc6cc32ec33",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 1840,
        "wires": []
    },
    {
        "id": "59c28a75128d1d51",
        "type": "mongodb4",
        "z": "a494dcc6cc32ec33",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user_profile",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 1120,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "a74d907a106e924b",
        "type": "inject",
        "z": "b3c1ef86c9e1d050",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "20 10 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 140,
        "wires": [
            [
                "fb9a6a9d168cc291"
            ]
        ]
    },
    {
        "id": "fb9a6a9d168cc291",
        "type": "function",
        "z": "b3c1ef86c9e1d050",
        "name": "function 32",
        "func": "msg.payload = {}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 140,
        "wires": [
            [
                "d11840883418051f"
            ]
        ]
    },
    {
        "id": "d11840883418051f",
        "type": "mongodb4",
        "z": "b3c1ef86c9e1d050",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "todo",
        "operation": "find",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 620,
        "y": 140,
        "wires": [
            [
                "11b8110c1ea7e906"
            ]
        ]
    },
    {
        "id": "11b8110c1ea7e906",
        "type": "function",
        "z": "b3c1ef86c9e1d050",
        "name": "function 33",
        "func": "const date = new Date();\nconst threeDaysLater = new Date(date);\n\nthreeDaysLater.setDate(date.getDate() + 3);\n\nmsg.payload = msg.payload.filter(todo =>{\n    const due = new Date(todo.due_date);\n    return due.toDateString() === threeDaysLater.toDateString()\n} )\n\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 140,
        "wires": [
            [
                "efacfe50450f264d"
            ]
        ]
    },
    {
        "id": "efacfe50450f264d",
        "type": "split",
        "z": "b3c1ef86c9e1d050",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 1060,
        "y": 140,
        "wires": [
            [
                "18610c648bdeb780"
            ]
        ]
    },
    {
        "id": "18610c648bdeb780",
        "type": "function",
        "z": "b3c1ef86c9e1d050",
        "name": "function 34",
        "func": "msg.to = msg.payload.stamp?.email || \"\";\nmsg.subject = \"Görev Hatırlatma\";\nmsg.payload = `Merhaba ${msg.payload.name} adlı görevinizin bitmesine 3 gün kaldı`\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 140,
        "wires": [
            [
                "5c9db1794fd08d68"
            ]
        ]
    },
    {
        "id": "5c9db1794fd08d68",
        "type": "e-mail",
        "z": "b3c1ef86c9e1d050",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 1410,
        "y": 140,
        "wires": []
    },
    {
        "id": "a5693f68bbcb48ce",
        "type": "comment",
        "z": "b3c1ef86c9e1d050",
        "name": "Her sabah 9 da bitime 3 gün kalan görevleri bulur mail atar",
        "info": "",
        "x": 310,
        "y": 40,
        "wires": []
    },
    {
        "id": "962dad44f67d8b20",
        "type": "inject",
        "z": "b3c1ef86c9e1d050",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 201.9999656677246,
        "y": 317.0000066757202,
        "wires": [
            [
                "bf404fed420b9b2c"
            ]
        ]
    },
    {
        "id": "bf404fed420b9b2c",
        "type": "function",
        "z": "b3c1ef86c9e1d050",
        "name": "function 35",
        "func": "msg.payload = {}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 411.9999656677246,
        "y": 317.0000066757202,
        "wires": [
            [
                "fa1d0f54a435b5df"
            ]
        ]
    },
    {
        "id": "fa1d0f54a435b5df",
        "type": "mongodb4",
        "z": "b3c1ef86c9e1d050",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "todo",
        "operation": "find",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 611.9999656677246,
        "y": 317.0000066757202,
        "wires": [
            [
                "b6dc9691aeb46455"
            ]
        ]
    },
    {
        "id": "b6dc9691aeb46455",
        "type": "function",
        "z": "b3c1ef86c9e1d050",
        "name": "function 36",
        "func": "const date = new Date();\n\nmsg.payload = msg.payload.filter(todo => {\n    const dueDate = new Date(todo.due_date);\n    return todo.completed === true || dueDate.getTime() < date.getTime()\n})\n\nmsg.date = date.getTime()\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 791.9999656677246,
        "y": 317.0000066757202,
        "wires": [
            [
                "fc510dc0c20f406f"
            ]
        ]
    },
    {
        "id": "fc510dc0c20f406f",
        "type": "split",
        "z": "b3c1ef86c9e1d050",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 971.9999656677246,
        "y": 317.0000066757202,
        "wires": [
            [
                "635174db67be01ab"
            ]
        ]
    },
    {
        "id": "635174db67be01ab",
        "type": "function",
        "z": "b3c1ef86c9e1d050",
        "name": "function 37",
        "func": "msg.to = msg.payload.stamp?.email || \"\";\nmsg.subject = \"Görevin Süresi Doldu\";\nmsg.payload = `${msg.payload.name} isimli görevinizin süresi doldu`\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1141.9999656677246,
        "y": 317.0000066757202,
        "wires": [
            [
                "4dabb7ef4563a924"
            ]
        ]
    },
    {
        "id": "4dabb7ef4563a924",
        "type": "e-mail",
        "z": "b3c1ef86c9e1d050",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 1330,
        "y": 320,
        "wires": []
    },
    {
        "id": "368f834c8e74e777",
        "type": "comment",
        "z": "b3c1ef86c9e1d050",
        "name": "Her sabah 9 da biten görevleri çeker mail atar",
        "info": "",
        "x": 290,
        "y": 260,
        "wires": []
    },
    {
        "id": "9a09c95bf6cd415b",
        "type": "function",
        "z": "d3c4fb0cefa46834",
        "name": "function 47",
        "func": "msg.payload = {\n    \"active\" : true\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 300,
        "wires": [
            [
                "8923dc971e3f110b"
            ]
        ]
    },
    {
        "id": "8923dc971e3f110b",
        "type": "mongodb4",
        "z": "d3c4fb0cefa46834",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "count",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 590,
        "y": 300,
        "wires": [
            [
                "87d1cec469bcce36"
            ]
        ]
    },
    {
        "id": "87d1cec469bcce36",
        "type": "function",
        "z": "d3c4fb0cefa46834",
        "name": "function 49",
        "func": "msg.activeUserCount = msg.payload\nmsg.payload = {\n    \"active\" : false\n}\n    \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 300,
        "wires": [
            [
                "4920633003715d91"
            ]
        ]
    },
    {
        "id": "4920633003715d91",
        "type": "mongodb4",
        "z": "d3c4fb0cefa46834",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "count",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 970,
        "y": 300,
        "wires": [
            [
                "488d12abf1447f17"
            ]
        ]
    },
    {
        "id": "04c07ee21ee37e67",
        "type": "function",
        "z": "d3c4fb0cefa46834",
        "name": "function 50",
        "func": "const now = new Date();\nconst threeDaysBefore = new Date(now)\nthreeDaysBefore.setDate(now.getDate() - 3)\nthreeDaysBefore.setHours(0,0,0,0); // saati sıfırladık\n\nmsg.payload = msg.payload.filter(user => {\n    const [day,month,year] = user.date.split(\".\") // userin datesini 3parçaya böldük\n    const fullDateStr = `${year}-${month}-${day}T${user.time}`; // fullDateyi yazdırdık \n    const signDate = new Date(fullDateStr); \n    return signDate > threeDaysBefore && signDate < now\n})\nconst lastthreedaysusers = msg.payload.length\nconst activeUserCount = msg.activeUserCount\nconst passiveUserCount = msg.passiveUserCount\nmsg.payload = {\n    lastthreedaysusers,\n    activeUserCount,\n    passiveUserCount\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 300,
        "wires": [
            [
                "e2cb00ab2ed96569"
            ]
        ]
    },
    {
        "id": "7f4b4516876d6638",
        "type": "comment",
        "z": "d3c4fb0cefa46834",
        "name": "inject balğadıgımda hata",
        "info": "",
        "x": 210,
        "y": 240,
        "wires": []
    },
    {
        "id": "488d12abf1447f17",
        "type": "function",
        "z": "d3c4fb0cefa46834",
        "name": "function 51",
        "func": "msg.passiveUserCount = msg.payload\nmsg.payload = {}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 300,
        "wires": [
            [
                "a7be7260299548d6"
            ]
        ]
    },
    {
        "id": "a7be7260299548d6",
        "type": "mongodb4",
        "z": "d3c4fb0cefa46834",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "find",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 1310,
        "y": 300,
        "wires": [
            [
                "04c07ee21ee37e67"
            ]
        ]
    },
    {
        "id": "e2cb00ab2ed96569",
        "type": "http response",
        "z": "d3c4fb0cefa46834",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1700,
        "y": 300,
        "wires": []
    },
    {
        "id": "1eadae2df7203f9b",
        "type": "http in",
        "z": "d3c4fb0cefa46834",
        "name": "",
        "url": "/api/userStats",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 300,
        "wires": [
            [
                "9a09c95bf6cd415b"
            ]
        ]
    },
    {
        "id": "05488fe851646182",
        "type": "http in",
        "z": "d3c4fb0cefa46834",
        "name": "",
        "url": "/api/todoStats",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 468.0000305175781,
        "wires": [
            [
                "ada37df688efcc50"
            ]
        ]
    },
    {
        "id": "ada37df688efcc50",
        "type": "function",
        "z": "d3c4fb0cefa46834",
        "name": "function 53",
        "func": "msg.payload = {\n    \"done\" : false \n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 468.0000305175781,
        "wires": [
            [
                "765dc550e103ca38"
            ]
        ]
    },
    {
        "id": "765dc550e103ca38",
        "type": "mongodb4",
        "z": "d3c4fb0cefa46834",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "todo",
        "operation": "count",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 590,
        "y": 468.0000305175781,
        "wires": [
            [
                "693abc811d2facab"
            ]
        ]
    },
    {
        "id": "5ff1dc9f9dfd6606",
        "type": "http response",
        "z": "d3c4fb0cefa46834",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2150,
        "y": 460,
        "wires": []
    },
    {
        "id": "693abc811d2facab",
        "type": "function",
        "z": "d3c4fb0cefa46834",
        "name": "function 54",
        "func": "msg.unCompletedTodos = msg.payload\nmsg.payload = {\n    \"done\" : true\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 468.0000305175781,
        "wires": [
            [
                "1b33696f9e0e8a85"
            ]
        ]
    },
    {
        "id": "1b33696f9e0e8a85",
        "type": "mongodb4",
        "z": "d3c4fb0cefa46834",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "todo",
        "operation": "count",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 960,
        "y": 468.0000305175781,
        "wires": [
            [
                "f45b976613f31998"
            ]
        ]
    },
    {
        "id": "f45b976613f31998",
        "type": "function",
        "z": "d3c4fb0cefa46834",
        "name": "function 55",
        "func": "msg.completedTodos = msg.payload\nmsg.payload = {}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 468.0000305175781,
        "wires": [
            [
                "03a2ea5d862677ef"
            ]
        ]
    },
    {
        "id": "03a2ea5d862677ef",
        "type": "mongodb4",
        "z": "d3c4fb0cefa46834",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "todo",
        "operation": "count",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 1340,
        "y": 468.0000305175781,
        "wires": [
            [
                "8781c95dddfe7335"
            ]
        ]
    },
    {
        "id": "8781c95dddfe7335",
        "type": "function",
        "z": "d3c4fb0cefa46834",
        "name": "function 56",
        "func": "msg.todos = msg.payload;\nmsg.payload = [[\n    {\n        $group : {\n            _id : \"$stamp.username\",\n            count : {\n                $sum :1\n            }\n        }\n    }\n]]\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 468.0000305175781,
        "wires": [
            [
                "5c3669d968da01d6"
            ]
        ]
    },
    {
        "id": "5c3669d968da01d6",
        "type": "mongodb4",
        "z": "d3c4fb0cefa46834",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "todo",
        "operation": "aggregate",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 1700,
        "y": 460,
        "wires": [
            [
                "aba45f9c5c74de7e"
            ]
        ]
    },
    {
        "id": "aba45f9c5c74de7e",
        "type": "function",
        "z": "d3c4fb0cefa46834",
        "name": "function 57",
        "func": "const userStatss = msg.payload\nconst unCompletedTodos = msg.unCompletedTodos;\nconst completedTodos = msg.completedTodos;\nconst todos = msg.todos\nmsg.payload = {\n    userStatss,\n    unCompletedTodos,\n    completedTodos,\n    todos\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 460,
        "wires": [
            [
                "5ff1dc9f9dfd6606"
            ]
        ]
    },
    {
        "id": "50cbcfb859db4354",
        "type": "function",
        "z": "d3c4fb0cefa46834",
        "name": "function 59",
        "func": "msg.payload = [{\n    $sort : {\"date\" : -1}\n}]\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 620,
        "wires": [
            [
                "653634246df05edb"
            ]
        ]
    },
    {
        "id": "2311bc7d08394c02",
        "type": "http response",
        "z": "d3c4fb0cefa46834",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 620,
        "wires": []
    },
    {
        "id": "653634246df05edb",
        "type": "mongodb4",
        "z": "d3c4fb0cefa46834",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "aggregate",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 640,
        "y": 620,
        "wires": [
            [
                "2311bc7d08394c02"
            ]
        ]
    },
    {
        "id": "4dee092d9b8eea2a",
        "type": "inject",
        "z": "d3c4fb0cefa46834",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 620,
        "wires": [
            [
                "50cbcfb859db4354"
            ]
        ]
    }
]