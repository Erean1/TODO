[
    {
        "id": "d8112b18e3794244",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7357fc440e36aebb",
        "type": "tab",
        "label": "APIS",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c97b21956f467bbb",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9a024a21c0703f56",
        "type": "tab",
        "label": "Partials",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a494dcc6cc32ec33",
        "type": "tab",
        "label": "AUTH",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b3c1ef86c9e1d050",
        "type": "tab",
        "label": "Görev Takip",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "85ff2d8e203f5bb5",
        "type": "subflow",
        "name": "Check User",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 120,
                "wires": [
                    {
                        "id": "eb929805d807bc49"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 740,
                "y": 100,
                "wires": [
                    {
                        "id": "c7500ef4fb4169e6",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1920,
                "y": 120,
                "wires": [
                    {
                        "id": "4cdfbb42a913bcc4",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#3FADB5",
        "icon": "font-awesome/fa-user-secret"
    },
    {
        "id": "db78b07eb18119f0",
        "type": "subflow",
        "name": "Has Admin",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 200,
                "wires": [
                    {
                        "id": "a37416cd213494af"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 600,
                "y": 160,
                "wires": [
                    {
                        "id": "a37416cd213494af",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#FFAAAA",
        "icon": "font-awesome/fa-diamond"
    },
    {
        "id": "eb3bb1a5b4cedf9b",
        "type": "mongodb4-client",
        "name": "TODO DB",
        "protocol": "mongodb",
        "hostname": "localhost",
        "port": "27017",
        "dbName": "todo",
        "appName": "",
        "authSource": "",
        "authMechanism": "DEFAULT",
        "tls": false,
        "tlsCAFile": "",
        "tlsCertificateKeyFile": "",
        "tlsInsecure": false,
        "connectTimeoutMS": "30000",
        "socketTimeoutMS": "0",
        "minPoolSize": "0",
        "maxPoolSize": "100",
        "maxIdleTimeMS": "0",
        "uri": "",
        "advanced": "{}",
        "uriTabActive": "tab-uri-simple"
    },
    {
        "id": "13b56b3e9d46889f",
        "type": "jwt verify",
        "z": "85ff2d8e203f5bb5",
        "name": "accessverify",
        "alg": [
            "HS256"
        ],
        "jwkurl": "",
        "secret": "d051c56a37ecd1eb89a9412ed5912dc9",
        "key": "",
        "signvar": "token",
        "storetoken": "token",
        "x": 410,
        "y": 120,
        "wires": [
            [
                "c7500ef4fb4169e6"
            ]
        ]
    },
    {
        "id": "c7500ef4fb4169e6",
        "type": "function",
        "z": "85ff2d8e203f5bb5",
        "name": "function 4",
        "func": "// token yoksa hata çevir 2. çıkıştan\nif (msg.statusCode === 401 || msg.token.ip !== msg.req.ip) {\n    msg.payload = {\n        refreshToken : msg.refresh\n    }\n    delete msg.refresh\n    delete msg.token\n    delete msg.error\n    return [null,msg]\n}\n// token varsa tokeni al user olarak döndür\nmsg.user = msg.token\nmsg.hasAdmin = msg.user.roles.includes(\"admin\")\ndelete  msg.refresh\ndelete msg.token\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 120,
        "wires": [
            [],
            [
                "566d6dcd7935c4ef"
            ]
        ]
    },
    {
        "id": "eb929805d807bc49",
        "type": "function",
        "z": "85ff2d8e203f5bb5",
        "name": "function 5",
        "func": "// tokeni isteği yapan kullanıcının cookieslerinden çektik\nmsg.token = msg.req.cookies.accessToken || \"\"\nmsg.refresh = msg.req.cookies.refreshToken || \"\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 120,
        "wires": [
            [
                "13b56b3e9d46889f"
            ]
        ]
    },
    {
        "id": "84b734fd759f0b7f",
        "type": "http response",
        "z": "85ff2d8e203f5bb5",
        "name": "",
        "statusCode": "302",
        "headers": {
            "location": "/login"
        },
        "x": 1320,
        "y": 660,
        "wires": []
    },
    {
        "id": "205280b5f8799cc4",
        "type": "catch",
        "z": "85ff2d8e203f5bb5",
        "name": "",
        "scope": [
            "13b56b3e9d46889f"
        ],
        "uncaught": false,
        "x": 410,
        "y": 160,
        "wires": [
            [
                "c7500ef4fb4169e6"
            ]
        ]
    },
    {
        "id": "cccc0d8ea15e66be",
        "type": "http request",
        "z": "85ff2d8e203f5bb5",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost:1880/api/refresh-token",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1010,
        "y": 120,
        "wires": [
            [
                "f54ff9463b83b265"
            ]
        ]
    },
    {
        "id": "566d6dcd7935c4ef",
        "type": "function",
        "z": "85ff2d8e203f5bb5",
        "name": "function 26",
        "func": "if (!msg.payload.refreshToken){\n    return [null,msg]\n}\n\nmsg.method = \"POST\"\nmsg.headers = {\n    \"Content-Type\" : \"application/json\"\n};\n\n\nreturn [msg,null]",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 180,
        "wires": [
            [
                "cccc0d8ea15e66be"
            ],
            [
                "30ee7439f70f7074"
            ]
        ]
    },
    {
        "id": "f54ff9463b83b265",
        "type": "function",
        "z": "85ff2d8e203f5bb5",
        "name": "function 30",
        "func": "\nif (!msg.payload){\n    return [null,msg]\n}\n\nmsg.token = msg.payload.token\n\n\n\n\nreturn [msg,null]",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 120,
        "wires": [
            [
                "ba7e037b552eb0ed"
            ],
            [
                "a3c1e8a32f4d8736"
            ]
        ]
    },
    {
        "id": "30ee7439f70f7074",
        "type": "http response",
        "z": "85ff2d8e203f5bb5",
        "name": "",
        "statusCode": "302",
        "headers": {
            "location": "/login"
        },
        "x": 980,
        "y": 240,
        "wires": []
    },
    {
        "id": "a3c1e8a32f4d8736",
        "type": "http response",
        "z": "85ff2d8e203f5bb5",
        "name": "",
        "statusCode": "302",
        "headers": {
            "location": "/login"
        },
        "x": 1360,
        "y": 200,
        "wires": []
    },
    {
        "id": "ba7e037b552eb0ed",
        "type": "jwt verify",
        "z": "85ff2d8e203f5bb5",
        "name": "",
        "alg": [
            "HS256"
        ],
        "jwkurl": "",
        "secret": "d051c56a37ecd1eb89a9412ed5912dc9",
        "key": "",
        "signvar": "token",
        "storetoken": "token",
        "x": 1450,
        "y": 120,
        "wires": [
            [
                "4cdfbb42a913bcc4"
            ]
        ]
    },
    {
        "id": "4cdfbb42a913bcc4",
        "type": "function",
        "z": "85ff2d8e203f5bb5",
        "name": "function 31",
        "func": "// token yoksa hata çevir 2. çıkıştan\nif (!msg.token || msg.token.ip !== msg.req.ip) {\n    return [null,msg]\n}\n\n\nmsg.headers = msg.headers || {};\nmsg.headers['Set-Cookie'] = [\n    `accessToken=${msg.payload.token}; HttpOnly; Secure; Path=/; Max-age=60`,]\n// token varsa tokeni al user olarak döndür\nmsg.user = msg.token\nmsg.hasAdmin = msg.user.roles.includes(\"admin\")\nmsg.statusCode =302\nmsg.headers.location = \"/\"\n\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 120,
        "wires": [
            [],
            [
                "d18dece571cb2354"
            ]
        ]
    },
    {
        "id": "d18dece571cb2354",
        "type": "http response",
        "z": "85ff2d8e203f5bb5",
        "name": "",
        "statusCode": "302",
        "headers": {
            "location": "/login"
        },
        "x": 1860,
        "y": 180,
        "wires": []
    },
    {
        "id": "a37416cd213494af",
        "type": "function",
        "z": "db78b07eb18119f0",
        "name": "function 7",
        "func": "if (msg.user && msg.user.roles && msg.user.roles.includes(\"admin\")) return msg\n\nreturn [null,msg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 200,
        "wires": [
            [],
            [
                "ed88edb1b2b59ad7"
            ]
        ]
    },
    {
        "id": "ed88edb1b2b59ad7",
        "type": "http response",
        "z": "db78b07eb18119f0",
        "name": "",
        "statusCode": "302",
        "headers": {
            "location": "/login"
        },
        "x": 600,
        "y": 240,
        "wires": []
    },
    {
        "id": "b43d1f4f68d54d28",
        "type": "http in",
        "z": "d8112b18e3794244",
        "name": "",
        "url": "/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 400,
        "wires": [
            [
                "04b3861bb193429d"
            ]
        ]
    },
    {
        "id": "1b9146e8d8077382",
        "type": "http response",
        "z": "d8112b18e3794244",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 825.8570938110352,
        "y": 401.14277839660645,
        "wires": []
    },
    {
        "id": "cdb2acd15c941da3",
        "type": "template",
        "z": "d8112b18e3794244",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Yapılacaklar Listesi</title>\n\n  <!-- CSS -->\n  <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n  <link rel=\"stylesheet\" href=\"/font/bootstrap-icons.min.css\" />\n  <link href=\"https://unpkg.com/survey-core/survey-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n  <link href=\"https://cdn.datatables.net/2.3.2/css/dataTables.dataTables.min.css\" rel=\"stylesheet\">\n  <link rel=\"stylesheet\" href=\"https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css\">\n  <link href=\"https://unpkg.com/survey-core/defaultV2.min.css\" rel=\"stylesheet\" />\n\n  <!-- Custom CSS -->\n  <style>\n    :root {\n      --primary-color: #4e73df;\n      --secondary-color: #f8f9fc;\n      --accent-color: #2e59d9;\n      --text-dark: #5a5c69;\n    }\n\n    body {\n      background-color: #f8f9fc;\n      color: var(--text-dark);\n      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    }\n\n    .navbar {\n      background: linear-gradient(135deg, var(--primary-color) 0%, var(--accent-color) 100%) !important;\n      box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);\n    }\n\n    .navbar-brand {\n      font-weight: 800;\n      letter-spacing: 1px;\n    }\n\n    .nav-link {\n      font-weight: 500;\n      padding: 0.5rem 1rem;\n      border-radius: 0.35rem;\n      transition: all 0.3s;\n    }\n\n    .nav-link:hover {\n      background-color: rgba(255, 255, 255, 0.1);\n    }\n\n    .card {\n      border: none;\n      border-radius: 0.35rem;\n      box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.1);\n      margin-bottom: 1.5rem;\n    }\n\n    .card-header {\n      background-color: var(--secondary-color);\n      border-bottom: 1px solid #e3e6f0;\n      font-weight: 600;\n      padding: 1rem 1.35rem;\n    }\n\n    .btn-primary {\n      background-color: var(--primary-color);\n      border-color: var(--primary-color);\n    }\n\n    .btn-primary:hover {\n      background-color: var(--accent-color);\n      border-color: var(--accent-color);\n    }\n\n    .user-info {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n    }\n\n    .user-avatar {\n      width: 32px;\n      height: 32px;\n      border-radius: 50%;\n      background-color: white;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      font-weight: bold;\n      color: var(--primary-color);\n    }\n\n    .admin-btn {\n      width: 50px;\n      height: 50px;\n      border-radius: 50%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.3);\n    }\n\n    /* Responsive adjustments */\n    @media (max-width: 768px) {\n      .navbar .container-fluid {\n        flex-direction: column;\n        align-items: flex-start;\n      }\n\n      .navbar .d-flex {\n        width: 100%;\n        justify-content: space-between;\n        margin-top: 0.5rem;\n      }\n\n      .nav-link {\n        padding: 0.5rem;\n        font-size: 0.9rem;\n      }\n\n      .user-info {\n        flex-direction: column;\n        align-items: flex-end;\n        gap: 0.2rem;\n      }\n\n      .user-info span {\n        font-size: 0.8rem;\n      }\n    }\n\n    @media (max-width: 576px) {\n      .navbar .d-flex:first-child {\n        flex-wrap: wrap;\n      }\n\n      .nav-link {\n        margin-bottom: 0.2rem;\n      }\n    }\n  </style>\n</head>\n\n<body>\n  <!-- Navbar -->\n  <nav class=\"navbar navbar-expand-lg bg-dark text-white p-2 sticky-top\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand me-3\" href=\"\">TODO</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarContent\"\n              aria-controls=\"navbarContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div class=\"collapse navbar-collapse\" id=\"navbarContent\">\n        <div class=\"d-flex flex-grow-1\">\n          <ul class=\"navbar-nav me-auto\">\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#addTodo\"><i class=\"bi bi-plus-circle me-1\"></i>Görev Ekle</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#myTodos\"><i class=\"bi bi-list-check me-1\"></i>Görevlerim</a>\n            </li>\n            {{#hasAdmin}}\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#addUser\"><i class=\"bi bi-person-plus me-1\"></i>Kullanıcı Ekle</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#userList\"><i class=\"bi bi-people me-1\"></i>Kullanıcılar</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#logs\"><i class=\"bi bi-people me-1\"></i>Loglar</a>\n            </li>\n            {{/hasAdmin}}\n          </ul>\n\n          <div class=\"user-info\">\n            <span>{{user.displayName}} <small class=\"text-white-50\">| {{user.username}}</small></span>\n            <a href=\"#logout\" class=\"btn btn-sm btn-danger ms-2\"><i class=\"bi bi-power\"></i> Çıkış</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </nav>\n\n  <!-- Main Content -->\n  <div class=\"container py-4\">\n    <div class=\"row\">\n      <div class=\"col-lg-10 mx-auto\">\n        <div id=\"contentContainer\" class=\"card\">\n          <div class=\"card-body p-4\">\n\n            <div class=\"text-center py-5\">\n              <i class=\"bi bi-list-task\" style=\"font-size: 3rem; color: #ddd;\"></i>\n              <h5 class=\"mt-3 text-muted\">Bir bölüm seçin</h5>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Admin Button -->\n  {{#hasAdmin}}\n  <a href=\"#admin\" class=\"btn btn-danger admin-btn position-fixed bottom-0 end-0 m-4\" data-bs-toggle=\"tooltip\"\n    data-bs-placement=\"left\" title=\"Admin Paneli\">\n    <i class=\"bi bi-shield-lock\"></i>\n  </a>\n  {{/hasAdmin}}\n\n  <!-- JavaScript -->\n  <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\"\n    integrity=\"sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=\" crossorigin=\"anonymous\"></script>\n  <script type=\"text/javascript\" src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n  <script type=\"text/javascript\" src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n  <script src=\"https://cdn.datatables.net/2.3.2/js/dataTables.min.js\"></script>\n  <script src=\"https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js\"></script>\n  <script src=\"/js/bootstrap.bundle.min.js\"></script>\n  <script type=\"module\" src=\"/js/navigation.js\"></script>\n  <script type=\"module\" src=\"/js/form.js\"></script>\n\n  <script>\n    // Initialize tooltips\n    document.addEventListener('DOMContentLoaded', function() {\n      const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\n      const tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\n        return new bootstrap.Tooltip(tooltipTriggerEl);\n      });\n\n    });\n\n  </script>\n</body>\n\n</html>",
        "output": "str",
        "x": 635.8570938110352,
        "y": 401.14277839660645,
        "wires": [
            [
                "1b9146e8d8077382"
            ]
        ]
    },
    {
        "id": "4345a911bceedd8a",
        "type": "inject",
        "z": "d8112b18e3794244",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110.99996948242188,
        "y": 175.0000467300415,
        "wires": [
            [
                "9c7170ee9629c746"
            ]
        ]
    },
    {
        "id": "076fdfc277051bda",
        "type": "link out",
        "z": "d8112b18e3794244",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "76e21d0b94ca381e"
        ],
        "x": 945.9999694824219,
        "y": 175.0000467300415,
        "wires": []
    },
    {
        "id": "04b3861bb193429d",
        "type": "subflow:85ff2d8e203f5bb5",
        "z": "d8112b18e3794244",
        "name": "",
        "x": 425.85709381103516,
        "y": 401.14277839660645,
        "wires": [
            [
                "cdb2acd15c941da3"
            ],
            [
                "cdb2acd15c941da3"
            ]
        ]
    },
    {
        "id": "ab6ccb07c3afbff5",
        "type": "mongodb4",
        "z": "d8112b18e3794244",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "count",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 510,
        "y": 80,
        "wires": [
            [
                "0bd86dfa64719da0"
            ]
        ]
    },
    {
        "id": "62fcce3c836f0722",
        "type": "mongodb4",
        "z": "d8112b18e3794244",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 920,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "104adaa25892314c",
        "type": "inject",
        "z": "d8112b18e3794244",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 80,
        "wires": [
            [
                "e37f5a058907c7cc"
            ]
        ]
    },
    {
        "id": "0bd86dfa64719da0",
        "type": "function",
        "z": "d8112b18e3794244",
        "name": "function 8",
        "func": "const date = new Date();\nconst now = date.getTime()\n\nif (msg.payload) return\nmsg.payload = {\n    \"_id\" : now,\n    \"active\": true,\n    \"roles\": [\n        \"admin\"\n    ],\n    \"stamp\": {\n        \"createdAt\": 1751898167501,\n        \"ip\": \"127.0.0.1\",\n        \"username\": \"Ereans\",\n        \"email\": \"erencit55@gmail.com\"\n    },\n    \"username\": \"Ereans\",\n    \"password\": \"$2y$10$NvX/HC/DyIwnlR5PwgosIeR1JQbkG3zgb5aR1WIAoclrd.BQT3aum\",\n    \"email\": \"erencit55@gmail.com\",\n    \"displayName\": \"Eren Çit\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 80,
        "wires": [
            [
                "62fcce3c836f0722"
            ]
        ]
    },
    {
        "id": "e37f5a058907c7cc",
        "type": "function",
        "z": "d8112b18e3794244",
        "name": "function 9",
        "func": "msg.payload = {\n    username : \"Ereans\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 80,
        "wires": [
            [
                "ab6ccb07c3afbff5"
            ]
        ]
    },
    {
        "id": "272298e2863c7120",
        "type": "mongodb4",
        "z": "d8112b18e3794244",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "todo",
        "operation": "find",
        "output": "forEach",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 490.9999694824219,
        "y": 175.0000467300415,
        "wires": [
            [
                "fb078a267fd993bc"
            ]
        ]
    },
    {
        "id": "9c7170ee9629c746",
        "type": "function",
        "z": "d8112b18e3794244",
        "name": "function 13",
        "func": "msg.payload  = {\n    schedule : {\n        $exists : 1\n    }\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310.9999694824219,
        "y": 175.0000467300415,
        "wires": [
            [
                "272298e2863c7120"
            ]
        ]
    },
    {
        "id": "fb078a267fd993bc",
        "type": "change",
        "z": "d8112b18e3794244",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload.schedule.options",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730.9999694824219,
        "y": 175.0000467300415,
        "wires": [
            [
                "076fdfc277051bda"
            ]
        ]
    },
    {
        "id": "0ac019b8f42518dc",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "302",
        "headers": {},
        "x": 520.9999961853027,
        "y": 104.99999809265137,
        "wires": []
    },
    {
        "id": "ef2b6e9e89620457",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 20",
        "func": "msg.headers =  msg.headers || {};\n\nmsg.headers[\"Set-Cookie\"] = [\n    'accessToken=; HttpOnly; Secure; Path=/; Max-Age=0',\n    'refreshToken=; HttpOnly; Secure; Path=/; Max-Age=0',\n]\nconst logData = {\n    action : \"logout\",\n    user : msg.user?.email || \"\",\n    timestamp : new Date().toISOString(),\n    ip : msg.req?.ip || \"bilinmiyor\"\n}\n\nconst logResponse = {\n    payload : logData\n}\n\n\nreturn [msg,logResponse]",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340.99999618530273,
        "y": 104.99999809265137,
        "wires": [
            [
                "0ac019b8f42518dc"
            ],
            [
                "af35d8e71f95fd4b"
            ]
        ]
    },
    {
        "id": "ee5fc5c3dc5c5a53",
        "type": "http in",
        "z": "7357fc440e36aebb",
        "name": "",
        "url": "/api/logout",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160.99999618530273,
        "y": 104.99999809265137,
        "wires": [
            [
                "ef2b6e9e89620457"
            ]
        ]
    },
    {
        "id": "40bc04c88d13480e",
        "type": "comment",
        "z": "7357fc440e36aebb",
        "name": "LOGOUT",
        "info": "",
        "x": 140,
        "y": 60,
        "wires": []
    },
    {
        "id": "b786d864f0108b86",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "db.todo.find()",
        "func": "let query = msg.user.roles.includes(\"admin\") ? {} : {\n    \"stamp.username\" : msg.user.username\n}\nmsg.payload = [[\n    {\n        $match : query\n    },\n    {\n        $sort : {\n            \"stamp.createdAt\" : -1\n        }\n    },\n]]\n\nmsg.hasAdmin = msg.user.roles.includes(\"admin\")\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 280,
        "wires": [
            [
                "40507340f6e543cc"
            ]
        ]
    },
    {
        "id": "40507340f6e543cc",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "todo",
        "operation": "aggregate",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 760,
        "y": 280,
        "wires": [
            [
                "959d5fb4a0851a8b"
            ]
        ]
    },
    {
        "id": "e79ed9a41bd31307",
        "type": "http in",
        "z": "7357fc440e36aebb",
        "name": "",
        "url": "/api/myTodos",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 280,
        "wires": [
            [
                "dd5b89efb68f0694"
            ]
        ]
    },
    {
        "id": "959d5fb4a0851a8b",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 910,
        "y": 280,
        "wires": []
    },
    {
        "id": "dd5b89efb68f0694",
        "type": "subflow:85ff2d8e203f5bb5",
        "z": "7357fc440e36aebb",
        "name": "",
        "x": 390,
        "y": 280,
        "wires": [
            [
                "b786d864f0108b86"
            ],
            [
                "b786d864f0108b86"
            ]
        ]
    },
    {
        "id": "b338ea1c68456de5",
        "type": "comment",
        "z": "7357fc440e36aebb",
        "name": "TODO LIST",
        "info": "",
        "x": 150,
        "y": 240,
        "wires": []
    },
    {
        "id": "896689446630c146",
        "type": "http in",
        "z": "7357fc440e36aebb",
        "name": "",
        "url": "/api/operation/:type",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 207.00001525878906,
        "y": 563.9999904632568,
        "wires": [
            [
                "740bd08d424da0d9"
            ]
        ]
    },
    {
        "id": "740bd08d424da0d9",
        "type": "subflow:85ff2d8e203f5bb5",
        "z": "7357fc440e36aebb",
        "name": "",
        "x": 461.5714340209961,
        "y": 570.2856998443604,
        "wires": [
            [
                "2cf1c9ccf564e8d6"
            ],
            [
                "2cf1c9ccf564e8d6"
            ]
        ]
    },
    {
        "id": "2cf1c9ccf564e8d6",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "validation",
        "func": "const typeLookup = {\n    trash: {\n        text: \"Silmek\",\n        requireArgs : [\"_id\"]\n    },\n    complete: {\n        text : \"Tamamlamak\",\n        requireArgs : [\"_id\"]\n    },\n    open: {\n        text : \"Açmak\",\n        requireArgs : [\"_id\"]\n    },\n    add : {\n        text : \"Eklemek\",\n        requireArgs : [\"name\",\"priority\",\"due_date\"]\n    },\n    update : {\n        text : \"Güncellemek\",\n        requireArgs : [\"_id\",\"name\"]\n    },\n    schedule: {\n        text: \"Hatırlatma Kurmak\",\n        requireArgs: [\"_id\"]\n    },\n}\n// Typlerimizi Mapledik burada \n\n\n// typelookup objesinin keylerine gidicek keylerde bu type var mi diye bakacak\nif (!Object.keys(typeLookup).includes(msg.req.params.type)) {\n    msg.payload = {\n        success : false,\n        error: `${msg.req.params.type} geçersiz bir parametredir `\n    }\n    // eğer bulamazsak 2. çıkışıtan msgyi içinde error olacak şekilde fırlattık\n    return [null, msg]\n}\n\n\n// burada ise typeLookup[type].requireArgslerin hepsinin içinde döngüyle geeziyoruz every olduğu için hepsi olmak zorunda \nif (!typeLookup[msg.req.params.type].requireArgs.every(arg => msg.payload[arg])) {\n    msg.payload = {\n        success :false,\n        error: \"Lütfen Tüm alanları eksiksiz doldurunuz\"\n    }\n    // eğer bir tanesi bile yoksa 2. çıkıştan msg ile error döner\n    return [null, msg]\n}\n\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 657.0000152587891,
        "y": 563.9999904632568,
        "wires": [
            [
                "cf0ab06fa2e1711d"
            ],
            [
                "4f89f5bfbc63161c"
            ]
        ],
        "outputLabels": [
            "Valid",
            "Invalid"
        ]
    },
    {
        "id": "cf0ab06fa2e1711d",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "db.todo.opt()",
        "func": "const date = new Date()\nconst now = date.getTime()\n\n\nmsg.formData = msg.payload\n\nconst insertQuery = {\n    id : now,\n    name : msg.formData.name,\n    done : false,\n    priority : msg.formData.priority,\n    due_date : msg.formData.due_date,\n    stamp : {\n        createdAt : now,\n        ip : msg.req.ip,\n        username : msg.user.username || \"\",\n        email : msg.user.email || \"\",\n    },\n    date : date.toLocaleDateString(\"TR\"),\n    time : date.toLocaleTimeString(\"TR\")\n}\n\nconst logData = {\n    action : msg.req?.params.type || \"boş\",\n    user : msg.user?.email || \"\",\n    timestamp : new Date().toISOString(),\n    ip : msg.req?.ip || \"bilinmiyor\"\n}\nconst msgForLog = {\n    payload: logData\n}\n\nif (msg.req.params.type === \"add\") {\n    msg.payload = insertQuery\n    return [msg,null,msgForLog]\n}\nlet query = {\n    _id : msg.payload._id\n}\nmsg.payload = [query];\n\n\n\nreturn [null,msg,msgForLog]\n\n\n\n\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 540,
        "wires": [
            [
                "a31da0fe609e8a3e"
            ],
            [
                "d39bd054e0ace37e"
            ],
            [
                "461c351409a6d868"
            ]
        ],
        "outputLabels": [
            "Succ",
            "Err",
            ""
        ]
    },
    {
        "id": "a31da0fe609e8a3e",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "todo",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 1101.5713806152344,
        "y": 385.28559494018555,
        "wires": [
            [
                "d695a57c02f4c794"
            ]
        ]
    },
    {
        "id": "d39bd054e0ace37e",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "todo",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 1121.5713806152344,
        "y": 525.2855949401855,
        "wires": [
            [
                "c1039dd81e56699e"
            ]
        ]
    },
    {
        "id": "d695a57c02f4c794",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "",
        "headers": {
            "location": "/",
            "content-type": "application/json"
        },
        "x": 1251.5713806152344,
        "y": 385.28559494018555,
        "wires": []
    },
    {
        "id": "c1039dd81e56699e",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 12",
        "func": "const date = new Date()\nconst now = date.getTime()\nmsg.todo = msg.payload\nif (!msg.todo) {\n    msg.payload = {\n        success: false,\n        error: \"Id ile eşleşen bir kayıt bulunamadı.\"\n    }\n    return [null, msg];\n}\n\nif (msg.todo.stamp.username !== msg.user.username && !msg.user.roles.includes(\"admin\")) {\n    msg.payload = {\n        success :false,\n        error: \"Yetkisiz Erişim\"\n    }\n}\n\nif (msg.req.params.type === \"update\" && msg.todo.done) {\n    msg.payload = {\n        success: false,\n        message: \"Tamamlanan işler güncellenemez.\"\n    }\n    return [null, msg];\n}\nmsg.payload = [\n    {\n        _id: msg.formData._id\n    },\n]\n\n\nif (msg.req.params.type === \"trash\") {\n    msg.operation = \"deleteOne\"\n} else if (msg.req.params.type === \"schedule\") {\n    let scheduleOptions = msg.scheduleOptions = {\n        \"crontiMethod\": \"onIntervalTime\",\n        \"crontiArgs\": [\n            msg.formData.datetime,\n            msg.formData.datetime\n        ]\n    }\n    msg.payload.push({\n        $set: {\n            schedule: {\n                formData: msg.formData,\n                options: scheduleOptions\n            },\n        }\n    })\n    msg.operation = \"updateOne\"\n} else {\n    msg.operation = \"updateOne\"\n    switch (msg.req.params.type) {\n        case \"complete\":\n            msg.payload.push({\n                $set: {\n                    done: true\n                }\n            })\n            break;\n        case \"open\":\n            msg.payload.push({\n                $set: {\n                    done: false\n                }\n            })\n            break;\n        case \"update\":\n            msg.payload.push({\n                $set: {\n                    name: msg.formData.name\n                }\n            })\n            break;\n    }\n    msg.payload[1].$set.stamp = {\n        createdAt: now,\n        ip: msg.req.ip,\n        username: msg.user.username || \"\",\n        email: msg.user.email || \"\"\n    }\n    msg.payload[1].$set.date = date.toLocaleDateString(\"TR\"),\n        msg.payload[1].$set.time = date.toLocaleTimeString(\"TR\")\n}\n\n\nreturn msg.scheduleOptions ? [msg, null, msg] : msg;",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1287.000015258789,
        "y": 523.9999904632568,
        "wires": [
            [
                "3f6932f99e2dab32"
            ],
            [
                "cbc9619dada1ac64"
            ],
            [
                "25988edf59d5c388"
            ]
        ]
    },
    {
        "id": "3f6932f99e2dab32",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "todo",
        "operation": "",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 1491.5713806152344,
        "y": 425.28559494018555,
        "wires": [
            [
                "116d4707fcf4d9ee"
            ]
        ]
    },
    {
        "id": "25988edf59d5c388",
        "type": "change",
        "z": "7357fc440e36aebb",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "scheduleOptions",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1581.5713806152344,
        "y": 525.2855949401855,
        "wires": [
            [
                "9021f4cae42c7ec3"
            ]
        ]
    },
    {
        "id": "e34bf97f96bd77ce",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "",
        "headers": {
            "location": "/"
        },
        "x": 1867.000015258789,
        "y": 423.99999046325684,
        "wires": []
    },
    {
        "id": "4d308ebffb9e6605",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "deleteSchedule",
        "func": "if (msg.todo?.schedule?.response){\n    msg.payload = {\n        id : msg.todo.schedule.response.self._id\n    }\n    return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1083.5002670288086,
        "y": 818.8571338653564,
        "wires": [
            [
                "78af2c8cdc7c7b6e"
            ]
        ]
    },
    {
        "id": "76e21d0b94ca381e",
        "type": "link in",
        "z": "7357fc440e36aebb",
        "name": "link in 2",
        "links": [
            "076fdfc277051bda",
            "9021f4cae42c7ec3"
        ],
        "x": 968.5002670288086,
        "y": 758.8571338653564,
        "wires": [
            [
                "ee0df47755e6b9c8",
                "4d308ebffb9e6605"
            ]
        ]
    },
    {
        "id": "78af2c8cdc7c7b6e",
        "type": "crontinject",
        "z": "7357fc440e36aebb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "crontiMethod": "",
        "crontiArgs": "[]",
        "inputs": 1,
        "hasButton": false,
        "x": 1263.5002670288086,
        "y": 818.8571338653564,
        "wires": [
            []
        ]
    },
    {
        "id": "ee0df47755e6b9c8",
        "type": "crontinject",
        "z": "7357fc440e36aebb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "crontiMethod": "",
        "crontiArgs": "[]",
        "inputs": 1,
        "hasButton": false,
        "x": 1103.5002670288086,
        "y": 718.8571338653564,
        "wires": [
            [
                "c87badb39970cdda"
            ]
        ]
    },
    {
        "id": "c87badb39970cdda",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "header",
        "func": "if (msg.schedule) {\n    msg.payload  = [\n        {\n            _id : msg.formData._id\n        },\n        {\n            $set : {\n                schedule: msg.response\n            }\n        }\n    ]\n    return [null,msg]\n}\n\n\nmsg.from = \"noreply <noreply@todo.com\"\nmsg.to = msg.user.email\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1303.5002670288086,
        "y": 718.8571338653564,
        "wires": [
            [
                "fd96d20ef43a1609"
            ],
            [
                "edd8bf904ee535af"
            ]
        ]
    },
    {
        "id": "fd96d20ef43a1609",
        "type": "template",
        "z": "7357fc440e36aebb",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<p>Merhaba {{todo.stamp.username}}</p>\n<p></p>\n{{todo.name}} işiniz için hatırlatmak istiyoruz :)\n<p></p>\n<p>Bilginizw</p>",
        "output": "str",
        "x": 1517.500072479248,
        "y": 709.9999885559082,
        "wires": [
            [
                "30aeea0760851db7"
            ]
        ]
    },
    {
        "id": "edd8bf904ee535af",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "todo",
        "operation": "updateOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 1472.6113510131836,
        "y": 750.0793628692627,
        "wires": [
            []
        ]
    },
    {
        "id": "30aeea0760851db7",
        "type": "e-mail",
        "z": "7357fc440e36aebb",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 1767.500072479248,
        "y": 709.9999885559082,
        "wires": []
    },
    {
        "id": "e22df40cbd6baf83",
        "type": "comment",
        "z": "7357fc440e36aebb",
        "name": "OPERATIONS",
        "info": "",
        "x": 200,
        "y": 500,
        "wires": []
    },
    {
        "id": "7bad0aa737922700",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 894,
        "y": 873.9999809265137,
        "wires": []
    },
    {
        "id": "8f07b77ebe2f5634",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 21",
        "func": "msg.payload = JSON.parse(msg.payload)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 734,
        "y": 873.9999809265137,
        "wires": [
            [
                "7bad0aa737922700"
            ]
        ]
    },
    {
        "id": "af3fa94319d2329a",
        "type": "file in",
        "z": "7357fc440e36aebb",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 564,
        "y": 873.9999809265137,
        "wires": [
            [
                "8f07b77ebe2f5634"
            ]
        ]
    },
    {
        "id": "5d7727fabfc6ce8c",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 6",
        "func": "msg.filename = \"./storage/forms/\" + msg.req.params.type + \"-options\" + \".json\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 394,
        "y": 873.9999809265137,
        "wires": [
            [
                "af3fa94319d2329a"
            ]
        ]
    },
    {
        "id": "e805bbec574179bc",
        "type": "http in",
        "z": "7357fc440e36aebb",
        "name": "",
        "url": "/api/forms/:type",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 194,
        "y": 873.9999809265137,
        "wires": [
            [
                "5d7727fabfc6ce8c"
            ]
        ]
    },
    {
        "id": "be6423880d682a23",
        "type": "comment",
        "z": "7357fc440e36aebb",
        "name": "FORMS",
        "info": "",
        "x": 180,
        "y": 820,
        "wires": []
    },
    {
        "id": "9abced9741f769d2",
        "type": "comment",
        "z": "7357fc440e36aebb",
        "name": "TABLES",
        "info": "",
        "x": 144.28570556640625,
        "y": 1032.857105255127,
        "wires": []
    },
    {
        "id": "0dd8578ab3aa95f9",
        "type": "http in",
        "z": "7357fc440e36aebb",
        "name": "",
        "url": "/api/tables/:type",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 172.85714721679688,
        "y": 1082.857192993164,
        "wires": [
            [
                "31d20fb2719f7a14"
            ]
        ]
    },
    {
        "id": "6c92aaacb3fc80ce",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1092.8571472167969,
        "y": 1082.857192993164,
        "wires": []
    },
    {
        "id": "31d20fb2719f7a14",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 22",
        "func": "msg.filename = \"./storage/tables/\" + msg.req.params.type + \"-options\" + \".json\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 452.8571472167969,
        "y": 1082.857192993164,
        "wires": [
            [
                "ae1978b97efd6c20"
            ]
        ]
    },
    {
        "id": "ae1978b97efd6c20",
        "type": "file in",
        "z": "7357fc440e36aebb",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 662.8571472167969,
        "y": 1082.857192993164,
        "wires": [
            [
                "7ea375b3dd9088cb"
            ]
        ]
    },
    {
        "id": "7ea375b3dd9088cb",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 23",
        "func": "msg.payload = JSON.parse(msg.payload)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 872.8571472167969,
        "y": 1082.857192993164,
        "wires": [
            [
                "6c92aaacb3fc80ce"
            ]
        ]
    },
    {
        "id": "b1fd7d96596fcd6c",
        "type": "http in",
        "z": "7357fc440e36aebb",
        "name": "",
        "url": "/api/userList",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 752.8571701049805,
        "y": 107.14285469055176,
        "wires": [
            [
                "ed9d327073f4c7aa"
            ]
        ]
    },
    {
        "id": "ed9d327073f4c7aa",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "db.user.find()",
        "func": "msg.payload = [[\n    {\n        $match : {\n\n        }\n    },\n    {\n        $sort : {\n            \"stamp.createdAt\" : -1\n        }\n    },\n    {\n        $addFields : {\n            hasAdmin : {\n                $in : [\"admin\",\"$roles\"]\n            }\n        }\n    }\n]]\n\n\nreturn msg;\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 982.8571701049805,
        "y": 107.14285469055176,
        "wires": [
            [
                "1667c475e2d07947"
            ]
        ]
    },
    {
        "id": "1667c475e2d07947",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "aggregate",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 1172.8571701049805,
        "y": 107.14285469055176,
        "wires": [
            [
                "9d7b859d91d432c0"
            ]
        ]
    },
    {
        "id": "9d7b859d91d432c0",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1332.8571701049805,
        "y": 107.14285469055176,
        "wires": []
    },
    {
        "id": "854ec32cd2ca4689",
        "type": "http in",
        "z": "7357fc440e36aebb",
        "name": "",
        "url": "/api/user-operation/:type",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 195.71429443359375,
        "y": 1285.7143173217773,
        "wires": [
            [
                "42a14f6599ec2ff2"
            ]
        ]
    },
    {
        "id": "42a14f6599ec2ff2",
        "type": "subflow:85ff2d8e203f5bb5",
        "z": "7357fc440e36aebb",
        "name": "",
        "x": 425.71429443359375,
        "y": 1285.7143173217773,
        "wires": [
            [
                "76bccbdb518ec93c"
            ],
            [
                "76bccbdb518ec93c"
            ]
        ]
    },
    {
        "id": "76bccbdb518ec93c",
        "type": "subflow:db78b07eb18119f0",
        "z": "7357fc440e36aebb",
        "name": "",
        "x": 595.7142944335938,
        "y": 1285.7143173217773,
        "wires": [
            [
                "3b97d2f3037a7050"
            ]
        ]
    },
    {
        "id": "3b97d2f3037a7050",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "validation",
        "func": "\n\nconst typeLookup = {\n    add: {\n        text: \"Eklemek\",\n        requireArgs: [\"username\", \"password\",\"email\"],\n        validation: {\n            email(data, formData) { return /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(data)}\n        }\n    },\n    update: {\n        text: \"Güncellemek\",\n        requireArgs: [\"_id\", \"username\", \"password\", \"email\"],\n        validation: {\n            email(data,formData) { return /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(data)  }\n        }\n    }\n}\n\n// burda yine typelookup objesinin key kontrolünü yapıyoruz\nif (!Object.keys(typeLookup).includes(msg.req.params.type)) {\n    msg.payload = {\n        success : false,\n        error: `${msg.req.params.type} geçersiz bir parametredir `,\n        formData: msg.formData\n    }\n    // eğer geldiğimiz site user-edit ise 3. çıkıştan devam ediyoruz\n    return [null,msg]\n}\n\n\n// burda gene requireargslara girdik ve baktık her bir arga validasyon varsa ve validasyonun içinde argın ismi varsa\n// o fonksiyonu çalıştır yoksa true çevir çık sağ taraftada !username kısmını username olarak döndürücek\nif (!typeLookup[msg.req.params.type].requireArgs.some(arg => msg.payload[arg])){\n\n    msg.payload = {\n        success : false,\n        error : \"Lütfen Tüm Alanları Eksiksiz Doldurunuz!\",\n        formData: msg.formData\n    }\n    return [null,msg]\n    }\n\n// roles kısmı array mi arraysa böyle döndür değilse array yap\nmsg.payload.roles = Array.isArray(msg.payload.roles) ? msg.payload.roles : [msg.payload.roles]\nmsg.formData = msg.payload\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1280,
        "wires": [
            [
                "6775b57c1a373355"
            ],
            [
                "e380c2908312604a"
            ]
        ],
        "outputLabels": [
            "Valid",
            "Invalid"
        ]
    },
    {
        "id": "6775b57c1a373355",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 17",
        "func": "if (msg.req.params.type === \"add\") {\n    msg.payload = [{\n        _id: {\n            $ne: msg.formData._id\n        },\n        email: msg.formData.email\n    }]\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 1200,
        "wires": [
            [
                "bdb18612e0aa95f5"
            ]
        ]
    },
    {
        "id": "bdb18612e0aa95f5",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "count",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 1088.7143211364746,
        "y": 1193.7143096923828,
        "wires": [
            [
                "a9fa0d7be398c534"
            ]
        ]
    },
    {
        "id": "a9fa0d7be398c534",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 18",
        "func": "if (msg.payload){\n    msg.payload = {\n        success :false,\n        error: `Bu eposta adresi kullanılmaktadır.`,\n        formData : msg.formData\n    }\n    msg.payload = msg.formData\n    return [null,msg]  \n}\n\nreturn msg",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1248.7143211364746,
        "y": 1193.7143096923828,
        "wires": [
            [
                "a2299d8e95d6b8a2"
            ],
            [
                "ab1b3b51ff35c3e7"
            ]
        ]
    },
    {
        "id": "a2299d8e95d6b8a2",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 1",
        "func": "if(msg.formData.password) return msg;\ndelete msg.formData.password\n\nreturn [null,msg];  ",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 1120,
        "wires": [
            [
                "9063219a388572d5"
            ],
            [
                "a5da7d1f17305a54"
            ]
        ]
    },
    {
        "id": "9063219a388572d5",
        "type": "bcrypt",
        "z": "7357fc440e36aebb",
        "name": "",
        "action": "encrypt",
        "field": "formData.password",
        "hash": "payload",
        "target": "formData.password",
        "assignment": "assign",
        "match": "match",
        "outputs": 1,
        "rounds": "10",
        "x": 1646.7142448425293,
        "y": 1046.7143268585205,
        "wires": [
            [
                "a5da7d1f17305a54"
            ]
        ]
    },
    {
        "id": "a5da7d1f17305a54",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "db.user.opt()",
        "func": "const date = new Date()\nconst now = date.getTime()\n\n\nconst logData = {\n    action : msg.req.params?.type || \"bilinmiyor\",\n    user : msg.user?.email || \"bilinmiyor\",\n    timestamp : new Date().toISOString(),\n    ip : msg.req.ip ||\"bilinmiyor\"   \n}\nconst msgForLog = {\n    payload : logData\n}\n\nif (msg.req.params.type === \"add\") {\n    msg.payload = {\n        _id: now,\n        active: true,\n        stamp: {\n            createdAt: now,\n            ip: msg.req.ip,\n            username: \"\",\n            email: \"\",\n        },\n        roles : [\"user\"],\n        date: date.toLocaleDateString(\"TR\"),\n        time: date.toLocaleTimeString(\"TR\"),\n        // eğer başka bir veri varsa bunlarıda ekle dedik password mesela direkt eklenicek\n        ...msg.formData // destructing\n    };\n    return [msg,msgForLog]\n}\nmsg.payload = [{    \n    _id : parseInt(msg.formData._id)\n}] \n\nreturn [null,msg,msgForLog]\n\n\n\n\n\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1786.7142448425293,
        "y": 1126.7143268585205,
        "wires": [
            [
                "4c80bfc8cc23c2d1"
            ],
            [
                "deb2b10fd04bd591"
            ],
            [
                "4fc3fb7cb280308d"
            ]
        ],
        "outputLabels": [
            "Succ",
            "Err",
            null
        ]
    },
    {
        "id": "4c80bfc8cc23c2d1",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 2020,
        "y": 1040,
        "wires": [
            [
                "5697a4298bcd5365"
            ]
        ]
    },
    {
        "id": "deb2b10fd04bd591",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 2020,
        "y": 1100,
        "wires": [
            [
                "78da0bd605dbb6d4"
            ]
        ]
    },
    {
        "id": "5697a4298bcd5365",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2170,
        "y": 1040,
        "wires": []
    },
    {
        "id": "78da0bd605dbb6d4",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 14",
        "func": "const date = new Date();\nconst now = date.getTime()\n\nif (!msg.payload) {\n    msg.payload = {\n        success : false,\n        error: \"Id ile eşleşen bir kayıt bulunamadı.\",\n        formData: msg.formData\n    }\n    return [null, msg];\n}\n\n\nmsg.formData.active  = msg.formData.status === \"active\"\ndelete msg.formData.status\n\nconst recordId = msg.formData._id\ndelete msg.formData._id\n\nmsg.user = msg.payload\nmsg.payload = [\n    {\n        _id : parseInt(recordId)\n    },\n    {\n        $set: {\n            ...msg.formData,\n            stamp : {\n                createdAt : now,\n                ip : msg.req.ip,\n                username : msg.user.username || \"\",\n                email: msg.user.email || \"\"\n            },\n            date : date.toLocaleDateString(\"TR\"),\n            time : date.toLocaleTimeString(\"TR\")\n        }\n    }\n]\n\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2170,
        "y": 1100,
        "wires": [
            [
                "7003096b0bf05686"
            ],
            [
                "8bf68a9905d81f7d"
            ]
        ]
    },
    {
        "id": "7003096b0bf05686",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "updateOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 2350,
        "y": 1100,
        "wires": [
            [
                "ba3cd595d952f470"
            ]
        ]
    },
    {
        "id": "8bf68a9905d81f7d",
        "type": "link out",
        "z": "7357fc440e36aebb",
        "name": "link out 5",
        "mode": "link",
        "links": [],
        "x": 2291.71431350708,
        "y": 1238.7143125534058,
        "wires": []
    },
    {
        "id": "ba3cd595d952f470",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2530,
        "y": 1100,
        "wires": []
    },
    {
        "id": "760adc2406af9f88",
        "type": "comment",
        "z": "7357fc440e36aebb",
        "name": "USER LİSTESİ",
        "info": "",
        "x": 760,
        "y": 60,
        "wires": []
    },
    {
        "id": "020aba104c5f4008",
        "type": "comment",
        "z": "7357fc440e36aebb",
        "name": "USER OPERATIONS",
        "info": "",
        "x": 182.85714721679688,
        "y": 1235.714282989502,
        "wires": []
    },
    {
        "id": "116d4707fcf4d9ee",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "function 24",
        "func": "msg.payload = {\n    success : true\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1707.000015258789,
        "y": 423.99999046325684,
        "wires": [
            [
                "e34bf97f96bd77ce"
            ]
        ]
    },
    {
        "id": "4f89f5bfbc63161c",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 817.0000152587891,
        "y": 603.9999904632568,
        "wires": []
    },
    {
        "id": "9021f4cae42c7ec3",
        "type": "link out",
        "z": "7357fc440e36aebb",
        "name": "link out 12",
        "mode": "link",
        "links": [
            "76e21d0b94ca381e"
        ],
        "x": 1766.5713806152344,
        "y": 525.2855949401855,
        "wires": []
    },
    {
        "id": "cbc9619dada1ac64",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1487.000015258789,
        "y": 483.99999046325684,
        "wires": []
    },
    {
        "id": "6ec72e95d05f1554",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 890,
        "y": 1400,
        "wires": []
    },
    {
        "id": "e380c2908312604a",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 930,
        "y": 1280,
        "wires": []
    },
    {
        "id": "ab1b3b51ff35c3e7",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1420,
        "y": 1220,
        "wires": []
    },
    {
        "id": "4337f707373ced95",
        "type": "http in",
        "z": "7357fc440e36aebb",
        "name": "",
        "url": "/api/logs",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1660,
        "wires": [
            [
                "f78c4da52dbb84c8"
            ]
        ]
    },
    {
        "id": "f78c4da52dbb84c8",
        "type": "subflow:85ff2d8e203f5bb5",
        "z": "7357fc440e36aebb",
        "name": "",
        "x": 350,
        "y": 1660,
        "wires": [
            [
                "d0fddc2988667b6e"
            ],
            [
                "d0fddc2988667b6e"
            ]
        ]
    },
    {
        "id": "d0fddc2988667b6e",
        "type": "function",
        "z": "7357fc440e36aebb",
        "name": "db.logs.find()",
        "func": "msg.payload = {}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1660,
        "wires": [
            [
                "8f786c815763cb25"
            ]
        ]
    },
    {
        "id": "8f786c815763cb25",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "logs",
        "operation": "find",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 740,
        "y": 1660,
        "wires": [
            [
                "932ef563800a4a22"
            ]
        ]
    },
    {
        "id": "932ef563800a4a22",
        "type": "http response",
        "z": "7357fc440e36aebb",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 900,
        "y": 1660,
        "wires": []
    },
    {
        "id": "af35d8e71f95fd4b",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "logs",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 490,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "461c351409a6d868",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "logs",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 1060,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "4fc3fb7cb280308d",
        "type": "mongodb4",
        "z": "7357fc440e36aebb",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "logs",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 1960,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "ea92999f30f3cd81",
        "type": "http in",
        "z": "9a024a21c0703f56",
        "name": "",
        "url": "/addTodo",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 112.85713958740234,
        "y": 65.71428680419922,
        "wires": [
            [
                "75339ebc40f0fe7c"
            ]
        ]
    },
    {
        "id": "75339ebc40f0fe7c",
        "type": "template",
        "z": "9a024a21c0703f56",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\" integrity=\"sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=\" crossorigin=\"anonymous\"></script>\n    <link href=\"https://unpkg.com/survey-core/survey-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n    <link  rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n</head>\n<body>\n        \n        <div id=\"surveyContainer\"> </div> \n    \n</body>\n</html>",
        "output": "str",
        "x": 302.85713958740234,
        "y": 65.71428680419922,
        "wires": [
            [
                "f91a32bc4f9efce6"
            ]
        ]
    },
    {
        "id": "f91a32bc4f9efce6",
        "type": "http response",
        "z": "9a024a21c0703f56",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 482.85713958740234,
        "y": 65.71428680419922,
        "wires": []
    },
    {
        "id": "6b2bc9c4666ec89a",
        "type": "http in",
        "z": "9a024a21c0703f56",
        "name": "",
        "url": "/myTodos",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 112.38095092773438,
        "y": 179.99999475479126,
        "wires": [
            [
                "0b6bf06d8a096c99"
            ]
        ]
    },
    {
        "id": "0b6bf06d8a096c99",
        "type": "template",
        "z": "9a024a21c0703f56",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\" integrity=\"sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=\" crossorigin=\"anonymous\"></script>\n    <link href=\"https://unpkg.com/survey-core/survey-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n</head>\n<body>\n    \n    <div id=\"demo\" class=\"display\" style=\"width:100%\">\n    <table id=\"todoTable\" class=\"display\" style=\"width:100%\">\n        <thead>\n            <tr>\n            </tr>\n        </thead>\n        <tbody>\n            <!-- Veriler JS ile yüklenecek -->\n        </tbody>\n    </table>\n    <div id=\"yazdir\">YAZDIR</div>\n</div>\n\n    \n    <script>\n        const document.getElementById(\"yazdir\");\n        \n    </script>\n\n</body>\n</html>",
        "output": "str",
        "x": 305.7142868041992,
        "y": 179.9999861717224,
        "wires": [
            [
                "e86f0436079a9752"
            ]
        ]
    },
    {
        "id": "e86f0436079a9752",
        "type": "http response",
        "z": "9a024a21c0703f56",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 512.3809509277344,
        "y": 179.99999475479126,
        "wires": []
    },
    {
        "id": "c09adf8ada4cace5",
        "type": "template",
        "z": "9a024a21c0703f56",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\" integrity=\"sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=\" crossorigin=\"anonymous\"></script>\n    <link href=\"https://unpkg.com/survey-core/survey-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n</head>\n<body>\n    <div id=\"surveyContainer\"> </div> \n    \n</body>\n</html>",
        "output": "str",
        "x": 933.0952072143555,
        "y": 64.38101577758789,
        "wires": [
            [
                "e633d5fa3aa35ec2"
            ]
        ]
    },
    {
        "id": "55bec775c9ac9966",
        "type": "http in",
        "z": "9a024a21c0703f56",
        "name": "",
        "url": "/addUser",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 753.0952072143555,
        "y": 64.38101577758789,
        "wires": [
            [
                "c09adf8ada4cace5"
            ]
        ]
    },
    {
        "id": "e633d5fa3aa35ec2",
        "type": "http response",
        "z": "9a024a21c0703f56",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1103.0952072143555,
        "y": 64.38101577758789,
        "wires": []
    },
    {
        "id": "b7bd56084787486f",
        "type": "http in",
        "z": "9a024a21c0703f56",
        "name": "",
        "url": "/userList",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 726.9047775268555,
        "y": 183.5714168548584,
        "wires": [
            [
                "2ca176cddde2c92b"
            ]
        ]
    },
    {
        "id": "2ca176cddde2c92b",
        "type": "template",
        "z": "9a024a21c0703f56",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\" integrity=\"sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=\" crossorigin=\"anonymous\"></script>\n    <link href=\"https://unpkg.com/survey-core/survey-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n</head>\n<body>\n    \n    <div id=\"demo\" class=\"display\" style=\"width:100%\">\n    <table id=\"userTable\" class=\"display\" style=\"width:100%\">\n        <thead>\n            <tr>\n            </tr>\n        </thead>\n        <tbody>\n            <!-- Veriler JS ile yüklenecek -->\n        </tbody>\n    </table>\n</div>\n\n    \n\n\n</body>\n</html>",
        "output": "str",
        "x": 930.2381134033203,
        "y": 183.57140827178955,
        "wires": [
            [
                "4056b8369b61cd9d"
            ]
        ]
    },
    {
        "id": "4056b8369b61cd9d",
        "type": "http response",
        "z": "9a024a21c0703f56",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1136.9047775268555,
        "y": 183.5714168548584,
        "wires": []
    },
    {
        "id": "7dc909a1b99ebea2",
        "type": "http in",
        "z": "9a024a21c0703f56",
        "name": "",
        "url": "/edit/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 111.99999618530273,
        "y": 450.0001029968262,
        "wires": [
            [
                "68fc941b50b09f07"
            ]
        ]
    },
    {
        "id": "68fc941b50b09f07",
        "type": "subflow:85ff2d8e203f5bb5",
        "z": "9a024a21c0703f56",
        "name": "",
        "x": 371.99999618530273,
        "y": 450.0001029968262,
        "wires": [
            [
                "afb4034377d9af0a"
            ],
            [
                "afb4034377d9af0a"
            ]
        ]
    },
    {
        "id": "afb4034377d9af0a",
        "type": "function",
        "z": "9a024a21c0703f56",
        "name": "db.todo.findOne()",
        "func": "const query = {\n    _id : msg.req.params.id\n}\n\nif (!msg.user.roles.includes(\"admin\")) {\n    query[\"stamp.username\"] = msg.user.username\n}\n\nmsg.payload = [query];\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 633.9999771118164,
        "y": 440.00005626678467,
        "wires": [
            [
                "e75b99079b04948b"
            ]
        ],
        "outputLabels": [
            "Success"
        ]
    },
    {
        "id": "e75b99079b04948b",
        "type": "mongodb4",
        "z": "9a024a21c0703f56",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "todo",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 815.9999961853027,
        "y": 397.00002670288086,
        "wires": [
            [
                "56ad4649d1fcdf3c"
            ]
        ]
    },
    {
        "id": "56ad4649d1fcdf3c",
        "type": "function",
        "z": "9a024a21c0703f56",
        "name": "function 10",
        "func": "if (!msg.payload) {\n    msg.payload = {\n        success: false,\n        message: \"Id ile eşleşen bir kayıt bulunamadı.\"\n    }\n    return [null, msg]\n}\n\nif (msg.req.params.type === \"update\" && msg.payload.done) {\n    msg.payload = {\n        success: false,\n        message: \"Tamamlanan işler güncellenemez.\"\n    }\n    return [null, msg];\n}\nmsg.prefillDataSTR = JSON.stringify(msg.payload)\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1045.9999961853027,
        "y": 397.00002670288086,
        "wires": [
            [
                "7c99d5ae6806d6c9"
            ],
            [
                "6a40e79f2bf105de"
            ]
        ]
    },
    {
        "id": "7c99d5ae6806d6c9",
        "type": "template",
        "z": "9a024a21c0703f56",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Giriş Yap</title>\n\n  <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n  <link href=\"https://unpkg.com/survey-core/defaultV2.min.css\" rel=\"stylesheet\" />\n  <link href=\"https://unpkg.com/survey-core/survey-core.min.css\" rel=\"stylesheet\" />\n  <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\"></script>\n  <script src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n  <script src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n  <script type=\"module\" src=\"/js/form.js\"></script>\n  <script type=\"module\" src=\"/js/navigation.js\"></script>\n</head>\n\n<body>\n\n\n  <h2>Güncelle</h2>\n  <div id=\"surveyContainer\"></div>\n</body>\n\n<script> \n  window.prefillData = JSON.parse('{{{prefillDataSTR}}}')\n</script>\n\n<script type=\"module\">\n  import FormController from \"/js/form.js\";\n  const fc = new FormController();\n  (async () => {\n    await fc.loadForm(\"editTodo-form\",window.prefillData);\n  })();\n</script>\n\n</html>",
        "output": "str",
        "x": 1237,
        "y": 360.0001049041748,
        "wires": [
            [
                "63a30b5a157b51ba"
            ]
        ]
    },
    {
        "id": "6a40e79f2bf105de",
        "type": "http response",
        "z": "9a024a21c0703f56",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1225.9999961853027,
        "y": 437.00002670288086,
        "wires": []
    },
    {
        "id": "63a30b5a157b51ba",
        "type": "http response",
        "z": "9a024a21c0703f56",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1407,
        "y": 360.0001049041748,
        "wires": []
    },
    {
        "id": "aeb96d498776cf84",
        "type": "http in",
        "z": "9a024a21c0703f56",
        "name": "",
        "url": "/user-edit/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 580,
        "wires": [
            [
                "9446aab10379b614"
            ]
        ]
    },
    {
        "id": "9446aab10379b614",
        "type": "subflow:85ff2d8e203f5bb5",
        "z": "9a024a21c0703f56",
        "name": "",
        "x": 303.0000247955322,
        "y": 580.9999580383301,
        "wires": [
            [
                "f57203d89cf961cc"
            ],
            [
                "f57203d89cf961cc"
            ]
        ]
    },
    {
        "id": "f57203d89cf961cc",
        "type": "subflow:db78b07eb18119f0",
        "z": "9a024a21c0703f56",
        "name": "",
        "x": 473.0000247955322,
        "y": 580.9999580383301,
        "wires": [
            [
                "70783cd0be579d67"
            ]
        ]
    },
    {
        "id": "70783cd0be579d67",
        "type": "function",
        "z": "9a024a21c0703f56",
        "name": "db.user.findOne()",
        "func": "msg.formData = msg.payload\nlet options = {\n    projection: {\n        password: 0\n    }\n}\n\nlet query = {\n    _id : parseInt(msg.req.params.id)\n}\n\n\n\n\nmsg.payload = [query, options];\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 658.0000286102295,
        "y": 570.9999599456787,
        "wires": [
            [
                "51217707a67ee8b8"
            ]
        ],
        "outputLabels": [
            "Success"
        ]
    },
    {
        "id": "51217707a67ee8b8",
        "type": "mongodb4",
        "z": "9a024a21c0703f56",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 840,
        "y": 560,
        "wires": [
            [
                "9ae9803073956904"
            ]
        ]
    },
    {
        "id": "9ae9803073956904",
        "type": "function",
        "z": "9a024a21c0703f56",
        "name": "function 15",
        "func": "if (!msg.payload) {\n    msg.payload = {\n        success : false,\n        error : \"Id ile eşleşen bir kayıt bulunamadı.\",\n        formData: msg.formData\n    }\n    return [null, msg]\n}\n\n\nmsg.hasUser = msg.payload.roles.includes(\"user\")\nmsg.hasAdmin = msg.payload.roles.includes(\"admin\")\nmsg.prefillDataSTR = JSON.stringify(msg.payload)\nmsg.payload = { ...msg.payload, ...msg.formData,}\n\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1018.0000286102295,
        "y": 570.9999599456787,
        "wires": [
            [
                "e8e746187451589d"
            ],
            [
                "b676bc7f8d8fdb2f"
            ]
        ]
    },
    {
        "id": "e8e746187451589d",
        "type": "template",
        "z": "9a024a21c0703f56",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Giriş Yap</title>\n\n  <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n  <link href=\"https://unpkg.com/survey-core/defaultV2.min.css\" rel=\"stylesheet\" />\n  <link href=\"https://unpkg.com/survey-core/survey-core.min.css\" rel=\"stylesheet\" />\n  <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\"></script>\n  <script src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n  <script src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n  <script type=\"module\" src=\"/js/form.js\"></script>\n  <script type=\"module\" src=\"/js/navigation.js\"></script>\n</head>\n\n<body>\n\n\n  <h2>Güncelle</h2>\n  <div id=\"surveyContainer\"></div>\n</body>\n<script>\n  window.prefillData = JSON.parse('{{{prefillDataSTR}}}')\n</script>\n<script type=\"module\">\n  import FormController from \"/js/form.js\";\n  const fc = new FormController();\n  (async () => {\n    await fc.loadForm(\"editUser-form\",window.prefillData);\n  })();\n</script>\n\n</html>",
        "output": "str",
        "x": 1180,
        "y": 540,
        "wires": [
            [
                "8760132cf8aeaf29"
            ]
        ]
    },
    {
        "id": "b676bc7f8d8fdb2f",
        "type": "http response",
        "z": "9a024a21c0703f56",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1190,
        "y": 600,
        "wires": []
    },
    {
        "id": "8760132cf8aeaf29",
        "type": "http response",
        "z": "9a024a21c0703f56",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1378.0000286102295,
        "y": 530.9999599456787,
        "wires": []
    },
    {
        "id": "39243cf513b2a85a",
        "type": "http in",
        "z": "9a024a21c0703f56",
        "name": "",
        "url": "/schedule/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 760,
        "wires": [
            [
                "59b1c3369d32e415"
            ]
        ]
    },
    {
        "id": "59b1c3369d32e415",
        "type": "subflow:85ff2d8e203f5bb5",
        "z": "9a024a21c0703f56",
        "name": "",
        "x": 330,
        "y": 760,
        "wires": [
            [
                "3eb7b4ad9032e7b7"
            ],
            [
                "3eb7b4ad9032e7b7"
            ]
        ]
    },
    {
        "id": "3eb7b4ad9032e7b7",
        "type": "function",
        "z": "9a024a21c0703f56",
        "name": "db.todo.scheduleStart()",
        "func": "const query = {\n    _id : msg.req.params.id\n}\n\n\nif (!msg.user.roles.includes(\"admin\")) query[\"stamp.username\"] = msg.user.username\n\nmsg.payload = [query]\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 585.0000038146973,
        "y": 750.0000019073486,
        "wires": [
            [
                "161e11b2ca64bb47"
            ]
        ],
        "outputLabels": [
            "Success"
        ]
    },
    {
        "id": "161e11b2ca64bb47",
        "type": "mongodb4",
        "z": "9a024a21c0703f56",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "todo",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 815.0000038146973,
        "y": 710.0000019073486,
        "wires": [
            [
                "d59bcc18081f390e"
            ]
        ]
    },
    {
        "id": "d59bcc18081f390e",
        "type": "function",
        "z": "9a024a21c0703f56",
        "name": "function 11",
        "func": "if (!msg.payload) {\n    msg.payload = {\n        message: \"Id ile eşleşen bir kayıt bulunamadı.\"\n    }\n    return [null, msg]\n}\n\nif (msg.req.params.type === \"schedule\" && msg.payload.done) {\n    msg.error = {\n        message: \"Tamamlanan işler güncellenemez.\"\n    }\n    return [null, msg];\n}\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1045.0000038146973,
        "y": 710.0000019073486,
        "wires": [
            [
                "4c071291f7e1cb3a"
            ],
            []
        ]
    },
    {
        "id": "4c071291f7e1cb3a",
        "type": "template",
        "z": "9a024a21c0703f56",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Yapılacaklar Listesi</title>\n\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n    <link rel=\"stylesheet\" href=\"/font/bootstrap-icons.min.css\" />\n\n</head>\n\n<body>\n    <div class=\"container mt-5\">\n        <div class=\"row\">\n\n            <div class=\"col-md-8 offset-md-2\">\n                {{#error}}\n                <div class=\"alert alert-danger p-1 text-center\">\n                    <h4>{{message}}</h4>\n                </div>\n\n                {{/error}}\n                {{#message}}<p class=\"text-danger\">{{.}}</p>{{/message}}\n                <form action=\"/api/operation/schedule\" method=\"POST\">\n                    <input type=\"hidden\" name=\"_id\" value=\"{{payload._id}}\"/>\n                    <div class=\"mb-3\">\n                        <input required type=\"datetime-local\" name=\"datetime\" value=\"{{payload.schedule.formData.datetime}}\" class=\"form-control form-control-lg {{#error}}border-danger{{/error}}{{^error}}border-info{{/error}}\" placeholder=\"gg.aa.yyyy ss:dd\" />\n                    </div>\n                    <div class=\"mb-3 text-end\">\n                        <a class=\"btn btn-danger\" href=\"/\" type=\"submit\">Vazgeç</a>\n                        <button class=\"btn btn-outline-secondary\" type=\"reset\">Temizle</button>\n                        <button class=\"btn btn-warning px-4\" type=\"submit\">Planla</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n\n\n    <script src=\"/js/bootstrap.bundle.min.js\"></script>\n    <script>\n        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]')\n        const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))\n    </script>\n</body>\n\n</html>",
        "output": "str",
        "x": 1255.0000038146973,
        "y": 670.0000019073486,
        "wires": [
            [
                "650ff6140aa91dc2"
            ]
        ]
    },
    {
        "id": "650ff6140aa91dc2",
        "type": "http response",
        "z": "9a024a21c0703f56",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1425.0000038146973,
        "y": 670.0000019073486,
        "wires": []
    },
    {
        "id": "9ea057def023fd76",
        "type": "http in",
        "z": "9a024a21c0703f56",
        "name": "",
        "url": "/logs",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 92,
        "y": 291.00000762939453,
        "wires": [
            [
                "3a0e93769048e3b4"
            ]
        ]
    },
    {
        "id": "3a0e93769048e3b4",
        "type": "template",
        "z": "9a024a21c0703f56",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\" integrity=\"sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=\" crossorigin=\"anonymous\"></script>\n    <link href=\"https://unpkg.com/survey-core/survey-core.min.css\" type=\"text/css\" rel=\"stylesheet\">\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n    <script type=\"text/javascript\" src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n</head>\n<body>\n    \n    <div id=\"demo\" class=\"display\" style=\"width:100%\">\n    <table id=\"logTable\" class=\"display\" style=\"width:100%\">\n        <thead>\n            <tr>\n            </tr>\n        </thead>\n        <tbody>\n            <!-- Veriler JS ile yüklenecek -->\n        </tbody>\n    </table>\n</div>\n\n\n\n</body>\n</html>",
        "output": "str",
        "x": 305.33333587646484,
        "y": 290.9999990463257,
        "wires": [
            [
                "5ef79f63a3164caa"
            ]
        ]
    },
    {
        "id": "5ef79f63a3164caa",
        "type": "http response",
        "z": "9a024a21c0703f56",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 512,
        "y": 291.00000762939453,
        "wires": []
    },
    {
        "id": "8175bf4ebd5367b8",
        "type": "http in",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "url": "/login",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 140,
        "wires": [
            [
                "5def0389f768f659"
            ]
        ]
    },
    {
        "id": "5def0389f768f659",
        "type": "template",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Giriş Yap</title>\n\n  <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n  <link href=\"https://unpkg.com/survey-core/defaultV2.min.css\" rel=\"stylesheet\" />\n  <link href=\"https://unpkg.com/survey-core/survey-core.min.css\" rel=\"stylesheet\" />\n\n  <style>\n    body {\n      margin: 0;\n      padding: 0;\n      background: linear-gradient(to right, #8e44ad, #2c3e50);\n      min-height: 100vh;\n      display: flex;\n      flex-direction: column;\n    }\n\n    .navbar {\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    }\n\n    .formContainer {\n      flex: 1;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: 2rem;\n    }\n\n    .card {\n      background: rgba(255, 255, 255, 0.85);\n      border-radius: 1rem;\n      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\n      backdrop-filter: blur(10px);\n      width: 100%;\n      max-width: 500px;\n      padding: 2rem;\n    }\n\n    #surveyContainer {\n      margin-top: 1rem;\n    }\n\n    h2 {\n      font-weight: 600;\n      text-align: center;\n      color: #343a40;\n    }\n  </style>\n\n  <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\"></script>\n  <script src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n  <script src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n  <script type=\"module\" src=\"/js/form.js\"></script>\n  <script type=\"module\" src=\"/js/navigation.js\"></script>\n</head>\n\n<body>\n\n  <nav class=\"navbar navbar-light bg-light d-flex justify-content-center\">\n    <a class=\"navbar-brand btn btn-warning mt-2 mb-2\" href=\"/register\">Kayıt Ol</a>\n  </nav>\n\n  <div class=\"formContainer\">\n    <div class=\"card\">\n      <h2>Giriş Yap</h2>\n      <div id=\"surveyContainer\"></div>\n    </div>\n  </div>\n\n<script type=\"module\">\n  import FormController from \"/js/form.js\";\n  const fc = new FormController();\n  (async () => {\n    await fc.loadForm(\"login-form\");\n  })();\n</script>\n\n\n</body>\n\n</html>\n",
        "output": "str",
        "x": 500,
        "y": 140,
        "wires": [
            [
                "f14c8c94a08c8887"
            ]
        ]
    },
    {
        "id": "f14c8c94a08c8887",
        "type": "http response",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 740,
        "y": 140,
        "wires": []
    },
    {
        "id": "a4154678a5e0e0cc",
        "type": "http in",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "url": "/api/login",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 260,
        "wires": [
            [
                "5380ed06d4a4abbe"
            ]
        ]
    },
    {
        "id": "4756f073169aced8",
        "type": "jwt sign",
        "z": "a494dcc6cc32ec33",
        "name": "access",
        "alg": "HS256",
        "exp": 3600,
        "jwkurl": "",
        "jwkkid": "",
        "secret": "d051c56a37ecd1eb89a9412ed5912dc9",
        "key": "",
        "signvar": "payload",
        "storetoken": "payload",
        "x": 1320,
        "y": 180,
        "wires": [
            [
                "8889a5b0ba094e5b"
            ]
        ]
    },
    {
        "id": "05709afef941f875",
        "type": "function",
        "z": "a494dcc6cc32ec33",
        "name": "function 2",
        "func": "// eşleşmiyorsa hata\nif (!msg.match) {\n    msg.payload = {\n        success: false,\n        error : \"Kullanıcı Adı Veya Parola Hatalı\"\n    }\n    return [null,msg]\n}\n// eşleşiyorsa aşağıdaki verileri payload ile gönderiyoruz tokennde saklıcaz bu verileri ilerde verify yaparken lazım olacak\nmsg.payload = {\n    username : msg.user.username,\n    email : msg.user.email,\n    displayName : msg.user.displayName,\n    roles : msg.user.roles,\n    ip : msg.req.ip\n}\n\n\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 180,
        "wires": [
            [
                "4756f073169aced8"
            ],
            [
                "996005500b6c3bf2"
            ]
        ]
    },
    {
        "id": "5380ed06d4a4abbe",
        "type": "function",
        "z": "a494dcc6cc32ec33",
        "name": "findUser",
        "func": "// templateden username pw gelmediyse 2. çıkış\nif (!msg.payload.username || !msg.payload.password){\n    msg.payload = {\n        success : false,\n        error : \"Tüm Alanları Doldurunuz\"\n    }\n    return [null,msg]\n}\n\nmsg.formData = msg.payload\nmsg.payload = {\n    username : msg.payload.username\n}\n\n\n\n\n\n\n\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 260,
        "wires": [
            [
                "1764bdb17ea320fd"
            ],
            [
                "360ecbe7c72df3e4"
            ]
        ]
    },
    {
        "id": "2bea920614622cf1",
        "type": "bcrypt",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "action": "verify",
        "field": "formData.password",
        "hash": "user.password",
        "target": "payload",
        "assignment": "replace",
        "match": "match",
        "outputs": 1,
        "rounds": 10,
        "x": 960,
        "y": 180,
        "wires": [
            [
                "05709afef941f875"
            ]
        ]
    },
    {
        "id": "32f2dacd509a22a8",
        "type": "function",
        "z": "a494dcc6cc32ec33",
        "name": "function 3",
        "func": "const refresh = msg.payload\nmsg.payload = {\n    success: true,\n    accessToken : msg.token,\n    refreshToken : refresh\n    \n};\n\nconst logData = {\n    action : \"login\",\n    user : msg.user?.email || \"bilinmiyor\",\n    timestamp : new Date().toISOString(),\n    ip : msg.req?.ip || \"ip yok\"\n}\nconst msgForLog = {\n    payload : logData\n};\n\nmsg.headers = msg.headers || {};\nmsg.headers['Set-Cookie'] = [\n    `accessToken=${msg.payload.accessToken}; HttpOnly; Secure; Path=/; Max-age=60`,\n    `refreshToken=${msg.payload.refreshToken}; HttpOnly; Secure; Path=/; Max-Age=604800`\n    ]\n\nreturn [msg,msgForLog];\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 180,
        "wires": [
            [
                "217bc89602452b4d"
            ],
            [
                "197ec5ed892e127a"
            ]
        ]
    },
    {
        "id": "217bc89602452b4d",
        "type": "http response",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 2070,
        "y": 120,
        "wires": []
    },
    {
        "id": "1764bdb17ea320fd",
        "type": "mongodb4",
        "z": "a494dcc6cc32ec33",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 607,
        "y": 224.00001907348633,
        "wires": [
            [
                "dbc31bfaf90b0f0d"
            ]
        ]
    },
    {
        "id": "dbc31bfaf90b0f0d",
        "type": "function",
        "z": "a494dcc6cc32ec33",
        "name": "function 16",
        "func": "if (!msg.payload) {    \n    msg.payload = {\n        success : false,\n        error: \"Kullanıcı Adı Veya Parola Hatalı\"\n    }\n    return [null, msg]\n}\n\nmsg.user = msg.payload\n\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 767.9999771118164,
        "y": 224.00003242492676,
        "wires": [
            [
                "2bea920614622cf1"
            ],
            [
                "4a096ae59e58748e"
            ]
        ]
    },
    {
        "id": "42bc1ed4cbadd942",
        "type": "http in",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "url": "/register",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 460,
        "wires": [
            [
                "40efb4d3281ae5f4"
            ]
        ]
    },
    {
        "id": "40efb4d3281ae5f4",
        "type": "template",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>SIGNUP</title>\n\n  <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n  <link href=\"https://unpkg.com/survey-core/defaultV2.min.css\" rel=\"stylesheet\" />\n  <link href=\"https://unpkg.com/survey-core/survey-core.min.css\" rel=\"stylesheet\" />\n\n  <style>\n    body {\n      background: linear-gradient(to right, #8e44ad, #2c3e50);\n      height: 100vh;\n      display: flex;\n      flex-direction: column;\n    }\n\n\n    .form-wrapper {\n      flex: 1;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: 2rem;\n    }\n\n    .form-card {\n      background: rgba(255, 255, 255, 0.8);\n      padding: 2rem;\n      border-radius: 1rem;\n      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);\n      width: 100%;\n      max-width: 500px;\n      backdrop-filter: blur(10px);\n    }\n\n    #surveyContainer {\n      margin-top: 1rem;\n    }\n\n    h2 {\n      font-weight: 600;\n      text-align: center;\n      margin-bottom: 1rem;\n      color: #343a40;\n    }\n  </style>\n\n  <script src=\"https://code.jquery.com/jquery-3.7.1.min.js\"></script>\n  <script src=\"https://unpkg.com/survey-core/survey.core.min.js\"></script>\n  <script src=\"https://unpkg.com/survey-js-ui/survey-js-ui.min.js\"></script>\n  <script type=\"module\" src=\"/js/form.js\"></script>\n  <script type=\"module\" src=\"/js/navigation.js\"></script>\n</head>\n\n<body>\n\n  <div class=\"form-wrapper\">\n    <div class=\"form-card\">\n      <h2>Kayıt Ol</h2>\n      <div id=\"surveyContainer\"></div>\n    </div>\n  </div>\n\n<script type=\"module\">\n  import FormController from \"/js/form.js\";\n  const fc = new FormController();\n  (async () => {\n    await fc.loadForm(\"register-form\");\n  })();\n</script>\n\n</body>\n\n</html>\n",
        "output": "str",
        "x": 400,
        "y": 460,
        "wires": [
            [
                "401206913da407bd"
            ]
        ]
    },
    {
        "id": "401206913da407bd",
        "type": "http response",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 670,
        "y": 460,
        "wires": []
    },
    {
        "id": "3616ab108a084d83",
        "type": "http in",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "url": "/api/register",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 168.25,
        "y": 609.0000228881836,
        "wires": [
            [
                "b41224b290d09dec"
            ]
        ]
    },
    {
        "id": "b41224b290d09dec",
        "type": "function",
        "z": "a494dcc6cc32ec33",
        "name": "validation",
        "func": "msg.formData = msg.payload;\n\nif (!msg.formData.username || !msg.formData.displayName || !msg.formData.email || !msg.formData.password){\n    msg.payload = {\n        success : false,\n        error : \"Lütfen Tüm Alanları Doldurun\"\n    }\n    return [null,msg]\n}\n\n\nlet query = {\n    $or : [\n        {\n            username : msg.formData.username,\n        },\n        {\n            email : msg.formData.email\n        }\n    ]\n}\n\nmsg.payload = [query]\n\n\n\n\n\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 338.25,
        "y": 609.0000228881836,
        "wires": [
            [
                "7589e350539a0ace"
            ],
            [
                "94cab3a617f4ca4f"
            ]
        ]
    },
    {
        "id": "7589e350539a0ace",
        "type": "mongodb4",
        "z": "a494dcc6cc32ec33",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "count",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": true,
        "name": "",
        "x": 568.25,
        "y": 589.0000228881836,
        "wires": [
            [
                "76e20a3f4101d050"
            ]
        ]
    },
    {
        "id": "10ed3dc0692b9af7",
        "type": "function",
        "z": "a494dcc6cc32ec33",
        "name": "function 19",
        "func": "const date = new Date();\nconst now = date.getTime()\n\nif (msg.payload){\n    msg.payload = {\n        success:false,\n        error : \"Kullanıcı Adı veya email zaten kullanılıyor\"\n    }\n    return [null, msg];  // hata çıkışı\n}\n\nconst logData = {\n    action : \"register\",\n    user : msg.user?.email || \"bilinmiyor\",\n    timestamp : new Date().toISOString,\n    ip : msg.req?.ip || \"\"\n}\n\nmsg.payload = {\n    _id: now,\n    username : msg.formData.username,\n    email : msg.formData.email,\n    displayName : msg.formData.displayName,\n    password : msg.formData.password,\n    active: true,\n    stamp: {\n        createdAt: now,\n        ip: msg.req.ip,\n        username: msg.formData.username || \"\",\n        email: msg.formData.email || \"\",\n    },\n    roles: [\"user\"],\n    date: date.toLocaleDateString(\"TR\"),\n    time: date.toLocaleTimeString(\"TR\"),\n    // eğer başka bir veri varsa bunlarıda ekle dedik password mesela direkt eklenicek\n};\n\nconst msgForLog = {\n    payload : logData\n}\n\nreturn [msg,null,msgForLog];",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 921.25,
        "y": 585.0000038146973,
        "wires": [
            [
                "d9cbac2404fe6a7a"
            ],
            [
                "9ccbb62efea89182"
            ],
            [
                "5072ed37a8752a0a"
            ]
        ]
    },
    {
        "id": "5e99b1bb4e1f9782",
        "type": "http response",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1301.25,
        "y": 565.0000038146973,
        "wires": []
    },
    {
        "id": "76e20a3f4101d050",
        "type": "bcrypt",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "action": "encrypt",
        "field": "formData.password",
        "hash": "payload",
        "target": "payload.password",
        "assignment": "replace",
        "match": "match",
        "outputs": 1,
        "rounds": 10,
        "x": 728.25,
        "y": 589.0000228881836,
        "wires": [
            [
                "10ed3dc0692b9af7"
            ]
        ]
    },
    {
        "id": "9ccbb62efea89182",
        "type": "http response",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1161.25,
        "y": 625.0000038146973,
        "wires": []
    },
    {
        "id": "94cab3a617f4ca4f",
        "type": "http response",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 541.25,
        "y": 665.0000038146973,
        "wires": []
    },
    {
        "id": "360ecbe7c72df3e4",
        "type": "http response",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 550,
        "y": 300,
        "wires": []
    },
    {
        "id": "4a096ae59e58748e",
        "type": "http response",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 912.9332885742188,
        "y": 263.9333190917969,
        "wires": []
    },
    {
        "id": "996005500b6c3bf2",
        "type": "http response",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1290,
        "y": 240,
        "wires": []
    },
    {
        "id": "d9cbac2404fe6a7a",
        "type": "mongodb4",
        "z": "a494dcc6cc32ec33",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "user",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 1131.25,
        "y": 565.0000038146973,
        "wires": [
            [
                "5e99b1bb4e1f9782"
            ]
        ]
    },
    {
        "id": "4ba3f9c3fa97b4fc",
        "type": "jwt sign",
        "z": "a494dcc6cc32ec33",
        "name": "refresh",
        "alg": "HS256",
        "exp": 3600,
        "jwkurl": "",
        "jwkkid": "",
        "secret": "21821f287ef6747b1d9161b29e52c1ed",
        "key": "",
        "signvar": "payload",
        "storetoken": "payload",
        "x": 1660,
        "y": 180,
        "wires": [
            [
                "32f2dacd509a22a8"
            ]
        ]
    },
    {
        "id": "8889a5b0ba094e5b",
        "type": "function",
        "z": "a494dcc6cc32ec33",
        "name": "function 25",
        "func": "msg.token = msg.payload\nmsg.payload = {\n    username : msg.user.username,\n    displayName : msg.user.displayName,\n    roles : msg.user.roles,\n    ip : msg.req.ip\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 180,
        "wires": [
            [
                "4ba3f9c3fa97b4fc"
            ]
        ]
    },
    {
        "id": "fc769ebf839a5a06",
        "type": "http in",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "url": "/api/refresh-token",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 921.250020980835,
        "wires": [
            [
                "78b4e530ccb81d0d"
            ]
        ]
    },
    {
        "id": "db5a54ef18e5e7d3",
        "type": "http response",
        "z": "a494dcc6cc32ec33",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1300,
        "y": 921.250020980835,
        "wires": []
    },
    {
        "id": "a308166d35578658",
        "type": "jwt verify",
        "z": "a494dcc6cc32ec33",
        "name": "refreshverify",
        "alg": [
            "HS256"
        ],
        "jwkurl": "",
        "secret": "21821f287ef6747b1d9161b29e52c1ed",
        "key": "",
        "signvar": "payload",
        "storetoken": "payload",
        "x": 540,
        "y": 921.250020980835,
        "wires": [
            [
                "aa3047f4a0c61364"
            ]
        ]
    },
    {
        "id": "aa3047f4a0c61364",
        "type": "function",
        "z": "a494dcc6cc32ec33",
        "name": "function 27",
        "func": "msg.user = msg.payload\nmsg.payload = {\n    username: msg.user.username,\n    displayName: msg.user.displayName,\n    roles: msg.user.roles,\n    ip: msg.req.ip\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 920,
        "wires": [
            [
                "cb098f21c287e8cf"
            ]
        ]
    },
    {
        "id": "cb098f21c287e8cf",
        "type": "jwt sign",
        "z": "a494dcc6cc32ec33",
        "name": "accessToken",
        "alg": "HS256",
        "exp": 3600,
        "jwkurl": "",
        "jwkkid": "",
        "secret": "d051c56a37ecd1eb89a9412ed5912dc9",
        "key": "",
        "signvar": "payload",
        "storetoken": "payload",
        "x": 940,
        "y": 921.250020980835,
        "wires": [
            [
                "96f6f26210ec81f5"
            ]
        ]
    },
    {
        "id": "96f6f26210ec81f5",
        "type": "function",
        "z": "a494dcc6cc32ec33",
        "name": "function 28",
        "func": "msg.payload = {\n    success: true,\n    token: msg.payload,\n};\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 921.250020980835,
        "wires": [
            [
                "db5a54ef18e5e7d3"
            ]
        ]
    },
    {
        "id": "78b4e530ccb81d0d",
        "type": "function",
        "z": "a494dcc6cc32ec33",
        "name": "function 29",
        "func": "msg.payload = msg.payload.refreshToken\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 921.250020980835,
        "wires": [
            [
                "a308166d35578658"
            ]
        ]
    },
    {
        "id": "197ec5ed892e127a",
        "type": "mongodb4",
        "z": "a494dcc6cc32ec33",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "logs",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 2060,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "5072ed37a8752a0a",
        "type": "mongodb4",
        "z": "a494dcc6cc32ec33",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "logs",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 1041.25,
        "y": 685.0000038146973,
        "wires": [
            []
        ]
    },
    {
        "id": "a74d907a106e924b",
        "type": "inject",
        "z": "b3c1ef86c9e1d050",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 09 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 140,
        "wires": [
            [
                "fb9a6a9d168cc291"
            ]
        ]
    },
    {
        "id": "fb9a6a9d168cc291",
        "type": "function",
        "z": "b3c1ef86c9e1d050",
        "name": "function 32",
        "func": "msg.payload = {}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 140,
        "wires": [
            [
                "d11840883418051f"
            ]
        ]
    },
    {
        "id": "d11840883418051f",
        "type": "mongodb4",
        "z": "b3c1ef86c9e1d050",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "todo",
        "operation": "find",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 620,
        "y": 140,
        "wires": [
            [
                "11b8110c1ea7e906"
            ]
        ]
    },
    {
        "id": "11b8110c1ea7e906",
        "type": "function",
        "z": "b3c1ef86c9e1d050",
        "name": "function 33",
        "func": "const date = new Date();\nconst threeDaysLater = new Date(date);\n\nthreeDaysLater.setDate(date.getDate() + 3);\n\nmsg.payload = msg.payload.filter(todo =>{\n    const due = new Date(todo.due_date);\n    return due.toDateString() === threeDaysLater.toDateString()\n} )\n\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 140,
        "wires": [
            [
                "efacfe50450f264d"
            ]
        ]
    },
    {
        "id": "efacfe50450f264d",
        "type": "split",
        "z": "b3c1ef86c9e1d050",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 1060,
        "y": 140,
        "wires": [
            [
                "18610c648bdeb780"
            ]
        ]
    },
    {
        "id": "18610c648bdeb780",
        "type": "function",
        "z": "b3c1ef86c9e1d050",
        "name": "function 34",
        "func": "msg.to = msg.payload.stamp?.email || \"\";\nmsg.subject = \"Görev Hatırlatma\";\nmsg.payload = `Merhaba ${msg.payload.name} adlı görevinizin bitmesine 3 gün kaldı`\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 140,
        "wires": [
            [
                "5c9db1794fd08d68"
            ]
        ]
    },
    {
        "id": "5c9db1794fd08d68",
        "type": "e-mail",
        "z": "b3c1ef86c9e1d050",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 1410,
        "y": 140,
        "wires": []
    },
    {
        "id": "a5693f68bbcb48ce",
        "type": "comment",
        "z": "b3c1ef86c9e1d050",
        "name": "Her sabah 9 da bitime 3 gün kalan görevleri bulur mail atar",
        "info": "",
        "x": 350,
        "y": 100,
        "wires": []
    },
    {
        "id": "962dad44f67d8b20",
        "type": "inject",
        "z": "b3c1ef86c9e1d050",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 09 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 211.9999656677246,
        "y": 317.0000066757202,
        "wires": [
            [
                "bf404fed420b9b2c"
            ]
        ]
    },
    {
        "id": "bf404fed420b9b2c",
        "type": "function",
        "z": "b3c1ef86c9e1d050",
        "name": "function 35",
        "func": "msg.payload = {}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 411.9999656677246,
        "y": 317.0000066757202,
        "wires": [
            [
                "fa1d0f54a435b5df"
            ]
        ]
    },
    {
        "id": "fa1d0f54a435b5df",
        "type": "mongodb4",
        "z": "b3c1ef86c9e1d050",
        "clientNode": "eb3bb1a5b4cedf9b",
        "mode": "collection",
        "collection": "todo",
        "operation": "find",
        "output": "toArray",
        "maxTimeMS": "0",
        "handleDocId": false,
        "name": "",
        "x": 611.9999656677246,
        "y": 317.0000066757202,
        "wires": [
            [
                "b6dc9691aeb46455"
            ]
        ]
    },
    {
        "id": "b6dc9691aeb46455",
        "type": "function",
        "z": "b3c1ef86c9e1d050",
        "name": "function 36",
        "func": "const date = new Date();\n\nmsg.payload = msg.payload.filter(todo => {\n    const dueDate = new Date(todo.due_date);\n    return dueDate.toDateString() < date.toDateString()\n})\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 791.9999656677246,
        "y": 317.0000066757202,
        "wires": [
            [
                "fc510dc0c20f406f"
            ]
        ]
    },
    {
        "id": "fc510dc0c20f406f",
        "type": "split",
        "z": "b3c1ef86c9e1d050",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 971.9999656677246,
        "y": 317.0000066757202,
        "wires": [
            [
                "635174db67be01ab"
            ]
        ]
    },
    {
        "id": "635174db67be01ab",
        "type": "function",
        "z": "b3c1ef86c9e1d050",
        "name": "function 37",
        "func": "msg.to = msg.payload.stamp?.email || \"\";\nmsg.subject = \"Görevin Süresi Doldu\";\nmsg.payload = `${msg.payload.name} isimli görevinizin süresi doldu`\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1141.9999656677246,
        "y": 317.0000066757202,
        "wires": [
            [
                "4dabb7ef4563a924"
            ]
        ]
    },
    {
        "id": "4dabb7ef4563a924",
        "type": "e-mail",
        "z": "b3c1ef86c9e1d050",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "",
        "x": 1330,
        "y": 320,
        "wires": []
    },
    {
        "id": "368f834c8e74e777",
        "type": "comment",
        "z": "b3c1ef86c9e1d050",
        "name": "Her sabah 9 da biten görevleri çeker mail atar",
        "info": "",
        "x": 290,
        "y": 260,
        "wires": []
    }
]